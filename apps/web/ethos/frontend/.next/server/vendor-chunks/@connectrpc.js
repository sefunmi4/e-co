"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@connectrpc";
exports.ids = ["vendor-chunks/@connectrpc"];
exports.modules = {

/***/ "(ssr)/./node_modules/@connectrpc/connect-web/dist/esm/assert-fetch-api.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect-web/dist/esm/assert-fetch-api.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertFetchApi: () => (/* binding */ assertFetchApi)\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Asserts that the fetch API is available.\n */\nfunction assertFetchApi() {\n    try {\n        new Headers();\n    }\n    catch (_) {\n        throw new Error(\"connect-web requires the fetch API. Are you running on an old version of Node.js? Node.js is not supported in Connect for Web - please stay tuned for Connect for Node.\");\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC13ZWIvZGlzdC9lc20vYXNzZXJ0LWZldGNoLWFwaS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGUtY28vZXRob3MtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC13ZWIvZGlzdC9lc20vYXNzZXJ0LWZldGNoLWFwaS5qcz83NWM1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgVGhlIENvbm5lY3QgQXV0aG9yc1xuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4vKipcbiAqIEFzc2VydHMgdGhhdCB0aGUgZmV0Y2ggQVBJIGlzIGF2YWlsYWJsZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydEZldGNoQXBpKCkge1xuICAgIHRyeSB7XG4gICAgICAgIG5ldyBIZWFkZXJzKCk7XG4gICAgfVxuICAgIGNhdGNoIChfKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcImNvbm5lY3Qtd2ViIHJlcXVpcmVzIHRoZSBmZXRjaCBBUEkuIEFyZSB5b3UgcnVubmluZyBvbiBhbiBvbGQgdmVyc2lvbiBvZiBOb2RlLmpzPyBOb2RlLmpzIGlzIG5vdCBzdXBwb3J0ZWQgaW4gQ29ubmVjdCBmb3IgV2ViIC0gcGxlYXNlIHN0YXkgdHVuZWQgZm9yIENvbm5lY3QgZm9yIE5vZGUuXCIpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect-web/dist/esm/assert-fetch-api.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect-web/dist/esm/connect-transport.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect-web/dist/esm/connect-transport.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createConnectTransport: () => (/* binding */ createConnectTransport)\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @bufbuild/protobuf */ \"(ssr)/./node_modules/@bufbuild/protobuf/dist/esm/service-type.js\");\n/* harmony import */ var _connectrpc_connect__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @connectrpc/connect */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/context-values.js\");\n/* harmony import */ var _connectrpc_connect__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @connectrpc/connect */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/http-headers.js\");\n/* harmony import */ var _connectrpc_connect__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @connectrpc/connect */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _connectrpc_connect__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @connectrpc/connect */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @connectrpc/connect/protocol */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/serialization.js\");\n/* harmony import */ var _connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @connectrpc/connect/protocol */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/run-call.js\");\n/* harmony import */ var _connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @connectrpc/connect/protocol */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/create-method-url.js\");\n/* harmony import */ var _connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @connectrpc/connect/protocol */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/envelope.js\");\n/* harmony import */ var _connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @connectrpc/connect/protocol */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/compression.js\");\n/* harmony import */ var _connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @connectrpc/connect/protocol-connect */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/request-header.js\");\n/* harmony import */ var _connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @connectrpc/connect/protocol-connect */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/get-request.js\");\n/* harmony import */ var _connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @connectrpc/connect/protocol-connect */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/validate-response.js\");\n/* harmony import */ var _connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @connectrpc/connect/protocol-connect */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/error-json.js\");\n/* harmony import */ var _connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @connectrpc/connect/protocol-connect */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/trailer-mux.js\");\n/* harmony import */ var _connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @connectrpc/connect/protocol-connect */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/end-stream.js\");\n/* harmony import */ var _assert_fetch_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./assert-fetch-api.js */ \"(ssr)/./node_modules/@connectrpc/connect-web/dist/esm/assert-fetch-api.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __await = (undefined && undefined.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (undefined && undefined.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\n\n\n\n\n\n/**\n * Create a Transport for the Connect protocol, which makes unary and\n * server-streaming methods available to web browsers. It uses the fetch\n * API to make HTTP requests.\n */\nfunction createConnectTransport(options) {\n    var _a;\n    (0,_assert_fetch_api_js__WEBPACK_IMPORTED_MODULE_0__.assertFetchApi)();\n    const useBinaryFormat = (_a = options.useBinaryFormat) !== null && _a !== void 0 ? _a : false;\n    return {\n        async unary(service, method, signal, timeoutMs, header, message, contextValues) {\n            var _a;\n            const { serialize, parse } = (0,_connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_1__.createClientMethodSerializers)(method, useBinaryFormat, options.jsonOptions, options.binaryOptions);\n            timeoutMs =\n                timeoutMs === undefined\n                    ? options.defaultTimeoutMs\n                    : timeoutMs <= 0\n                        ? undefined\n                        : timeoutMs;\n            return await (0,_connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_2__.runUnaryCall)({\n                interceptors: options.interceptors,\n                signal,\n                timeoutMs,\n                req: {\n                    stream: false,\n                    service,\n                    method,\n                    url: (0,_connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_3__.createMethodUrl)(options.baseUrl, service, method),\n                    init: {\n                        method: \"POST\",\n                        credentials: (_a = options.credentials) !== null && _a !== void 0 ? _a : \"same-origin\",\n                        redirect: \"error\",\n                        mode: \"cors\",\n                    },\n                    header: (0,_connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_4__.requestHeader)(method.kind, useBinaryFormat, timeoutMs, header, false),\n                    contextValues: contextValues !== null && contextValues !== void 0 ? contextValues : (0,_connectrpc_connect__WEBPACK_IMPORTED_MODULE_5__.createContextValues)(),\n                    message,\n                },\n                next: async (req) => {\n                    var _a;\n                    const useGet = options.useHttpGet === true &&\n                        method.idempotency === _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_6__.MethodIdempotency.NoSideEffects;\n                    let body = null;\n                    if (useGet) {\n                        req = (0,_connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_7__.transformConnectPostToGetRequest)(req, serialize(req.message), useBinaryFormat);\n                    }\n                    else {\n                        body = serialize(req.message);\n                    }\n                    const fetch = (_a = options.fetch) !== null && _a !== void 0 ? _a : globalThis.fetch;\n                    const response = await fetch(req.url, Object.assign(Object.assign({}, req.init), { headers: req.header, signal: req.signal, body }));\n                    const { isUnaryError, unaryError } = (0,_connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_8__.validateResponse)(method.kind, useBinaryFormat, response.status, response.headers);\n                    if (isUnaryError) {\n                        throw (0,_connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_9__.errorFromJson)((await response.json()), (0,_connectrpc_connect__WEBPACK_IMPORTED_MODULE_10__.appendHeaders)(...(0,_connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_11__.trailerDemux)(response.headers)), unaryError);\n                    }\n                    const [demuxedHeader, demuxedTrailer] = (0,_connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_11__.trailerDemux)(response.headers);\n                    return {\n                        stream: false,\n                        service,\n                        method,\n                        header: demuxedHeader,\n                        message: useBinaryFormat\n                            ? parse(new Uint8Array(await response.arrayBuffer()))\n                            : method.O.fromJson((await response.json()), (0,_connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_1__.getJsonOptions)(options.jsonOptions)),\n                        trailer: demuxedTrailer,\n                    };\n                },\n            });\n        },\n        async stream(service, method, signal, timeoutMs, header, input, contextValues) {\n            var _a;\n            const { serialize, parse } = (0,_connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_1__.createClientMethodSerializers)(method, useBinaryFormat, options.jsonOptions, options.binaryOptions);\n            function parseResponseBody(body, trailerTarget, header, signal) {\n                return __asyncGenerator(this, arguments, function* parseResponseBody_1() {\n                    const reader = (0,_connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_12__.createEnvelopeReadableStream)(body).getReader();\n                    let endStreamReceived = false;\n                    for (;;) {\n                        const result = yield __await(reader.read());\n                        if (result.done) {\n                            break;\n                        }\n                        const { flags, data } = result.value;\n                        if ((flags & _connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_13__.compressedFlag) === _connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_13__.compressedFlag) {\n                            throw new _connectrpc_connect__WEBPACK_IMPORTED_MODULE_14__.ConnectError(`protocol error: received unsupported compressed output`, _connectrpc_connect__WEBPACK_IMPORTED_MODULE_15__.Code.Internal);\n                        }\n                        if ((flags & _connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_16__.endStreamFlag) === _connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_16__.endStreamFlag) {\n                            endStreamReceived = true;\n                            const endStream = (0,_connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_16__.endStreamFromJson)(data);\n                            if (endStream.error) {\n                                const error = endStream.error;\n                                header.forEach((value, key) => {\n                                    error.metadata.append(key, value);\n                                });\n                                throw error;\n                            }\n                            endStream.metadata.forEach((value, key) => trailerTarget.set(key, value));\n                            continue;\n                        }\n                        yield yield __await(parse(data));\n                    }\n                    // Node wil not throw an AbortError on `read` if the\n                    // signal is aborted before `getReader` is called.\n                    // As a work around we check at the end and throw.\n                    //\n                    // Ref: https://github.com/nodejs/undici/issues/1940\n                    if (\"throwIfAborted\" in signal) {\n                        // We assume that implementations without `throwIfAborted` (old\n                        // browsers) do honor aborted signals on `read`.\n                        signal.throwIfAborted();\n                    }\n                    if (!endStreamReceived) {\n                        throw \"missing EndStreamResponse\";\n                    }\n                });\n            }\n            async function createRequestBody(input) {\n                if (method.kind != _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_6__.MethodKind.ServerStreaming) {\n                    throw \"The fetch API does not support streaming request bodies\";\n                }\n                const r = await input[Symbol.asyncIterator]().next();\n                if (r.done == true) {\n                    throw \"missing request message\";\n                }\n                return (0,_connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_12__.encodeEnvelope)(0, serialize(r.value));\n            }\n            timeoutMs =\n                timeoutMs === undefined\n                    ? options.defaultTimeoutMs\n                    : timeoutMs <= 0\n                        ? undefined\n                        : timeoutMs;\n            return await (0,_connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_2__.runStreamingCall)({\n                interceptors: options.interceptors,\n                timeoutMs,\n                signal,\n                req: {\n                    stream: true,\n                    service,\n                    method,\n                    url: (0,_connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_3__.createMethodUrl)(options.baseUrl, service, method),\n                    init: {\n                        method: \"POST\",\n                        credentials: (_a = options.credentials) !== null && _a !== void 0 ? _a : \"same-origin\",\n                        redirect: \"error\",\n                        mode: \"cors\",\n                    },\n                    header: (0,_connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_4__.requestHeader)(method.kind, useBinaryFormat, timeoutMs, header, false),\n                    contextValues: contextValues !== null && contextValues !== void 0 ? contextValues : (0,_connectrpc_connect__WEBPACK_IMPORTED_MODULE_5__.createContextValues)(),\n                    message: input,\n                },\n                next: async (req) => {\n                    var _a;\n                    const fetch = (_a = options.fetch) !== null && _a !== void 0 ? _a : globalThis.fetch;\n                    const fRes = await fetch(req.url, Object.assign(Object.assign({}, req.init), { headers: req.header, signal: req.signal, body: await createRequestBody(req.message) }));\n                    (0,_connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_8__.validateResponse)(method.kind, useBinaryFormat, fRes.status, fRes.headers);\n                    if (fRes.body === null) {\n                        throw \"missing response body\";\n                    }\n                    const trailer = new Headers();\n                    const res = Object.assign(Object.assign({}, req), { header: fRes.headers, trailer, message: parseResponseBody(fRes.body, trailer, fRes.headers, req.signal) });\n                    return res;\n                },\n            });\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect-web/dist/esm/connect-transport.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/any-client.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/any-client.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   makeAnyClient: () => (/* binding */ makeAnyClient)\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Create any client for the given service.\n *\n * The given createMethod function is called for each method definition\n * of the service. The function it returns is added to the client object\n * as a method.\n */\nfunction makeAnyClient(service, createMethod) {\n    const client = {};\n    for (const [localName, methodInfo] of Object.entries(service.methods)) {\n        const method = createMethod(Object.assign(Object.assign({}, methodInfo), { localName,\n            service }));\n        if (method != null) {\n            client[localName] = method;\n        }\n    }\n    return client;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9hbnktY2xpZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0Esa0VBQWtFLGlCQUFpQjtBQUNuRixxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGUtY28vZXRob3MtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9hbnktY2xpZW50LmpzPzA0NGEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbi8qKlxuICogQ3JlYXRlIGFueSBjbGllbnQgZm9yIHRoZSBnaXZlbiBzZXJ2aWNlLlxuICpcbiAqIFRoZSBnaXZlbiBjcmVhdGVNZXRob2QgZnVuY3Rpb24gaXMgY2FsbGVkIGZvciBlYWNoIG1ldGhvZCBkZWZpbml0aW9uXG4gKiBvZiB0aGUgc2VydmljZS4gVGhlIGZ1bmN0aW9uIGl0IHJldHVybnMgaXMgYWRkZWQgdG8gdGhlIGNsaWVudCBvYmplY3RcbiAqIGFzIGEgbWV0aG9kLlxuICovXG5leHBvcnQgZnVuY3Rpb24gbWFrZUFueUNsaWVudChzZXJ2aWNlLCBjcmVhdGVNZXRob2QpIHtcbiAgICBjb25zdCBjbGllbnQgPSB7fTtcbiAgICBmb3IgKGNvbnN0IFtsb2NhbE5hbWUsIG1ldGhvZEluZm9dIG9mIE9iamVjdC5lbnRyaWVzKHNlcnZpY2UubWV0aG9kcykpIHtcbiAgICAgICAgY29uc3QgbWV0aG9kID0gY3JlYXRlTWV0aG9kKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgbWV0aG9kSW5mbyksIHsgbG9jYWxOYW1lLFxuICAgICAgICAgICAgc2VydmljZSB9KSk7XG4gICAgICAgIGlmIChtZXRob2QgIT0gbnVsbCkge1xuICAgICAgICAgICAgY2xpZW50W2xvY2FsTmFtZV0gPSBtZXRob2Q7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGNsaWVudDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/any-client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/callback-client.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/callback-client.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createCallbackClient: () => (/* binding */ createCallbackClient)\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @bufbuild/protobuf */ \"(ssr)/./node_modules/@bufbuild/protobuf/dist/esm/service-type.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./connect-error.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./code.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _any_client_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./any-client.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/any-client.js\");\n/* harmony import */ var _protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./protocol/async-iterable.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/async-iterable.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __asyncValues = (undefined && undefined.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\n\n\n\n\n\n/**\n * Create a CallbackClient for the given service, invoking RPCs through the\n * given transport.\n */\nfunction createCallbackClient(service, transport) {\n    return (0,_any_client_js__WEBPACK_IMPORTED_MODULE_0__.makeAnyClient)(service, (method) => {\n        switch (method.kind) {\n            case _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.MethodKind.Unary:\n                return createUnaryFn(transport, service, method);\n            case _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.MethodKind.ServerStreaming:\n                return createServerStreamingFn(transport, service, method);\n            default:\n                return null;\n        }\n    });\n}\nfunction createUnaryFn(transport, service, method) {\n    return function (requestMessage, callback, options) {\n        const abort = new AbortController();\n        options = wrapSignal(abort, options);\n        transport\n            .unary(service, method, abort.signal, options.timeoutMs, options.headers, requestMessage, options.contextValues)\n            .then((response) => {\n            var _a, _b;\n            (_a = options.onHeader) === null || _a === void 0 ? void 0 : _a.call(options, response.header);\n            (_b = options.onTrailer) === null || _b === void 0 ? void 0 : _b.call(options, response.trailer);\n            callback(undefined, response.message);\n        }, (reason) => {\n            const err = _connect_error_js__WEBPACK_IMPORTED_MODULE_2__.ConnectError.from(reason, _code_js__WEBPACK_IMPORTED_MODULE_3__.Code.Internal);\n            if (err.code === _code_js__WEBPACK_IMPORTED_MODULE_3__.Code.Canceled && abort.signal.aborted) {\n                // As documented, discard Canceled errors if canceled by the user.\n                return;\n            }\n            callback(err, new method.O());\n        });\n        return () => abort.abort();\n    };\n}\nfunction createServerStreamingFn(transport, service, method) {\n    return function (input, onResponse, onClose, options) {\n        const abort = new AbortController();\n        async function run() {\n            var _a, e_1, _b, _c;\n            var _d, _e;\n            options = wrapSignal(abort, options);\n            const response = await transport.stream(service, method, options.signal, options.timeoutMs, options.headers, (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_4__.createAsyncIterable)([input]), options.contextValues);\n            (_d = options.onHeader) === null || _d === void 0 ? void 0 : _d.call(options, response.header);\n            try {\n                for (var _f = true, _g = __asyncValues(response.message), _h; _h = await _g.next(), _a = _h.done, !_a; _f = true) {\n                    _c = _h.value;\n                    _f = false;\n                    const message = _c;\n                    onResponse(message);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (!_f && !_a && (_b = _g.return)) await _b.call(_g);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            (_e = options.onTrailer) === null || _e === void 0 ? void 0 : _e.call(options, response.trailer);\n            onClose(undefined);\n        }\n        run().catch((reason) => {\n            const err = _connect_error_js__WEBPACK_IMPORTED_MODULE_2__.ConnectError.from(reason, _code_js__WEBPACK_IMPORTED_MODULE_3__.Code.Internal);\n            if (err.code === _code_js__WEBPACK_IMPORTED_MODULE_3__.Code.Canceled && abort.signal.aborted) {\n                // As documented, discard Canceled errors if canceled by the user,\n                // but do invoke the close-callback.\n                onClose(undefined);\n            }\n            else {\n                onClose(err);\n            }\n        });\n        return () => abort.abort();\n    };\n}\nfunction wrapSignal(abort, options) {\n    if (options === null || options === void 0 ? void 0 : options.signal) {\n        options.signal.addEventListener(\"abort\", () => abort.abort());\n        if (options.signal.aborted) {\n            abort.abort();\n        }\n    }\n    return Object.assign(Object.assign({}, options), { signal: abort.signal });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/callback-client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/code.js":
/*!***********************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/code.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Code: () => (/* binding */ Code)\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Connect represents categories of errors as codes, and each code maps to a\n * specific HTTP status code. The codes and their semantics were chosen to\n * match gRPC. Only the codes below are valid — there are no user-defined\n * codes.\n *\n * See the specification at https://connectrpc.com/docs/protocol#error-codes\n * for details.\n */\nvar Code;\n(function (Code) {\n    /**\n     * Canceled, usually be the user\n     */\n    Code[Code[\"Canceled\"] = 1] = \"Canceled\";\n    /**\n     * Unknown error\n     */\n    Code[Code[\"Unknown\"] = 2] = \"Unknown\";\n    /**\n     * Argument invalid regardless of system state\n     */\n    Code[Code[\"InvalidArgument\"] = 3] = \"InvalidArgument\";\n    /**\n     * Operation expired, may or may not have completed.\n     */\n    Code[Code[\"DeadlineExceeded\"] = 4] = \"DeadlineExceeded\";\n    /**\n     * Entity not found.\n     */\n    Code[Code[\"NotFound\"] = 5] = \"NotFound\";\n    /**\n     * Entity already exists.\n     */\n    Code[Code[\"AlreadyExists\"] = 6] = \"AlreadyExists\";\n    /**\n     * Operation not authorized.\n     */\n    Code[Code[\"PermissionDenied\"] = 7] = \"PermissionDenied\";\n    /**\n     * Quota exhausted.\n     */\n    Code[Code[\"ResourceExhausted\"] = 8] = \"ResourceExhausted\";\n    /**\n     * Argument invalid in current system state.\n     */\n    Code[Code[\"FailedPrecondition\"] = 9] = \"FailedPrecondition\";\n    /**\n     * Operation aborted.\n     */\n    Code[Code[\"Aborted\"] = 10] = \"Aborted\";\n    /**\n     * Out of bounds, use instead of FailedPrecondition.\n     */\n    Code[Code[\"OutOfRange\"] = 11] = \"OutOfRange\";\n    /**\n     * Operation not implemented or disabled.\n     */\n    Code[Code[\"Unimplemented\"] = 12] = \"Unimplemented\";\n    /**\n     * Internal error, reserved for \"serious errors\".\n     */\n    Code[Code[\"Internal\"] = 13] = \"Internal\";\n    /**\n     * Unavailable, client should back off and retry.\n     */\n    Code[Code[\"Unavailable\"] = 14] = \"Unavailable\";\n    /**\n     * Unrecoverable data loss or corruption.\n     */\n    Code[Code[\"DataLoss\"] = 15] = \"DataLoss\";\n    /**\n     * Request isn't authenticated.\n     */\n    Code[Code[\"Unauthenticated\"] = 16] = \"Unauthenticated\";\n})(Code || (Code = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9jb2RlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsb0JBQW9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGUtY28vZXRob3MtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9jb2RlLmpzPzUxZDMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbi8qKlxuICogQ29ubmVjdCByZXByZXNlbnRzIGNhdGVnb3JpZXMgb2YgZXJyb3JzIGFzIGNvZGVzLCBhbmQgZWFjaCBjb2RlIG1hcHMgdG8gYVxuICogc3BlY2lmaWMgSFRUUCBzdGF0dXMgY29kZS4gVGhlIGNvZGVzIGFuZCB0aGVpciBzZW1hbnRpY3Mgd2VyZSBjaG9zZW4gdG9cbiAqIG1hdGNoIGdSUEMuIE9ubHkgdGhlIGNvZGVzIGJlbG93IGFyZSB2YWxpZCDigJQgdGhlcmUgYXJlIG5vIHVzZXItZGVmaW5lZFxuICogY29kZXMuXG4gKlxuICogU2VlIHRoZSBzcGVjaWZpY2F0aW9uIGF0IGh0dHBzOi8vY29ubmVjdHJwYy5jb20vZG9jcy9wcm90b2NvbCNlcnJvci1jb2Rlc1xuICogZm9yIGRldGFpbHMuXG4gKi9cbmV4cG9ydCB2YXIgQ29kZTtcbihmdW5jdGlvbiAoQ29kZSkge1xuICAgIC8qKlxuICAgICAqIENhbmNlbGVkLCB1c3VhbGx5IGJlIHRoZSB1c2VyXG4gICAgICovXG4gICAgQ29kZVtDb2RlW1wiQ2FuY2VsZWRcIl0gPSAxXSA9IFwiQ2FuY2VsZWRcIjtcbiAgICAvKipcbiAgICAgKiBVbmtub3duIGVycm9yXG4gICAgICovXG4gICAgQ29kZVtDb2RlW1wiVW5rbm93blwiXSA9IDJdID0gXCJVbmtub3duXCI7XG4gICAgLyoqXG4gICAgICogQXJndW1lbnQgaW52YWxpZCByZWdhcmRsZXNzIG9mIHN5c3RlbSBzdGF0ZVxuICAgICAqL1xuICAgIENvZGVbQ29kZVtcIkludmFsaWRBcmd1bWVudFwiXSA9IDNdID0gXCJJbnZhbGlkQXJndW1lbnRcIjtcbiAgICAvKipcbiAgICAgKiBPcGVyYXRpb24gZXhwaXJlZCwgbWF5IG9yIG1heSBub3QgaGF2ZSBjb21wbGV0ZWQuXG4gICAgICovXG4gICAgQ29kZVtDb2RlW1wiRGVhZGxpbmVFeGNlZWRlZFwiXSA9IDRdID0gXCJEZWFkbGluZUV4Y2VlZGVkXCI7XG4gICAgLyoqXG4gICAgICogRW50aXR5IG5vdCBmb3VuZC5cbiAgICAgKi9cbiAgICBDb2RlW0NvZGVbXCJOb3RGb3VuZFwiXSA9IDVdID0gXCJOb3RGb3VuZFwiO1xuICAgIC8qKlxuICAgICAqIEVudGl0eSBhbHJlYWR5IGV4aXN0cy5cbiAgICAgKi9cbiAgICBDb2RlW0NvZGVbXCJBbHJlYWR5RXhpc3RzXCJdID0gNl0gPSBcIkFscmVhZHlFeGlzdHNcIjtcbiAgICAvKipcbiAgICAgKiBPcGVyYXRpb24gbm90IGF1dGhvcml6ZWQuXG4gICAgICovXG4gICAgQ29kZVtDb2RlW1wiUGVybWlzc2lvbkRlbmllZFwiXSA9IDddID0gXCJQZXJtaXNzaW9uRGVuaWVkXCI7XG4gICAgLyoqXG4gICAgICogUXVvdGEgZXhoYXVzdGVkLlxuICAgICAqL1xuICAgIENvZGVbQ29kZVtcIlJlc291cmNlRXhoYXVzdGVkXCJdID0gOF0gPSBcIlJlc291cmNlRXhoYXVzdGVkXCI7XG4gICAgLyoqXG4gICAgICogQXJndW1lbnQgaW52YWxpZCBpbiBjdXJyZW50IHN5c3RlbSBzdGF0ZS5cbiAgICAgKi9cbiAgICBDb2RlW0NvZGVbXCJGYWlsZWRQcmVjb25kaXRpb25cIl0gPSA5XSA9IFwiRmFpbGVkUHJlY29uZGl0aW9uXCI7XG4gICAgLyoqXG4gICAgICogT3BlcmF0aW9uIGFib3J0ZWQuXG4gICAgICovXG4gICAgQ29kZVtDb2RlW1wiQWJvcnRlZFwiXSA9IDEwXSA9IFwiQWJvcnRlZFwiO1xuICAgIC8qKlxuICAgICAqIE91dCBvZiBib3VuZHMsIHVzZSBpbnN0ZWFkIG9mIEZhaWxlZFByZWNvbmRpdGlvbi5cbiAgICAgKi9cbiAgICBDb2RlW0NvZGVbXCJPdXRPZlJhbmdlXCJdID0gMTFdID0gXCJPdXRPZlJhbmdlXCI7XG4gICAgLyoqXG4gICAgICogT3BlcmF0aW9uIG5vdCBpbXBsZW1lbnRlZCBvciBkaXNhYmxlZC5cbiAgICAgKi9cbiAgICBDb2RlW0NvZGVbXCJVbmltcGxlbWVudGVkXCJdID0gMTJdID0gXCJVbmltcGxlbWVudGVkXCI7XG4gICAgLyoqXG4gICAgICogSW50ZXJuYWwgZXJyb3IsIHJlc2VydmVkIGZvciBcInNlcmlvdXMgZXJyb3JzXCIuXG4gICAgICovXG4gICAgQ29kZVtDb2RlW1wiSW50ZXJuYWxcIl0gPSAxM10gPSBcIkludGVybmFsXCI7XG4gICAgLyoqXG4gICAgICogVW5hdmFpbGFibGUsIGNsaWVudCBzaG91bGQgYmFjayBvZmYgYW5kIHJldHJ5LlxuICAgICAqL1xuICAgIENvZGVbQ29kZVtcIlVuYXZhaWxhYmxlXCJdID0gMTRdID0gXCJVbmF2YWlsYWJsZVwiO1xuICAgIC8qKlxuICAgICAqIFVucmVjb3ZlcmFibGUgZGF0YSBsb3NzIG9yIGNvcnJ1cHRpb24uXG4gICAgICovXG4gICAgQ29kZVtDb2RlW1wiRGF0YUxvc3NcIl0gPSAxNV0gPSBcIkRhdGFMb3NzXCI7XG4gICAgLyoqXG4gICAgICogUmVxdWVzdCBpc24ndCBhdXRoZW50aWNhdGVkLlxuICAgICAqL1xuICAgIENvZGVbQ29kZVtcIlVuYXV0aGVudGljYXRlZFwiXSA9IDE2XSA9IFwiVW5hdXRoZW50aWNhdGVkXCI7XG59KShDb2RlIHx8IChDb2RlID0ge30pKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/code.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js":
/*!********************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/connect-error.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConnectError: () => (/* binding */ ConnectError)\n/* harmony export */ });\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./code.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _protocol_connect_code_string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./protocol-connect/code-string.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/code-string.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * ConnectError captures four pieces of information: a Code, an error\n * message, an optional cause of the error, and an optional collection of\n * arbitrary Protobuf messages called  \"details\".\n *\n * Because developer tools typically show just the error message, we prefix\n * it with the status code, so that the most important information is always\n * visible immediately.\n *\n * Error details are wrapped with google.protobuf.Any on the wire, so that\n * a server or middleware can attach arbitrary data to an error. Use the\n * method findDetails() to retrieve the details.\n */\nclass ConnectError extends Error {\n    /**\n     * Create a new ConnectError.\n     * If no code is provided, code \"unknown\" is used.\n     * Outgoing details are only relevant for the server side - a service may\n     * raise an error with details, and it is up to the protocol implementation\n     * to encode and send the details along with error.\n     */\n    constructor(message, code = _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unknown, metadata, outgoingDetails, cause) {\n        super(createMessage(message, code));\n        this.name = \"ConnectError\";\n        // see https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-2.html#example\n        Object.setPrototypeOf(this, new.target.prototype);\n        this.rawMessage = message;\n        this.code = code;\n        this.metadata = new Headers(metadata !== null && metadata !== void 0 ? metadata : {});\n        this.details = outgoingDetails !== null && outgoingDetails !== void 0 ? outgoingDetails : [];\n        this.cause = cause;\n    }\n    /**\n     * Convert any value - typically a caught error into a ConnectError,\n     * following these rules:\n     * - If the value is already a ConnectError, return it as is.\n     * - If the value is an AbortError from the fetch API, return the message\n     *   of the AbortError with code Canceled.\n     * - For other Errors, return the error message with code Unknown by default.\n     * - For other values, return the values String representation as a message,\n     *   with the code Unknown by default.\n     * The original value will be used for the \"cause\" property for the new\n     * ConnectError.\n     */\n    static from(reason, code = _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unknown) {\n        if (reason instanceof ConnectError) {\n            return reason;\n        }\n        if (reason instanceof Error) {\n            if (reason.name == \"AbortError\") {\n                // Fetch requests can only be canceled with an AbortController.\n                // We detect that condition by looking at the name of the raised\n                // error object, and translate to the appropriate status code.\n                return new ConnectError(reason.message, _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Canceled);\n            }\n            return new ConnectError(reason.message, code, undefined, undefined, reason);\n        }\n        return new ConnectError(String(reason), code, undefined, undefined, reason);\n    }\n    static [Symbol.hasInstance](v) {\n        if (!(v instanceof Error)) {\n            return false;\n        }\n        if (Object.getPrototypeOf(v) === ConnectError.prototype) {\n            return true;\n        }\n        return (v.name === \"ConnectError\" &&\n            \"code\" in v &&\n            typeof v.code === \"number\" &&\n            \"metadata\" in v &&\n            \"details\" in v &&\n            Array.isArray(v.details) &&\n            \"rawMessage\" in v &&\n            typeof v.rawMessage == \"string\" &&\n            \"cause\" in v);\n    }\n    findDetails(typeOrRegistry) {\n        const registry = \"typeName\" in typeOrRegistry\n            ? {\n                findMessage: (typeName) => typeName === typeOrRegistry.typeName ? typeOrRegistry : undefined,\n            }\n            : typeOrRegistry;\n        const details = [];\n        for (const data of this.details) {\n            if (\"getType\" in data) {\n                if (registry.findMessage(data.getType().typeName)) {\n                    details.push(data);\n                }\n                continue;\n            }\n            const type = registry.findMessage(data.type);\n            if (type) {\n                try {\n                    details.push(type.fromBinary(data.value));\n                }\n                catch (_) {\n                    // We silently give up if we are unable to parse the detail, because\n                    // that appears to be the least worst behavior.\n                    // It is very unlikely that a user surrounds a catch body handling the\n                    // error with another try-catch statement, and we do not want to\n                    // recommend doing so.\n                }\n            }\n        }\n        return details;\n    }\n}\n/**\n * Create an error message, prefixing the given code.\n */\nfunction createMessage(message, code) {\n    return message.length\n        ? `[${(0,_protocol_connect_code_string_js__WEBPACK_IMPORTED_MODULE_1__.codeToString)(code)}] ${message}`\n        : `[${(0,_protocol_connect_code_string_js__WEBPACK_IMPORTED_MODULE_1__.codeToString)(code)}]`;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/context-values.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/context-values.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createContextKey: () => (/* binding */ createContextKey),\n/* harmony export */   createContextValues: () => (/* binding */ createContextValues)\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * createContextValues creates a new ContextValues.\n */\nfunction createContextValues() {\n    return {\n        get(key) {\n            return key.id in this ? this[key.id] : key.defaultValue;\n        },\n        set(key, value) {\n            this[key.id] = value;\n            return this;\n        },\n        delete(key) {\n            delete this[key.id];\n            return this;\n        },\n    };\n}\n/**\n * createContextKey creates a new ContextKey.\n */\nfunction createContextKey(defaultValue, options) {\n    return { id: Symbol(options === null || options === void 0 ? void 0 : options.description), defaultValue };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9jb250ZXh0LXZhbHVlcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxhQUFhO0FBQ2IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZS1jby9ldGhvcy1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AY29ubmVjdHJwYy9jb25uZWN0L2Rpc3QvZXNtL2NvbnRleHQtdmFsdWVzLmpzPzg5YjciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbi8qKlxuICogY3JlYXRlQ29udGV4dFZhbHVlcyBjcmVhdGVzIGEgbmV3IENvbnRleHRWYWx1ZXMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb250ZXh0VmFsdWVzKCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIGdldChrZXkpIHtcbiAgICAgICAgICAgIHJldHVybiBrZXkuaWQgaW4gdGhpcyA/IHRoaXNba2V5LmlkXSA6IGtleS5kZWZhdWx0VmFsdWU7XG4gICAgICAgIH0sXG4gICAgICAgIHNldChrZXksIHZhbHVlKSB7XG4gICAgICAgICAgICB0aGlzW2tleS5pZF0gPSB2YWx1ZTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9LFxuICAgICAgICBkZWxldGUoa2V5KSB7XG4gICAgICAgICAgICBkZWxldGUgdGhpc1trZXkuaWRdO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbi8qKlxuICogY3JlYXRlQ29udGV4dEtleSBjcmVhdGVzIGEgbmV3IENvbnRleHRLZXkuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb250ZXh0S2V5KGRlZmF1bHRWYWx1ZSwgb3B0aW9ucykge1xuICAgIHJldHVybiB7IGlkOiBTeW1ib2wob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmRlc2NyaXB0aW9uKSwgZGVmYXVsdFZhbHVlIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/context-values.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/cors.js":
/*!***********************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/cors.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cors: () => (/* binding */ cors)\n/* harmony export */ });\n/* harmony import */ var _protocol_connect_headers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./protocol-connect/headers.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/headers.js\");\n/* harmony import */ var _protocol_grpc_headers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./protocol-grpc-web/headers.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/headers.js\");\n/* harmony import */ var _protocol_grpc_web_headers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./protocol-grpc-web/headers.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/headers.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n/**\n * CORS prevents rogue scripts in a web browser from making arbitrary requests\n * to other web servers.\n *\n * This object provides helpful constants to configure CORS middleware for\n * cross-domain requests with the protocols supported by Connect.\n *\n * Make sure to add application-specific headers that your application\n * uses as well.\n */\nconst cors = {\n    /**\n     * Request methods that scripts running in the browser are permitted to use.\n     *\n     * To support cross-domain requests with the protocols supported by Connect,\n     * these headers fields must be included in the preflight response header\n     * Access-Control-Allow-Methods.\n     */\n    allowedMethods: [\"POST\", \"GET\"],\n    /**\n     * Header fields that scripts running in the browser are permitted to send.\n     *\n     * To support cross-domain requests with the protocols supported by Connect,\n     * these field names must be included in the preflight response header\n     * Access-Control-Allow-Headers.\n     *\n     * Make sure to include any application-specific headers your browser client\n     * may send.\n     */\n    allowedHeaders: [\n        _protocol_connect_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerContentType,\n        _protocol_connect_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerProtocolVersion,\n        _protocol_connect_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerTimeout,\n        _protocol_connect_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerStreamEncoding, // Unused in web browsers, but added for future-proofing\n        _protocol_connect_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerStreamAcceptEncoding, // Unused in web browsers, but added for future-proofing\n        _protocol_connect_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerUnaryEncoding, // Unused in web browsers, but added for future-proofing\n        _protocol_connect_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerUnaryAcceptEncoding, // Unused in web browsers, but added for future-proofing\n        _protocol_grpc_headers_js__WEBPACK_IMPORTED_MODULE_1__.headerMessageType, // Unused in web browsers, but added for future-proofing\n        _protocol_grpc_web_headers_js__WEBPACK_IMPORTED_MODULE_2__.headerXGrpcWeb,\n        _protocol_grpc_web_headers_js__WEBPACK_IMPORTED_MODULE_2__.headerXUserAgent,\n        _protocol_grpc_headers_js__WEBPACK_IMPORTED_MODULE_1__.headerTimeout,\n    ],\n    /**\n     * Header fields that scripts running the browser are permitted to see.\n     *\n     * To support cross-domain requests with the protocols supported by Connect,\n     * these field names must be included in header Access-Control-Expose-Headers\n     * of the actual response.\n     *\n     * Make sure to include any application-specific headers your browser client\n     * should see. If your application uses trailers, they will be sent as header\n     * fields with a `Trailer-` prefix for Connect unary RPCs - make sure to\n     * expose them as well if you want them to be visible in all supported\n     * protocols.\n     */\n    exposedHeaders: [\n        _protocol_grpc_headers_js__WEBPACK_IMPORTED_MODULE_1__.headerGrpcStatus, // Crucial for gRPC-web\n        _protocol_grpc_headers_js__WEBPACK_IMPORTED_MODULE_1__.headerGrpcMessage, // Crucial for gRPC-web\n        _protocol_grpc_headers_js__WEBPACK_IMPORTED_MODULE_1__.headerStatusDetailsBin, // Error details in gRPC, gRPC-web\n        _protocol_connect_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerUnaryEncoding, // Unused in web browsers, but added for future-proofing\n        _protocol_connect_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerStreamEncoding, // Unused in web browsers, but added for future-proofing\n    ],\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9jb3JzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUN5RDtBQUNOO0FBQ087QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSwyRUFBeUI7QUFDakMsUUFBUSwrRUFBNkI7QUFDckMsUUFBUSx1RUFBcUI7QUFDN0IsUUFBUSw4RUFBNEI7QUFDcEMsUUFBUSxvRkFBa0M7QUFDMUMsUUFBUSw2RUFBMkI7QUFDbkMsUUFBUSxtRkFBaUM7QUFDekMsUUFBUSx3RUFBc0I7QUFDOUIsUUFBUSx5RUFBc0I7QUFDOUIsUUFBUSwyRUFBd0I7QUFDaEMsUUFBUSxvRUFBcUI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSx1RUFBd0I7QUFDaEMsUUFBUSx3RUFBeUI7QUFDakMsUUFBUSw2RUFBOEI7QUFDdEMsUUFBUSw2RUFBMkI7QUFDbkMsUUFBUSw4RUFBNEI7QUFDcEM7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BlLWNvL2V0aG9zLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0Bjb25uZWN0cnBjL2Nvbm5lY3QvZGlzdC9lc20vY29ycy5qcz9jMDdhIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgVGhlIENvbm5lY3QgQXV0aG9yc1xuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5pbXBvcnQgKiBhcyBjb25uZWN0IGZyb20gXCIuL3Byb3RvY29sLWNvbm5lY3QvaGVhZGVycy5qc1wiO1xuaW1wb3J0ICogYXMgZ3JwYyBmcm9tIFwiLi9wcm90b2NvbC1ncnBjL2hlYWRlcnMuanNcIjtcbmltcG9ydCAqIGFzIGdycGNXZWIgZnJvbSBcIi4vcHJvdG9jb2wtZ3JwYy13ZWIvaGVhZGVycy5qc1wiO1xuLyoqXG4gKiBDT1JTIHByZXZlbnRzIHJvZ3VlIHNjcmlwdHMgaW4gYSB3ZWIgYnJvd3NlciBmcm9tIG1ha2luZyBhcmJpdHJhcnkgcmVxdWVzdHNcbiAqIHRvIG90aGVyIHdlYiBzZXJ2ZXJzLlxuICpcbiAqIFRoaXMgb2JqZWN0IHByb3ZpZGVzIGhlbHBmdWwgY29uc3RhbnRzIHRvIGNvbmZpZ3VyZSBDT1JTIG1pZGRsZXdhcmUgZm9yXG4gKiBjcm9zcy1kb21haW4gcmVxdWVzdHMgd2l0aCB0aGUgcHJvdG9jb2xzIHN1cHBvcnRlZCBieSBDb25uZWN0LlxuICpcbiAqIE1ha2Ugc3VyZSB0byBhZGQgYXBwbGljYXRpb24tc3BlY2lmaWMgaGVhZGVycyB0aGF0IHlvdXIgYXBwbGljYXRpb25cbiAqIHVzZXMgYXMgd2VsbC5cbiAqL1xuZXhwb3J0IGNvbnN0IGNvcnMgPSB7XG4gICAgLyoqXG4gICAgICogUmVxdWVzdCBtZXRob2RzIHRoYXQgc2NyaXB0cyBydW5uaW5nIGluIHRoZSBicm93c2VyIGFyZSBwZXJtaXR0ZWQgdG8gdXNlLlxuICAgICAqXG4gICAgICogVG8gc3VwcG9ydCBjcm9zcy1kb21haW4gcmVxdWVzdHMgd2l0aCB0aGUgcHJvdG9jb2xzIHN1cHBvcnRlZCBieSBDb25uZWN0LFxuICAgICAqIHRoZXNlIGhlYWRlcnMgZmllbGRzIG11c3QgYmUgaW5jbHVkZWQgaW4gdGhlIHByZWZsaWdodCByZXNwb25zZSBoZWFkZXJcbiAgICAgKiBBY2Nlc3MtQ29udHJvbC1BbGxvdy1NZXRob2RzLlxuICAgICAqL1xuICAgIGFsbG93ZWRNZXRob2RzOiBbXCJQT1NUXCIsIFwiR0VUXCJdLFxuICAgIC8qKlxuICAgICAqIEhlYWRlciBmaWVsZHMgdGhhdCBzY3JpcHRzIHJ1bm5pbmcgaW4gdGhlIGJyb3dzZXIgYXJlIHBlcm1pdHRlZCB0byBzZW5kLlxuICAgICAqXG4gICAgICogVG8gc3VwcG9ydCBjcm9zcy1kb21haW4gcmVxdWVzdHMgd2l0aCB0aGUgcHJvdG9jb2xzIHN1cHBvcnRlZCBieSBDb25uZWN0LFxuICAgICAqIHRoZXNlIGZpZWxkIG5hbWVzIG11c3QgYmUgaW5jbHVkZWQgaW4gdGhlIHByZWZsaWdodCByZXNwb25zZSBoZWFkZXJcbiAgICAgKiBBY2Nlc3MtQ29udHJvbC1BbGxvdy1IZWFkZXJzLlxuICAgICAqXG4gICAgICogTWFrZSBzdXJlIHRvIGluY2x1ZGUgYW55IGFwcGxpY2F0aW9uLXNwZWNpZmljIGhlYWRlcnMgeW91ciBicm93c2VyIGNsaWVudFxuICAgICAqIG1heSBzZW5kLlxuICAgICAqL1xuICAgIGFsbG93ZWRIZWFkZXJzOiBbXG4gICAgICAgIGNvbm5lY3QuaGVhZGVyQ29udGVudFR5cGUsXG4gICAgICAgIGNvbm5lY3QuaGVhZGVyUHJvdG9jb2xWZXJzaW9uLFxuICAgICAgICBjb25uZWN0LmhlYWRlclRpbWVvdXQsXG4gICAgICAgIGNvbm5lY3QuaGVhZGVyU3RyZWFtRW5jb2RpbmcsIC8vIFVudXNlZCBpbiB3ZWIgYnJvd3NlcnMsIGJ1dCBhZGRlZCBmb3IgZnV0dXJlLXByb29maW5nXG4gICAgICAgIGNvbm5lY3QuaGVhZGVyU3RyZWFtQWNjZXB0RW5jb2RpbmcsIC8vIFVudXNlZCBpbiB3ZWIgYnJvd3NlcnMsIGJ1dCBhZGRlZCBmb3IgZnV0dXJlLXByb29maW5nXG4gICAgICAgIGNvbm5lY3QuaGVhZGVyVW5hcnlFbmNvZGluZywgLy8gVW51c2VkIGluIHdlYiBicm93c2VycywgYnV0IGFkZGVkIGZvciBmdXR1cmUtcHJvb2ZpbmdcbiAgICAgICAgY29ubmVjdC5oZWFkZXJVbmFyeUFjY2VwdEVuY29kaW5nLCAvLyBVbnVzZWQgaW4gd2ViIGJyb3dzZXJzLCBidXQgYWRkZWQgZm9yIGZ1dHVyZS1wcm9vZmluZ1xuICAgICAgICBncnBjLmhlYWRlck1lc3NhZ2VUeXBlLCAvLyBVbnVzZWQgaW4gd2ViIGJyb3dzZXJzLCBidXQgYWRkZWQgZm9yIGZ1dHVyZS1wcm9vZmluZ1xuICAgICAgICBncnBjV2ViLmhlYWRlclhHcnBjV2ViLFxuICAgICAgICBncnBjV2ViLmhlYWRlclhVc2VyQWdlbnQsXG4gICAgICAgIGdycGNXZWIuaGVhZGVyVGltZW91dCxcbiAgICBdLFxuICAgIC8qKlxuICAgICAqIEhlYWRlciBmaWVsZHMgdGhhdCBzY3JpcHRzIHJ1bm5pbmcgdGhlIGJyb3dzZXIgYXJlIHBlcm1pdHRlZCB0byBzZWUuXG4gICAgICpcbiAgICAgKiBUbyBzdXBwb3J0IGNyb3NzLWRvbWFpbiByZXF1ZXN0cyB3aXRoIHRoZSBwcm90b2NvbHMgc3VwcG9ydGVkIGJ5IENvbm5lY3QsXG4gICAgICogdGhlc2UgZmllbGQgbmFtZXMgbXVzdCBiZSBpbmNsdWRlZCBpbiBoZWFkZXIgQWNjZXNzLUNvbnRyb2wtRXhwb3NlLUhlYWRlcnNcbiAgICAgKiBvZiB0aGUgYWN0dWFsIHJlc3BvbnNlLlxuICAgICAqXG4gICAgICogTWFrZSBzdXJlIHRvIGluY2x1ZGUgYW55IGFwcGxpY2F0aW9uLXNwZWNpZmljIGhlYWRlcnMgeW91ciBicm93c2VyIGNsaWVudFxuICAgICAqIHNob3VsZCBzZWUuIElmIHlvdXIgYXBwbGljYXRpb24gdXNlcyB0cmFpbGVycywgdGhleSB3aWxsIGJlIHNlbnQgYXMgaGVhZGVyXG4gICAgICogZmllbGRzIHdpdGggYSBgVHJhaWxlci1gIHByZWZpeCBmb3IgQ29ubmVjdCB1bmFyeSBSUENzIC0gbWFrZSBzdXJlIHRvXG4gICAgICogZXhwb3NlIHRoZW0gYXMgd2VsbCBpZiB5b3Ugd2FudCB0aGVtIHRvIGJlIHZpc2libGUgaW4gYWxsIHN1cHBvcnRlZFxuICAgICAqIHByb3RvY29scy5cbiAgICAgKi9cbiAgICBleHBvc2VkSGVhZGVyczogW1xuICAgICAgICBncnBjV2ViLmhlYWRlckdycGNTdGF0dXMsIC8vIENydWNpYWwgZm9yIGdSUEMtd2ViXG4gICAgICAgIGdycGNXZWIuaGVhZGVyR3JwY01lc3NhZ2UsIC8vIENydWNpYWwgZm9yIGdSUEMtd2ViXG4gICAgICAgIGdycGNXZWIuaGVhZGVyU3RhdHVzRGV0YWlsc0JpbiwgLy8gRXJyb3IgZGV0YWlscyBpbiBnUlBDLCBnUlBDLXdlYlxuICAgICAgICBjb25uZWN0LmhlYWRlclVuYXJ5RW5jb2RpbmcsIC8vIFVudXNlZCBpbiB3ZWIgYnJvd3NlcnMsIGJ1dCBhZGRlZCBmb3IgZnV0dXJlLXByb29maW5nXG4gICAgICAgIGNvbm5lY3QuaGVhZGVyU3RyZWFtRW5jb2RpbmcsIC8vIFVudXNlZCBpbiB3ZWIgYnJvd3NlcnMsIGJ1dCBhZGRlZCBmb3IgZnV0dXJlLXByb29maW5nXG4gICAgXSxcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/cors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/http-headers.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/http-headers.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   appendHeaders: () => (/* binding */ appendHeaders),\n/* harmony export */   decodeBinaryHeader: () => (/* binding */ decodeBinaryHeader),\n/* harmony export */   encodeBinaryHeader: () => (/* binding */ encodeBinaryHeader)\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bufbuild/protobuf */ \"(ssr)/./node_modules/@bufbuild/protobuf/dist/esm/proto-base64.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./connect-error.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./code.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n/**\n * Encode a single binary header value according to the Connect\n * and gRPC specifications.\n *\n * This function accepts raw binary data from a buffer, a string\n * with UTF-8 text, or a protobuf message. It encodes the input\n * with unpadded base64 and returns a string that can be used for\n * a header whose name ends with `-bin`.\n */\nfunction encodeBinaryHeader(value) {\n    let bytes;\n    if (typeof value == \"object\" && \"getType\" in value) {\n        bytes = value.toBinary();\n    }\n    else if (typeof value == \"string\") {\n        bytes = new TextEncoder().encode(value);\n    }\n    else {\n        bytes = value instanceof Uint8Array ? value : new Uint8Array(value);\n    }\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.protoBase64.enc(bytes).replace(/=+$/, \"\");\n}\nfunction decodeBinaryHeader(value, type, options) {\n    try {\n        const bytes = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.protoBase64.dec(value);\n        if (type) {\n            return type.fromBinary(bytes, options);\n        }\n        return bytes;\n    }\n    catch (e) {\n        throw _connect_error_js__WEBPACK_IMPORTED_MODULE_1__.ConnectError.from(e, _code_js__WEBPACK_IMPORTED_MODULE_2__.Code.DataLoss);\n    }\n}\n/**\n * Merge two or more Headers objects by appending all fields from\n * all inputs to a new Headers object.\n */\nfunction appendHeaders(...headers) {\n    const h = new Headers();\n    for (const e of headers) {\n        e.forEach((value, key) => {\n            h.append(key, value);\n        });\n    }\n    return h;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9odHRwLWhlYWRlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDaUQ7QUFDQztBQUNqQjtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVywyREFBVztBQUN0QjtBQUNPO0FBQ1A7QUFDQSxzQkFBc0IsMkRBQVc7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYywyREFBWSxTQUFTLDBDQUFJO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGUtY28vZXRob3MtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9odHRwLWhlYWRlcnMuanM/NTljNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuaW1wb3J0IHsgcHJvdG9CYXNlNjQgfSBmcm9tIFwiQGJ1ZmJ1aWxkL3Byb3RvYnVmXCI7XG5pbXBvcnQgeyBDb25uZWN0RXJyb3IgfSBmcm9tIFwiLi9jb25uZWN0LWVycm9yLmpzXCI7XG5pbXBvcnQgeyBDb2RlIH0gZnJvbSBcIi4vY29kZS5qc1wiO1xuLyoqXG4gKiBFbmNvZGUgYSBzaW5nbGUgYmluYXJ5IGhlYWRlciB2YWx1ZSBhY2NvcmRpbmcgdG8gdGhlIENvbm5lY3RcbiAqIGFuZCBnUlBDIHNwZWNpZmljYXRpb25zLlxuICpcbiAqIFRoaXMgZnVuY3Rpb24gYWNjZXB0cyByYXcgYmluYXJ5IGRhdGEgZnJvbSBhIGJ1ZmZlciwgYSBzdHJpbmdcbiAqIHdpdGggVVRGLTggdGV4dCwgb3IgYSBwcm90b2J1ZiBtZXNzYWdlLiBJdCBlbmNvZGVzIHRoZSBpbnB1dFxuICogd2l0aCB1bnBhZGRlZCBiYXNlNjQgYW5kIHJldHVybnMgYSBzdHJpbmcgdGhhdCBjYW4gYmUgdXNlZCBmb3JcbiAqIGEgaGVhZGVyIHdob3NlIG5hbWUgZW5kcyB3aXRoIGAtYmluYC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZUJpbmFyeUhlYWRlcih2YWx1ZSkge1xuICAgIGxldCBieXRlcztcbiAgICBpZiAodHlwZW9mIHZhbHVlID09IFwib2JqZWN0XCIgJiYgXCJnZXRUeXBlXCIgaW4gdmFsdWUpIHtcbiAgICAgICAgYnl0ZXMgPSB2YWx1ZS50b0JpbmFyeSgpO1xuICAgIH1cbiAgICBlbHNlIGlmICh0eXBlb2YgdmFsdWUgPT0gXCJzdHJpbmdcIikge1xuICAgICAgICBieXRlcyA9IG5ldyBUZXh0RW5jb2RlcigpLmVuY29kZSh2YWx1ZSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBieXRlcyA9IHZhbHVlIGluc3RhbmNlb2YgVWludDhBcnJheSA/IHZhbHVlIDogbmV3IFVpbnQ4QXJyYXkodmFsdWUpO1xuICAgIH1cbiAgICByZXR1cm4gcHJvdG9CYXNlNjQuZW5jKGJ5dGVzKS5yZXBsYWNlKC89KyQvLCBcIlwiKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVCaW5hcnlIZWFkZXIodmFsdWUsIHR5cGUsIG9wdGlvbnMpIHtcbiAgICB0cnkge1xuICAgICAgICBjb25zdCBieXRlcyA9IHByb3RvQmFzZTY0LmRlYyh2YWx1ZSk7XG4gICAgICAgIGlmICh0eXBlKSB7XG4gICAgICAgICAgICByZXR1cm4gdHlwZS5mcm9tQmluYXJ5KGJ5dGVzLCBvcHRpb25zKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYnl0ZXM7XG4gICAgfVxuICAgIGNhdGNoIChlKSB7XG4gICAgICAgIHRocm93IENvbm5lY3RFcnJvci5mcm9tKGUsIENvZGUuRGF0YUxvc3MpO1xuICAgIH1cbn1cbi8qKlxuICogTWVyZ2UgdHdvIG9yIG1vcmUgSGVhZGVycyBvYmplY3RzIGJ5IGFwcGVuZGluZyBhbGwgZmllbGRzIGZyb21cbiAqIGFsbCBpbnB1dHMgdG8gYSBuZXcgSGVhZGVycyBvYmplY3QuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhcHBlbmRIZWFkZXJzKC4uLmhlYWRlcnMpIHtcbiAgICBjb25zdCBoID0gbmV3IEhlYWRlcnMoKTtcbiAgICBmb3IgKGNvbnN0IGUgb2YgaGVhZGVycykge1xuICAgICAgICBlLmZvckVhY2goKHZhbHVlLCBrZXkpID0+IHtcbiAgICAgICAgICAgIGguYXBwZW5kKGtleSwgdmFsdWUpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIGg7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/http-headers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/implementation.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/implementation.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createHandlerContext: () => (/* binding */ createHandlerContext),\n/* harmony export */   createMethodImplSpec: () => (/* binding */ createMethodImplSpec),\n/* harmony export */   createServiceImplSpec: () => (/* binding */ createServiceImplSpec)\n/* harmony export */ });\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./connect-error.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./code.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _protocol_signals_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./protocol/signals.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/signals.js\");\n/* harmony import */ var _context_values_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./context-values.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/context-values.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n/**\n * Create a new HandlerContext.\n *\n * The context is usually automatically created by handlers, but if a service\n * implementation is used in unit tests, this function can be used to create\n * a context.\n */\nfunction createHandlerContext(init) {\n    var _a;\n    let timeoutMs;\n    if (init.timeoutMs !== undefined) {\n        const date = new Date(Date.now() + init.timeoutMs);\n        timeoutMs = () => date.getTime() - Date.now();\n    }\n    else {\n        timeoutMs = () => undefined;\n    }\n    const deadline = (0,_protocol_signals_js__WEBPACK_IMPORTED_MODULE_0__.createDeadlineSignal)(init.timeoutMs);\n    const abortController = (0,_protocol_signals_js__WEBPACK_IMPORTED_MODULE_0__.createLinkedAbortController)(deadline.signal, init.requestSignal, init.shutdownSignal);\n    return Object.assign(Object.assign({}, init), { signal: abortController.signal, timeoutMs, requestHeader: new Headers(init.requestHeader), responseHeader: new Headers(init.responseHeader), responseTrailer: new Headers(init.responseTrailer), abort(reason) {\n            deadline.cleanup();\n            abortController.abort(reason);\n        }, values: (_a = init.contextValues) !== null && _a !== void 0 ? _a : (0,_context_values_js__WEBPACK_IMPORTED_MODULE_1__.createContextValues)() });\n}\n/**\n * Create an MethodImplSpec - a user-provided implementation for a method,\n * wrapped in a discriminated union type along with service and method metadata.\n */\nfunction createMethodImplSpec(service, method, impl) {\n    return {\n        kind: method.kind,\n        service,\n        method,\n        impl,\n    };\n}\n/**\n * Create an ServiceImplSpec - a user-provided service implementation wrapped\n * with metadata.\n */\nfunction createServiceImplSpec(service, impl) {\n    const s = { service, methods: {} };\n    for (const [localName, methodInfo] of Object.entries(service.methods)) {\n        let fn = impl[localName];\n        if (typeof fn == \"function\") {\n            fn = fn.bind(impl);\n        }\n        else {\n            const message = `${service.typeName}.${methodInfo.name} is not implemented`;\n            fn = function unimplemented() {\n                throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_2__.ConnectError(message, _code_js__WEBPACK_IMPORTED_MODULE_3__.Code.Unimplemented);\n            };\n        }\n        s.methods[localName] = createMethodImplSpec(service, methodInfo, fn);\n    }\n    return s;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9pbXBsZW1lbnRhdGlvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDZ0Q7QUFDRTtBQUNqQjtBQUMwRDtBQUNqQztBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLDBFQUFvQjtBQUN6Qyw0QkFBNEIsaUZBQTJCO0FBQ3ZELHlDQUF5QyxXQUFXO0FBQ3BEO0FBQ0E7QUFDQSxTQUFTLHFFQUFxRSx1RUFBbUIsSUFBSTtBQUNyRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLGlCQUFpQixHQUFHLGlCQUFpQjtBQUNwRTtBQUNBLDBCQUEwQiwyREFBWSxVQUFVLDBDQUFJO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BlLWNvL2V0aG9zLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0Bjb25uZWN0cnBjL2Nvbm5lY3QvZGlzdC9lc20vaW1wbGVtZW50YXRpb24uanM/MjU1OCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuaW1wb3J0IHsgTWV0aG9kS2luZCB9IGZyb20gXCJAYnVmYnVpbGQvcHJvdG9idWZcIjtcbmltcG9ydCB7IENvbm5lY3RFcnJvciB9IGZyb20gXCIuL2Nvbm5lY3QtZXJyb3IuanNcIjtcbmltcG9ydCB7IENvZGUgfSBmcm9tIFwiLi9jb2RlLmpzXCI7XG5pbXBvcnQgeyBjcmVhdGVEZWFkbGluZVNpZ25hbCwgY3JlYXRlTGlua2VkQWJvcnRDb250cm9sbGVyLCB9IGZyb20gXCIuL3Byb3RvY29sL3NpZ25hbHMuanNcIjtcbmltcG9ydCB7IGNyZWF0ZUNvbnRleHRWYWx1ZXMgfSBmcm9tIFwiLi9jb250ZXh0LXZhbHVlcy5qc1wiO1xuLyoqXG4gKiBDcmVhdGUgYSBuZXcgSGFuZGxlckNvbnRleHQuXG4gKlxuICogVGhlIGNvbnRleHQgaXMgdXN1YWxseSBhdXRvbWF0aWNhbGx5IGNyZWF0ZWQgYnkgaGFuZGxlcnMsIGJ1dCBpZiBhIHNlcnZpY2VcbiAqIGltcGxlbWVudGF0aW9uIGlzIHVzZWQgaW4gdW5pdCB0ZXN0cywgdGhpcyBmdW5jdGlvbiBjYW4gYmUgdXNlZCB0byBjcmVhdGVcbiAqIGEgY29udGV4dC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUhhbmRsZXJDb250ZXh0KGluaXQpIHtcbiAgICB2YXIgX2E7XG4gICAgbGV0IHRpbWVvdXRNcztcbiAgICBpZiAoaW5pdC50aW1lb3V0TXMgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBjb25zdCBkYXRlID0gbmV3IERhdGUoRGF0ZS5ub3coKSArIGluaXQudGltZW91dE1zKTtcbiAgICAgICAgdGltZW91dE1zID0gKCkgPT4gZGF0ZS5nZXRUaW1lKCkgLSBEYXRlLm5vdygpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgdGltZW91dE1zID0gKCkgPT4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBjb25zdCBkZWFkbGluZSA9IGNyZWF0ZURlYWRsaW5lU2lnbmFsKGluaXQudGltZW91dE1zKTtcbiAgICBjb25zdCBhYm9ydENvbnRyb2xsZXIgPSBjcmVhdGVMaW5rZWRBYm9ydENvbnRyb2xsZXIoZGVhZGxpbmUuc2lnbmFsLCBpbml0LnJlcXVlc3RTaWduYWwsIGluaXQuc2h1dGRvd25TaWduYWwpO1xuICAgIHJldHVybiBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIGluaXQpLCB7IHNpZ25hbDogYWJvcnRDb250cm9sbGVyLnNpZ25hbCwgdGltZW91dE1zLCByZXF1ZXN0SGVhZGVyOiBuZXcgSGVhZGVycyhpbml0LnJlcXVlc3RIZWFkZXIpLCByZXNwb25zZUhlYWRlcjogbmV3IEhlYWRlcnMoaW5pdC5yZXNwb25zZUhlYWRlciksIHJlc3BvbnNlVHJhaWxlcjogbmV3IEhlYWRlcnMoaW5pdC5yZXNwb25zZVRyYWlsZXIpLCBhYm9ydChyZWFzb24pIHtcbiAgICAgICAgICAgIGRlYWRsaW5lLmNsZWFudXAoKTtcbiAgICAgICAgICAgIGFib3J0Q29udHJvbGxlci5hYm9ydChyZWFzb24pO1xuICAgICAgICB9LCB2YWx1ZXM6IChfYSA9IGluaXQuY29udGV4dFZhbHVlcykgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogY3JlYXRlQ29udGV4dFZhbHVlcygpIH0pO1xufVxuLyoqXG4gKiBDcmVhdGUgYW4gTWV0aG9kSW1wbFNwZWMgLSBhIHVzZXItcHJvdmlkZWQgaW1wbGVtZW50YXRpb24gZm9yIGEgbWV0aG9kLFxuICogd3JhcHBlZCBpbiBhIGRpc2NyaW1pbmF0ZWQgdW5pb24gdHlwZSBhbG9uZyB3aXRoIHNlcnZpY2UgYW5kIG1ldGhvZCBtZXRhZGF0YS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZU1ldGhvZEltcGxTcGVjKHNlcnZpY2UsIG1ldGhvZCwgaW1wbCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIGtpbmQ6IG1ldGhvZC5raW5kLFxuICAgICAgICBzZXJ2aWNlLFxuICAgICAgICBtZXRob2QsXG4gICAgICAgIGltcGwsXG4gICAgfTtcbn1cbi8qKlxuICogQ3JlYXRlIGFuIFNlcnZpY2VJbXBsU3BlYyAtIGEgdXNlci1wcm92aWRlZCBzZXJ2aWNlIGltcGxlbWVudGF0aW9uIHdyYXBwZWRcbiAqIHdpdGggbWV0YWRhdGEuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTZXJ2aWNlSW1wbFNwZWMoc2VydmljZSwgaW1wbCkge1xuICAgIGNvbnN0IHMgPSB7IHNlcnZpY2UsIG1ldGhvZHM6IHt9IH07XG4gICAgZm9yIChjb25zdCBbbG9jYWxOYW1lLCBtZXRob2RJbmZvXSBvZiBPYmplY3QuZW50cmllcyhzZXJ2aWNlLm1ldGhvZHMpKSB7XG4gICAgICAgIGxldCBmbiA9IGltcGxbbG9jYWxOYW1lXTtcbiAgICAgICAgaWYgKHR5cGVvZiBmbiA9PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIGZuID0gZm4uYmluZChpbXBsKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IG1lc3NhZ2UgPSBgJHtzZXJ2aWNlLnR5cGVOYW1lfS4ke21ldGhvZEluZm8ubmFtZX0gaXMgbm90IGltcGxlbWVudGVkYDtcbiAgICAgICAgICAgIGZuID0gZnVuY3Rpb24gdW5pbXBsZW1lbnRlZCgpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgQ29ubmVjdEVycm9yKG1lc3NhZ2UsIENvZGUuVW5pbXBsZW1lbnRlZCk7XG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIHMubWV0aG9kc1tsb2NhbE5hbWVdID0gY3JlYXRlTWV0aG9kSW1wbFNwZWMoc2VydmljZSwgbWV0aG9kSW5mbywgZm4pO1xuICAgIH1cbiAgICByZXR1cm4gcztcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/implementation.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Code: () => (/* reexport safe */ _code_js__WEBPACK_IMPORTED_MODULE_1__.Code),\n/* harmony export */   ConnectError: () => (/* reexport safe */ _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError),\n/* harmony export */   appendHeaders: () => (/* reexport safe */ _http_headers_js__WEBPACK_IMPORTED_MODULE_2__.appendHeaders),\n/* harmony export */   cors: () => (/* reexport safe */ _cors_js__WEBPACK_IMPORTED_MODULE_7__.cors),\n/* harmony export */   createCallbackClient: () => (/* reexport safe */ _callback_client_js__WEBPACK_IMPORTED_MODULE_3__.createCallbackClient),\n/* harmony export */   createClient: () => (/* reexport safe */ _promise_client_js__WEBPACK_IMPORTED_MODULE_4__.createClient),\n/* harmony export */   createConnectRouter: () => (/* reexport safe */ _router_js__WEBPACK_IMPORTED_MODULE_5__.createConnectRouter),\n/* harmony export */   createContextKey: () => (/* reexport safe */ _context_values_js__WEBPACK_IMPORTED_MODULE_8__.createContextKey),\n/* harmony export */   createContextValues: () => (/* reexport safe */ _context_values_js__WEBPACK_IMPORTED_MODULE_8__.createContextValues),\n/* harmony export */   createHandlerContext: () => (/* reexport safe */ _implementation_js__WEBPACK_IMPORTED_MODULE_6__.createHandlerContext),\n/* harmony export */   createMethodImplSpec: () => (/* reexport safe */ _implementation_js__WEBPACK_IMPORTED_MODULE_6__.createMethodImplSpec),\n/* harmony export */   createPromiseClient: () => (/* reexport safe */ _promise_client_js__WEBPACK_IMPORTED_MODULE_4__.createPromiseClient),\n/* harmony export */   createRouterTransport: () => (/* reexport safe */ _router_transport_js__WEBPACK_IMPORTED_MODULE_10__.createRouterTransport),\n/* harmony export */   createServiceImplSpec: () => (/* reexport safe */ _implementation_js__WEBPACK_IMPORTED_MODULE_6__.createServiceImplSpec),\n/* harmony export */   decodeBinaryHeader: () => (/* reexport safe */ _http_headers_js__WEBPACK_IMPORTED_MODULE_2__.decodeBinaryHeader),\n/* harmony export */   encodeBinaryHeader: () => (/* reexport safe */ _http_headers_js__WEBPACK_IMPORTED_MODULE_2__.encodeBinaryHeader),\n/* harmony export */   makeAnyClient: () => (/* reexport safe */ _any_client_js__WEBPACK_IMPORTED_MODULE_9__.makeAnyClient)\n/* harmony export */ });\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./connect-error.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./code.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _http_headers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./http-headers.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/http-headers.js\");\n/* harmony import */ var _callback_client_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./callback-client.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/callback-client.js\");\n/* harmony import */ var _promise_client_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./promise-client.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/promise-client.js\");\n/* harmony import */ var _router_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./router.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/router.js\");\n/* harmony import */ var _implementation_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./implementation.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/implementation.js\");\n/* harmony import */ var _cors_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./cors.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/cors.js\");\n/* harmony import */ var _context_values_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./context-values.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/context-values.js\");\n/* harmony import */ var _any_client_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./any-client.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/any-client.js\");\n/* harmony import */ var _router_transport_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./router-transport.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/router-transport.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n\n\n\n// Symbols above should be relevant to end users.\n// Symbols below should only be relevant for other libraries.\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDa0Q7QUFDakI7QUFDMEQ7QUFDL0I7QUFDWTtBQUN0QjtBQUNTO0FBQzFCO0FBQzJDO0FBQzVFO0FBQ0E7QUFDZ0Q7QUFDbUM7QUFDckIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZS1jby9ldGhvcy1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AY29ubmVjdHJwYy9jb25uZWN0L2Rpc3QvZXNtL2luZGV4LmpzPzFiNmUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmV4cG9ydCB7IENvbm5lY3RFcnJvciB9IGZyb20gXCIuL2Nvbm5lY3QtZXJyb3IuanNcIjtcbmV4cG9ydCB7IENvZGUgfSBmcm9tIFwiLi9jb2RlLmpzXCI7XG5leHBvcnQgeyBlbmNvZGVCaW5hcnlIZWFkZXIsIGRlY29kZUJpbmFyeUhlYWRlciwgYXBwZW5kSGVhZGVycywgfSBmcm9tIFwiLi9odHRwLWhlYWRlcnMuanNcIjtcbmV4cG9ydCB7IGNyZWF0ZUNhbGxiYWNrQ2xpZW50IH0gZnJvbSBcIi4vY2FsbGJhY2stY2xpZW50LmpzXCI7XG5leHBvcnQgeyBjcmVhdGVDbGllbnQsIGNyZWF0ZVByb21pc2VDbGllbnQgfSBmcm9tIFwiLi9wcm9taXNlLWNsaWVudC5qc1wiO1xuZXhwb3J0IHsgY3JlYXRlQ29ubmVjdFJvdXRlciB9IGZyb20gXCIuL3JvdXRlci5qc1wiO1xuZXhwb3J0IHsgY3JlYXRlSGFuZGxlckNvbnRleHQgfSBmcm9tIFwiLi9pbXBsZW1lbnRhdGlvbi5qc1wiO1xuZXhwb3J0IHsgY29ycyB9IGZyb20gXCIuL2NvcnMuanNcIjtcbmV4cG9ydCB7IGNyZWF0ZUNvbnRleHRLZXksIGNyZWF0ZUNvbnRleHRWYWx1ZXMgfSBmcm9tIFwiLi9jb250ZXh0LXZhbHVlcy5qc1wiO1xuLy8gU3ltYm9scyBhYm92ZSBzaG91bGQgYmUgcmVsZXZhbnQgdG8gZW5kIHVzZXJzLlxuLy8gU3ltYm9scyBiZWxvdyBzaG91bGQgb25seSBiZSByZWxldmFudCBmb3Igb3RoZXIgbGlicmFyaWVzLlxuZXhwb3J0IHsgbWFrZUFueUNsaWVudCB9IGZyb20gXCIuL2FueS1jbGllbnQuanNcIjtcbmV4cG9ydCB7IGNyZWF0ZVNlcnZpY2VJbXBsU3BlYywgY3JlYXRlTWV0aG9kSW1wbFNwZWMsIH0gZnJvbSBcIi4vaW1wbGVtZW50YXRpb24uanNcIjtcbmV4cG9ydCB7IGNyZWF0ZVJvdXRlclRyYW5zcG9ydCB9IGZyb20gXCIuL3JvdXRlci10cmFuc3BvcnQuanNcIjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/interceptor.js":
/*!******************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/interceptor.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyInterceptors: () => (/* binding */ applyInterceptors)\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * applyInterceptors takes the given UnaryFn or ServerStreamingFn, and wraps\n * it with each of the given interceptors, returning a new UnaryFn or\n * ServerStreamingFn.\n */\nfunction applyInterceptors(next, interceptors) {\n    var _a;\n    return ((_a = interceptors === null || interceptors === void 0 ? void 0 : interceptors.concat().reverse().reduce(\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    (n, i) => i(n), next)) !== null && _a !== void 0 ? _a : next);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9pbnRlcmNlcHRvci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGUtY28vZXRob3MtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9pbnRlcmNlcHRvci5qcz82ZTBmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgVGhlIENvbm5lY3QgQXV0aG9yc1xuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4vKipcbiAqIGFwcGx5SW50ZXJjZXB0b3JzIHRha2VzIHRoZSBnaXZlbiBVbmFyeUZuIG9yIFNlcnZlclN0cmVhbWluZ0ZuLCBhbmQgd3JhcHNcbiAqIGl0IHdpdGggZWFjaCBvZiB0aGUgZ2l2ZW4gaW50ZXJjZXB0b3JzLCByZXR1cm5pbmcgYSBuZXcgVW5hcnlGbiBvclxuICogU2VydmVyU3RyZWFtaW5nRm4uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhcHBseUludGVyY2VwdG9ycyhuZXh0LCBpbnRlcmNlcHRvcnMpIHtcbiAgICB2YXIgX2E7XG4gICAgcmV0dXJuICgoX2EgPSBpbnRlcmNlcHRvcnMgPT09IG51bGwgfHwgaW50ZXJjZXB0b3JzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBpbnRlcmNlcHRvcnMuY29uY2F0KCkucmV2ZXJzZSgpLnJlZHVjZShcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1hcmd1bWVudFxuICAgIChuLCBpKSA9PiBpKG4pLCBuZXh0KSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogbmV4dCk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/interceptor.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/promise-client.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/promise-client.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createBiDiStreamingFn: () => (/* binding */ createBiDiStreamingFn),\n/* harmony export */   createClient: () => (/* binding */ createClient),\n/* harmony export */   createClientStreamingFn: () => (/* binding */ createClientStreamingFn),\n/* harmony export */   createPromiseClient: () => (/* binding */ createPromiseClient),\n/* harmony export */   createServerStreamingFn: () => (/* binding */ createServerStreamingFn),\n/* harmony export */   createUnaryFn: () => (/* binding */ createUnaryFn)\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @bufbuild/protobuf */ \"(ssr)/./node_modules/@bufbuild/protobuf/dist/esm/service-type.js\");\n/* harmony import */ var _any_client_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./any-client.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/any-client.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./connect-error.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./code.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./protocol/async-iterable.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/async-iterable.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __asyncValues = (undefined && undefined.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar __await = (undefined && undefined.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncDelegator = (undefined && undefined.__asyncDelegator) || function (o) {\n    var i, p;\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n};\nvar __asyncGenerator = (undefined && undefined.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\n\n\n\n\n\n/**\n * Create a Client for the given service, invoking RPCs through the\n * given transport.\n */\nfunction createClient(service, transport) {\n    return (0,_any_client_js__WEBPACK_IMPORTED_MODULE_0__.makeAnyClient)(service, (method) => {\n        switch (method.kind) {\n            case _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.MethodKind.Unary:\n                return createUnaryFn(transport, service, method);\n            case _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.MethodKind.ServerStreaming:\n                return createServerStreamingFn(transport, service, method);\n            case _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.MethodKind.ClientStreaming:\n                return createClientStreamingFn(transport, service, method);\n            case _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.MethodKind.BiDiStreaming:\n                return createBiDiStreamingFn(transport, service, method);\n            default:\n                return null;\n        }\n    });\n}\n/**\n * @deprecated use createClient.\n */\nfunction createPromiseClient(service, transport) {\n    return createClient(service, transport);\n}\nfunction createUnaryFn(transport, service, method) {\n    return async function (input, options) {\n        var _a, _b;\n        const response = await transport.unary(service, method, options === null || options === void 0 ? void 0 : options.signal, options === null || options === void 0 ? void 0 : options.timeoutMs, options === null || options === void 0 ? void 0 : options.headers, input, options === null || options === void 0 ? void 0 : options.contextValues);\n        (_a = options === null || options === void 0 ? void 0 : options.onHeader) === null || _a === void 0 ? void 0 : _a.call(options, response.header);\n        (_b = options === null || options === void 0 ? void 0 : options.onTrailer) === null || _b === void 0 ? void 0 : _b.call(options, response.trailer);\n        return response.message;\n    };\n}\nfunction createServerStreamingFn(transport, service, method) {\n    return function (input, options) {\n        return handleStreamResponse(transport.stream(service, method, options === null || options === void 0 ? void 0 : options.signal, options === null || options === void 0 ? void 0 : options.timeoutMs, options === null || options === void 0 ? void 0 : options.headers, (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_2__.createAsyncIterable)([input]), options === null || options === void 0 ? void 0 : options.contextValues), options);\n    };\n}\nfunction createClientStreamingFn(transport, service, method) {\n    return async function (request, options) {\n        var _a, e_1, _b, _c;\n        var _d, _e;\n        const response = await transport.stream(service, method, options === null || options === void 0 ? void 0 : options.signal, options === null || options === void 0 ? void 0 : options.timeoutMs, options === null || options === void 0 ? void 0 : options.headers, request, options === null || options === void 0 ? void 0 : options.contextValues);\n        (_d = options === null || options === void 0 ? void 0 : options.onHeader) === null || _d === void 0 ? void 0 : _d.call(options, response.header);\n        let singleMessage;\n        let count = 0;\n        try {\n            for (var _f = true, _g = __asyncValues(response.message), _h; _h = await _g.next(), _a = _h.done, !_a; _f = true) {\n                _c = _h.value;\n                _f = false;\n                const message = _c;\n                singleMessage = message;\n                count++;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (!_f && !_a && (_b = _g.return)) await _b.call(_g);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (!singleMessage) {\n            throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_3__.ConnectError(\"protocol error: missing response message\", _code_js__WEBPACK_IMPORTED_MODULE_4__.Code.Unimplemented);\n        }\n        if (count > 1) {\n            throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_3__.ConnectError(\"protocol error: received extra messages for client streaming method\", _code_js__WEBPACK_IMPORTED_MODULE_4__.Code.Unimplemented);\n        }\n        (_e = options === null || options === void 0 ? void 0 : options.onTrailer) === null || _e === void 0 ? void 0 : _e.call(options, response.trailer);\n        return singleMessage;\n    };\n}\nfunction createBiDiStreamingFn(transport, service, method) {\n    return function (request, options) {\n        return handleStreamResponse(transport.stream(service, method, options === null || options === void 0 ? void 0 : options.signal, options === null || options === void 0 ? void 0 : options.timeoutMs, options === null || options === void 0 ? void 0 : options.headers, request, options === null || options === void 0 ? void 0 : options.contextValues), options);\n    };\n}\nfunction handleStreamResponse(stream, options) {\n    const it = (function () {\n        return __asyncGenerator(this, arguments, function* () {\n            var _a, _b;\n            const response = yield __await(stream);\n            (_a = options === null || options === void 0 ? void 0 : options.onHeader) === null || _a === void 0 ? void 0 : _a.call(options, response.header);\n            yield __await(yield* __asyncDelegator(__asyncValues(response.message)));\n            (_b = options === null || options === void 0 ? void 0 : options.onTrailer) === null || _b === void 0 ? void 0 : _b.call(options, response.trailer);\n        });\n    })()[Symbol.asyncIterator]();\n    // Create a new iterable to omit throw/return.\n    return {\n        [Symbol.asyncIterator]: () => ({\n            next: () => it.next(),\n        }),\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/promise-client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/code-string.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/code-string.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   codeFromString: () => (/* binding */ codeFromString),\n/* harmony export */   codeToString: () => (/* binding */ codeToString)\n/* harmony export */ });\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../code.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * codeToString returns the string representation of a Code.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction codeToString(value) {\n    const name = _code_js__WEBPACK_IMPORTED_MODULE_0__.Code[value];\n    if (typeof name != \"string\") {\n        return value.toString();\n    }\n    return (name[0].toLowerCase() +\n        name.substring(1).replace(/[A-Z]/g, (c) => \"_\" + c.toLowerCase()));\n}\nlet stringToCode;\n/**\n * codeFromString parses the string representation of a Code in snake_case.\n * For example, the string \"permission_denied\" parses into Code.PermissionDenied.\n *\n * If the given string cannot be parsed, the function returns undefined.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction codeFromString(value) {\n    if (!stringToCode) {\n        stringToCode = {};\n        for (const value of Object.values(_code_js__WEBPACK_IMPORTED_MODULE_0__.Code)) {\n            if (typeof value == \"string\") {\n                continue;\n            }\n            stringToCode[codeToString(value)] = value;\n        }\n    }\n    return stringToCode[value];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1jb25uZWN0L2NvZGUtc3RyaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2tDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLGlCQUFpQiwwQ0FBSTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSwwQ0FBMEMsMENBQUk7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BlLWNvL2V0aG9zLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0Bjb25uZWN0cnBjL2Nvbm5lY3QvZGlzdC9lc20vcHJvdG9jb2wtY29ubmVjdC9jb2RlLXN0cmluZy5qcz9jNDY2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgVGhlIENvbm5lY3QgQXV0aG9yc1xuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5pbXBvcnQgeyBDb2RlIH0gZnJvbSBcIi4uL2NvZGUuanNcIjtcbi8qKlxuICogY29kZVRvU3RyaW5nIHJldHVybnMgdGhlIHN0cmluZyByZXByZXNlbnRhdGlvbiBvZiBhIENvZGUuXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjb2RlVG9TdHJpbmcodmFsdWUpIHtcbiAgICBjb25zdCBuYW1lID0gQ29kZVt2YWx1ZV07XG4gICAgaWYgKHR5cGVvZiBuYW1lICE9IFwic3RyaW5nXCIpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlLnRvU3RyaW5nKCk7XG4gICAgfVxuICAgIHJldHVybiAobmFtZVswXS50b0xvd2VyQ2FzZSgpICtcbiAgICAgICAgbmFtZS5zdWJzdHJpbmcoMSkucmVwbGFjZSgvW0EtWl0vZywgKGMpID0+IFwiX1wiICsgYy50b0xvd2VyQ2FzZSgpKSk7XG59XG5sZXQgc3RyaW5nVG9Db2RlO1xuLyoqXG4gKiBjb2RlRnJvbVN0cmluZyBwYXJzZXMgdGhlIHN0cmluZyByZXByZXNlbnRhdGlvbiBvZiBhIENvZGUgaW4gc25ha2VfY2FzZS5cbiAqIEZvciBleGFtcGxlLCB0aGUgc3RyaW5nIFwicGVybWlzc2lvbl9kZW5pZWRcIiBwYXJzZXMgaW50byBDb2RlLlBlcm1pc3Npb25EZW5pZWQuXG4gKlxuICogSWYgdGhlIGdpdmVuIHN0cmluZyBjYW5ub3QgYmUgcGFyc2VkLCB0aGUgZnVuY3Rpb24gcmV0dXJucyB1bmRlZmluZWQuXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjb2RlRnJvbVN0cmluZyh2YWx1ZSkge1xuICAgIGlmICghc3RyaW5nVG9Db2RlKSB7XG4gICAgICAgIHN0cmluZ1RvQ29kZSA9IHt9O1xuICAgICAgICBmb3IgKGNvbnN0IHZhbHVlIG9mIE9iamVjdC52YWx1ZXMoQ29kZSkpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc3RyaW5nVG9Db2RlW2NvZGVUb1N0cmluZyh2YWx1ZSldID0gdmFsdWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHN0cmluZ1RvQ29kZVt2YWx1ZV07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/code-string.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/content-type.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/content-type.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   contentTypeRegExp: () => (/* binding */ contentTypeRegExp),\n/* harmony export */   contentTypeStreamJson: () => (/* binding */ contentTypeStreamJson),\n/* harmony export */   contentTypeStreamProto: () => (/* binding */ contentTypeStreamProto),\n/* harmony export */   contentTypeStreamRegExp: () => (/* binding */ contentTypeStreamRegExp),\n/* harmony export */   contentTypeUnaryJson: () => (/* binding */ contentTypeUnaryJson),\n/* harmony export */   contentTypeUnaryProto: () => (/* binding */ contentTypeUnaryProto),\n/* harmony export */   contentTypeUnaryRegExp: () => (/* binding */ contentTypeUnaryRegExp),\n/* harmony export */   parseContentType: () => (/* binding */ parseContentType),\n/* harmony export */   parseEncodingQuery: () => (/* binding */ parseEncodingQuery)\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Regular Expression that matches any valid Connect Content-Type header value.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst contentTypeRegExp = /^application\\/(connect\\+)?(?:(json)(?:; ?charset=utf-?8)?|(proto))$/i;\n/**\n * Regular Expression that matches a Connect unary Content-Type header value.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst contentTypeUnaryRegExp = /^application\\/(?:json(?:; ?charset=utf-?8)?|proto)$/i;\n/**\n * Regular Expression that matches a Connect streaming Content-Type header value.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst contentTypeStreamRegExp = /^application\\/connect\\+?(?:json(?:; ?charset=utf-?8)?|proto)$/i;\nconst contentTypeUnaryProto = \"application/proto\";\nconst contentTypeUnaryJson = \"application/json\";\nconst contentTypeStreamProto = \"application/connect+proto\";\nconst contentTypeStreamJson = \"application/connect+json\";\nconst encodingProto = \"proto\";\nconst encodingJson = \"json\";\n/**\n * Parse a Connect Content-Type header.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction parseContentType(contentType) {\n    const match = contentType === null || contentType === void 0 ? void 0 : contentType.match(contentTypeRegExp);\n    if (!match) {\n        return undefined;\n    }\n    const stream = !!match[1];\n    const binary = !!match[3];\n    return { stream, binary };\n}\n/**\n * Parse a Connect Get encoding query parameter.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction parseEncodingQuery(encoding) {\n    switch (encoding) {\n        case encodingProto:\n            return { stream: false, binary: true };\n        case encodingJson:\n            return { stream: false, binary: false };\n        default:\n            return undefined;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1jb25uZWN0L2NvbnRlbnQtdHlwZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxtRUFBbUU7QUFDMUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDBEQUEwRDtBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08scUVBQXFFO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZS1jby9ldGhvcy1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AY29ubmVjdHJwYy9jb25uZWN0L2Rpc3QvZXNtL3Byb3RvY29sLWNvbm5lY3QvY29udGVudC10eXBlLmpzPzliZjEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbi8qKlxuICogUmVndWxhciBFeHByZXNzaW9uIHRoYXQgbWF0Y2hlcyBhbnkgdmFsaWQgQ29ubmVjdCBDb250ZW50LVR5cGUgaGVhZGVyIHZhbHVlLlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgY29uc3QgY29udGVudFR5cGVSZWdFeHAgPSAvXmFwcGxpY2F0aW9uXFwvKGNvbm5lY3RcXCspPyg/Oihqc29uKSg/OjsgP2NoYXJzZXQ9dXRmLT84KT98KHByb3RvKSkkL2k7XG4vKipcbiAqIFJlZ3VsYXIgRXhwcmVzc2lvbiB0aGF0IG1hdGNoZXMgYSBDb25uZWN0IHVuYXJ5IENvbnRlbnQtVHlwZSBoZWFkZXIgdmFsdWUuXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBjb25zdCBjb250ZW50VHlwZVVuYXJ5UmVnRXhwID0gL15hcHBsaWNhdGlvblxcLyg/Ompzb24oPzo7ID9jaGFyc2V0PXV0Zi0/OCk/fHByb3RvKSQvaTtcbi8qKlxuICogUmVndWxhciBFeHByZXNzaW9uIHRoYXQgbWF0Y2hlcyBhIENvbm5lY3Qgc3RyZWFtaW5nIENvbnRlbnQtVHlwZSBoZWFkZXIgdmFsdWUuXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBjb25zdCBjb250ZW50VHlwZVN0cmVhbVJlZ0V4cCA9IC9eYXBwbGljYXRpb25cXC9jb25uZWN0XFwrPyg/Ompzb24oPzo7ID9jaGFyc2V0PXV0Zi0/OCk/fHByb3RvKSQvaTtcbmV4cG9ydCBjb25zdCBjb250ZW50VHlwZVVuYXJ5UHJvdG8gPSBcImFwcGxpY2F0aW9uL3Byb3RvXCI7XG5leHBvcnQgY29uc3QgY29udGVudFR5cGVVbmFyeUpzb24gPSBcImFwcGxpY2F0aW9uL2pzb25cIjtcbmV4cG9ydCBjb25zdCBjb250ZW50VHlwZVN0cmVhbVByb3RvID0gXCJhcHBsaWNhdGlvbi9jb25uZWN0K3Byb3RvXCI7XG5leHBvcnQgY29uc3QgY29udGVudFR5cGVTdHJlYW1Kc29uID0gXCJhcHBsaWNhdGlvbi9jb25uZWN0K2pzb25cIjtcbmNvbnN0IGVuY29kaW5nUHJvdG8gPSBcInByb3RvXCI7XG5jb25zdCBlbmNvZGluZ0pzb24gPSBcImpzb25cIjtcbi8qKlxuICogUGFyc2UgYSBDb25uZWN0IENvbnRlbnQtVHlwZSBoZWFkZXIuXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUNvbnRlbnRUeXBlKGNvbnRlbnRUeXBlKSB7XG4gICAgY29uc3QgbWF0Y2ggPSBjb250ZW50VHlwZSA9PT0gbnVsbCB8fCBjb250ZW50VHlwZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29udGVudFR5cGUubWF0Y2goY29udGVudFR5cGVSZWdFeHApO1xuICAgIGlmICghbWF0Y2gpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgY29uc3Qgc3RyZWFtID0gISFtYXRjaFsxXTtcbiAgICBjb25zdCBiaW5hcnkgPSAhIW1hdGNoWzNdO1xuICAgIHJldHVybiB7IHN0cmVhbSwgYmluYXJ5IH07XG59XG4vKipcbiAqIFBhcnNlIGEgQ29ubmVjdCBHZXQgZW5jb2RpbmcgcXVlcnkgcGFyYW1ldGVyLlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VFbmNvZGluZ1F1ZXJ5KGVuY29kaW5nKSB7XG4gICAgc3dpdGNoIChlbmNvZGluZykge1xuICAgICAgICBjYXNlIGVuY29kaW5nUHJvdG86XG4gICAgICAgICAgICByZXR1cm4geyBzdHJlYW06IGZhbHNlLCBiaW5hcnk6IHRydWUgfTtcbiAgICAgICAgY2FzZSBlbmNvZGluZ0pzb246XG4gICAgICAgICAgICByZXR1cm4geyBzdHJlYW06IGZhbHNlLCBiaW5hcnk6IGZhbHNlIH07XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/content-type.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/end-stream.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/end-stream.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createEndStreamSerialization: () => (/* binding */ createEndStreamSerialization),\n/* harmony export */   endStreamFlag: () => (/* binding */ endStreamFlag),\n/* harmony export */   endStreamFromJson: () => (/* binding */ endStreamFromJson),\n/* harmony export */   endStreamToJson: () => (/* binding */ endStreamToJson)\n/* harmony export */ });\n/* harmony import */ var _error_json_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./error-json.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/error-json.js\");\n/* harmony import */ var _http_headers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../http-headers.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/http-headers.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../connect-error.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../code.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n/**\n * endStreamFlag indicates that the data in a EnvelopedMessage\n * is a EndStreamResponse of the Connect protocol.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst endStreamFlag = 0b00000010;\n/**\n * Parse an EndStreamResponse of the Connect protocol.\n * Throws a ConnectError on malformed input.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction endStreamFromJson(data) {\n    const parseErr = new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(\"invalid end stream\", _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.Unknown);\n    let jsonValue;\n    try {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        jsonValue = JSON.parse(typeof data == \"string\" ? data : new TextDecoder().decode(data));\n    }\n    catch (e) {\n        throw parseErr;\n    }\n    if (typeof jsonValue != \"object\" ||\n        jsonValue == null ||\n        Array.isArray(jsonValue)) {\n        throw parseErr;\n    }\n    const metadata = new Headers();\n    if (\"metadata\" in jsonValue) {\n        if (typeof jsonValue.metadata != \"object\" ||\n            jsonValue.metadata == null ||\n            Array.isArray(jsonValue.metadata)) {\n            throw parseErr;\n        }\n        for (const [key, values] of Object.entries(jsonValue.metadata)) {\n            if (!Array.isArray(values) ||\n                values.some((value) => typeof value != \"string\")) {\n                throw parseErr;\n            }\n            for (const value of values) {\n                metadata.append(key, value);\n            }\n        }\n    }\n    const error = \"error\" in jsonValue && jsonValue.error != null\n        ? (0,_error_json_js__WEBPACK_IMPORTED_MODULE_2__.errorFromJson)(jsonValue.error, metadata, parseErr)\n        : undefined;\n    return { metadata, error };\n}\n/**\n * Serialize the given EndStreamResponse to JSON.\n *\n * The JSON serialization options are required to produce the optional\n * human-readable representation of error details if the detail uses\n * google.protobuf.Any.\n *\n * See https://connectrpc.com/docs/protocol#error-end-stream\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction endStreamToJson(metadata, error, jsonWriteOptions) {\n    const es = {};\n    if (error !== undefined) {\n        es.error = (0,_error_json_js__WEBPACK_IMPORTED_MODULE_2__.errorToJson)(error, jsonWriteOptions);\n        metadata = (0,_http_headers_js__WEBPACK_IMPORTED_MODULE_3__.appendHeaders)(metadata, error.metadata);\n    }\n    let hasMetadata = false;\n    const md = {};\n    metadata.forEach((value, key) => {\n        hasMetadata = true;\n        md[key] = [value];\n    });\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (hasMetadata) {\n        es.metadata = md;\n    }\n    return es;\n}\n/**\n * Create a Serialization object that serializes a Connect EndStreamResponse.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction createEndStreamSerialization(options) {\n    const textEncoder = new TextEncoder();\n    return {\n        serialize(data) {\n            try {\n                const jsonObject = endStreamToJson(data.metadata, data.error, options);\n                const jsonString = JSON.stringify(jsonObject);\n                return textEncoder.encode(jsonString);\n            }\n            catch (e) {\n                const m = e instanceof Error ? e.message : String(e);\n                throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(`failed to serialize EndStreamResponse: ${m}`, _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.Internal);\n            }\n        },\n        parse(data) {\n            try {\n                return endStreamFromJson(data);\n            }\n            catch (e) {\n                const m = e instanceof Error ? e.message : String(e);\n                throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(`failed to parse EndStreamResponse: ${m}`, _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.InvalidArgument);\n            }\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1jb25uZWN0L2VuZC1zdHJlYW0uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUM2RDtBQUNWO0FBQ0E7QUFDakI7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLHlCQUF5QiwyREFBWSx1QkFBdUIsMENBQUk7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLDZEQUFhO0FBQ3ZCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLG1CQUFtQiwyREFBVztBQUM5QixtQkFBbUIsK0RBQWE7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDJEQUFZLDJDQUEyQyxFQUFFLEdBQUcsMENBQUk7QUFDMUY7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDJEQUFZLHVDQUF1QyxFQUFFLEdBQUcsMENBQUk7QUFDdEY7QUFDQSxTQUFTO0FBQ1Q7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BlLWNvL2V0aG9zLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0Bjb25uZWN0cnBjL2Nvbm5lY3QvZGlzdC9lc20vcHJvdG9jb2wtY29ubmVjdC9lbmQtc3RyZWFtLmpzPzBjYjIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmltcG9ydCB7IGVycm9yRnJvbUpzb24sIGVycm9yVG9Kc29uIH0gZnJvbSBcIi4vZXJyb3ItanNvbi5qc1wiO1xuaW1wb3J0IHsgYXBwZW5kSGVhZGVycyB9IGZyb20gXCIuLi9odHRwLWhlYWRlcnMuanNcIjtcbmltcG9ydCB7IENvbm5lY3RFcnJvciB9IGZyb20gXCIuLi9jb25uZWN0LWVycm9yLmpzXCI7XG5pbXBvcnQgeyBDb2RlIH0gZnJvbSBcIi4uL2NvZGUuanNcIjtcbi8qKlxuICogZW5kU3RyZWFtRmxhZyBpbmRpY2F0ZXMgdGhhdCB0aGUgZGF0YSBpbiBhIEVudmVsb3BlZE1lc3NhZ2VcbiAqIGlzIGEgRW5kU3RyZWFtUmVzcG9uc2Ugb2YgdGhlIENvbm5lY3QgcHJvdG9jb2wuXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBjb25zdCBlbmRTdHJlYW1GbGFnID0gMGIwMDAwMDAxMDtcbi8qKlxuICogUGFyc2UgYW4gRW5kU3RyZWFtUmVzcG9uc2Ugb2YgdGhlIENvbm5lY3QgcHJvdG9jb2wuXG4gKiBUaHJvd3MgYSBDb25uZWN0RXJyb3Igb24gbWFsZm9ybWVkIGlucHV0LlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZW5kU3RyZWFtRnJvbUpzb24oZGF0YSkge1xuICAgIGNvbnN0IHBhcnNlRXJyID0gbmV3IENvbm5lY3RFcnJvcihcImludmFsaWQgZW5kIHN0cmVhbVwiLCBDb2RlLlVua25vd24pO1xuICAgIGxldCBqc29uVmFsdWU7XG4gICAgdHJ5IHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtYXNzaWdubWVudFxuICAgICAgICBqc29uVmFsdWUgPSBKU09OLnBhcnNlKHR5cGVvZiBkYXRhID09IFwic3RyaW5nXCIgPyBkYXRhIDogbmV3IFRleHREZWNvZGVyKCkuZGVjb2RlKGRhdGEpKTtcbiAgICB9XG4gICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgdGhyb3cgcGFyc2VFcnI7XG4gICAgfVxuICAgIGlmICh0eXBlb2YganNvblZhbHVlICE9IFwib2JqZWN0XCIgfHxcbiAgICAgICAganNvblZhbHVlID09IG51bGwgfHxcbiAgICAgICAgQXJyYXkuaXNBcnJheShqc29uVmFsdWUpKSB7XG4gICAgICAgIHRocm93IHBhcnNlRXJyO1xuICAgIH1cbiAgICBjb25zdCBtZXRhZGF0YSA9IG5ldyBIZWFkZXJzKCk7XG4gICAgaWYgKFwibWV0YWRhdGFcIiBpbiBqc29uVmFsdWUpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBqc29uVmFsdWUubWV0YWRhdGEgIT0gXCJvYmplY3RcIiB8fFxuICAgICAgICAgICAganNvblZhbHVlLm1ldGFkYXRhID09IG51bGwgfHxcbiAgICAgICAgICAgIEFycmF5LmlzQXJyYXkoanNvblZhbHVlLm1ldGFkYXRhKSkge1xuICAgICAgICAgICAgdGhyb3cgcGFyc2VFcnI7XG4gICAgICAgIH1cbiAgICAgICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZXNdIG9mIE9iamVjdC5lbnRyaWVzKGpzb25WYWx1ZS5tZXRhZGF0YSkpIHtcbiAgICAgICAgICAgIGlmICghQXJyYXkuaXNBcnJheSh2YWx1ZXMpIHx8XG4gICAgICAgICAgICAgICAgdmFsdWVzLnNvbWUoKHZhbHVlKSA9PiB0eXBlb2YgdmFsdWUgIT0gXCJzdHJpbmdcIikpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBwYXJzZUVycjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZvciAoY29uc3QgdmFsdWUgb2YgdmFsdWVzKSB7XG4gICAgICAgICAgICAgICAgbWV0YWRhdGEuYXBwZW5kKGtleSwgdmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnN0IGVycm9yID0gXCJlcnJvclwiIGluIGpzb25WYWx1ZSAmJiBqc29uVmFsdWUuZXJyb3IgIT0gbnVsbFxuICAgICAgICA/IGVycm9yRnJvbUpzb24oanNvblZhbHVlLmVycm9yLCBtZXRhZGF0YSwgcGFyc2VFcnIpXG4gICAgICAgIDogdW5kZWZpbmVkO1xuICAgIHJldHVybiB7IG1ldGFkYXRhLCBlcnJvciB9O1xufVxuLyoqXG4gKiBTZXJpYWxpemUgdGhlIGdpdmVuIEVuZFN0cmVhbVJlc3BvbnNlIHRvIEpTT04uXG4gKlxuICogVGhlIEpTT04gc2VyaWFsaXphdGlvbiBvcHRpb25zIGFyZSByZXF1aXJlZCB0byBwcm9kdWNlIHRoZSBvcHRpb25hbFxuICogaHVtYW4tcmVhZGFibGUgcmVwcmVzZW50YXRpb24gb2YgZXJyb3IgZGV0YWlscyBpZiB0aGUgZGV0YWlsIHVzZXNcbiAqIGdvb2dsZS5wcm90b2J1Zi5BbnkuXG4gKlxuICogU2VlIGh0dHBzOi8vY29ubmVjdHJwYy5jb20vZG9jcy9wcm90b2NvbCNlcnJvci1lbmQtc3RyZWFtXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbmRTdHJlYW1Ub0pzb24obWV0YWRhdGEsIGVycm9yLCBqc29uV3JpdGVPcHRpb25zKSB7XG4gICAgY29uc3QgZXMgPSB7fTtcbiAgICBpZiAoZXJyb3IgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBlcy5lcnJvciA9IGVycm9yVG9Kc29uKGVycm9yLCBqc29uV3JpdGVPcHRpb25zKTtcbiAgICAgICAgbWV0YWRhdGEgPSBhcHBlbmRIZWFkZXJzKG1ldGFkYXRhLCBlcnJvci5tZXRhZGF0YSk7XG4gICAgfVxuICAgIGxldCBoYXNNZXRhZGF0YSA9IGZhbHNlO1xuICAgIGNvbnN0IG1kID0ge307XG4gICAgbWV0YWRhdGEuZm9yRWFjaCgodmFsdWUsIGtleSkgPT4ge1xuICAgICAgICBoYXNNZXRhZGF0YSA9IHRydWU7XG4gICAgICAgIG1kW2tleV0gPSBbdmFsdWVdO1xuICAgIH0pO1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5uZWNlc3NhcnktY29uZGl0aW9uXG4gICAgaWYgKGhhc01ldGFkYXRhKSB7XG4gICAgICAgIGVzLm1ldGFkYXRhID0gbWQ7XG4gICAgfVxuICAgIHJldHVybiBlcztcbn1cbi8qKlxuICogQ3JlYXRlIGEgU2VyaWFsaXphdGlvbiBvYmplY3QgdGhhdCBzZXJpYWxpemVzIGEgQ29ubmVjdCBFbmRTdHJlYW1SZXNwb25zZS5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUVuZFN0cmVhbVNlcmlhbGl6YXRpb24ob3B0aW9ucykge1xuICAgIGNvbnN0IHRleHRFbmNvZGVyID0gbmV3IFRleHRFbmNvZGVyKCk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgc2VyaWFsaXplKGRhdGEpIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgY29uc3QganNvbk9iamVjdCA9IGVuZFN0cmVhbVRvSnNvbihkYXRhLm1ldGFkYXRhLCBkYXRhLmVycm9yLCBvcHRpb25zKTtcbiAgICAgICAgICAgICAgICBjb25zdCBqc29uU3RyaW5nID0gSlNPTi5zdHJpbmdpZnkoanNvbk9iamVjdCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRleHRFbmNvZGVyLmVuY29kZShqc29uU3RyaW5nKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgbSA9IGUgaW5zdGFuY2VvZiBFcnJvciA/IGUubWVzc2FnZSA6IFN0cmluZyhlKTtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgQ29ubmVjdEVycm9yKGBmYWlsZWQgdG8gc2VyaWFsaXplIEVuZFN0cmVhbVJlc3BvbnNlOiAke219YCwgQ29kZS5JbnRlcm5hbCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHBhcnNlKGRhdGEpIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGVuZFN0cmVhbUZyb21Kc29uKGRhdGEpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBtID0gZSBpbnN0YW5jZW9mIEVycm9yID8gZS5tZXNzYWdlIDogU3RyaW5nKGUpO1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBDb25uZWN0RXJyb3IoYGZhaWxlZCB0byBwYXJzZSBFbmRTdHJlYW1SZXNwb25zZTogJHttfWAsIENvZGUuSW52YWxpZEFyZ3VtZW50KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/end-stream.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/error-json.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/error-json.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   errorFromJson: () => (/* binding */ errorFromJson),\n/* harmony export */   errorFromJsonBytes: () => (/* binding */ errorFromJsonBytes),\n/* harmony export */   errorToJson: () => (/* binding */ errorToJson),\n/* harmony export */   errorToJsonBytes: () => (/* binding */ errorToJsonBytes)\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @bufbuild/protobuf */ \"(ssr)/./node_modules/@bufbuild/protobuf/dist/esm/proto-base64.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../code.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../connect-error.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_string_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./code-string.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/code-string.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __rest = (undefined && undefined.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\n\n\n\n\n/**\n * Parse a Connect error from a JSON value.\n * Will return a ConnectError, and throw the provided fallback if parsing failed.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction errorFromJson(jsonValue, metadata, fallback) {\n    var _a;\n    if (metadata) {\n        new Headers(metadata).forEach((value, key) => fallback.metadata.append(key, value));\n    }\n    if (typeof jsonValue !== \"object\" ||\n        jsonValue == null ||\n        Array.isArray(jsonValue)) {\n        throw fallback;\n    }\n    let code = fallback.code;\n    if (\"code\" in jsonValue && typeof jsonValue.code === \"string\") {\n        code = (_a = (0,_code_string_js__WEBPACK_IMPORTED_MODULE_0__.codeFromString)(jsonValue.code)) !== null && _a !== void 0 ? _a : code;\n    }\n    const message = jsonValue.message;\n    if (message != null && typeof message !== \"string\") {\n        throw fallback;\n    }\n    const error = new _connect_error_js__WEBPACK_IMPORTED_MODULE_1__.ConnectError(message !== null && message !== void 0 ? message : \"\", code, metadata);\n    if (\"details\" in jsonValue && Array.isArray(jsonValue.details)) {\n        for (const detail of jsonValue.details) {\n            if (detail === null ||\n                typeof detail != \"object\" ||\n                Array.isArray(detail) ||\n                typeof detail.type != \"string\" ||\n                typeof detail.value != \"string\") {\n                throw fallback;\n            }\n            try {\n                error.details.push({\n                    type: detail.type,\n                    value: _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoBase64.dec(detail.value),\n                    debug: detail.debug,\n                });\n            }\n            catch (e) {\n                throw fallback;\n            }\n        }\n    }\n    return error;\n}\n/**\n * Parse a Connect error from a serialized JSON value.\n * Will return a ConnectError, and throw the provided fallback if parsing failed.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction errorFromJsonBytes(bytes, metadata, fallback) {\n    let jsonValue;\n    try {\n        jsonValue = JSON.parse(new TextDecoder().decode(bytes));\n    }\n    catch (e) {\n        throw fallback;\n    }\n    return errorFromJson(jsonValue, metadata, fallback);\n}\n/**\n * Serialize the given error to JSON.\n *\n * The JSON serialization options are required to produce the optional\n * human-readable representation in the \"debug\" key if the detail uses\n * google.protobuf.Any. If serialization of the \"debug\" value fails, it\n * is silently disregarded.\n *\n * See https://connectrpc.com/docs/protocol#error-end-stream\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction errorToJson(error, jsonWriteOptions) {\n    const o = {\n        code: (0,_code_string_js__WEBPACK_IMPORTED_MODULE_0__.codeToString)(error.code),\n    };\n    if (error.rawMessage.length > 0) {\n        o.message = error.rawMessage;\n    }\n    if (error.details.length > 0) {\n        o.details = error.details\n            .map((value) => {\n            if (\"getType\" in value) {\n                const i = {\n                    type: value.getType().typeName,\n                    value: value.toBinary(),\n                };\n                try {\n                    i.debug = value.toJson(jsonWriteOptions);\n                }\n                catch (e) {\n                    // We deliberately ignore errors that may occur when serializing\n                    // a message to JSON (the message contains an Any).\n                    // The rationale is that we are only trying to provide optional\n                    // debug information.\n                }\n                return i;\n            }\n            return value;\n        })\n            .map((_a) => {\n            var { value } = _a, rest = __rest(_a, [\"value\"]);\n            return (Object.assign(Object.assign({}, rest), { value: _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoBase64.enc(value).replace(/=+$/, \"\") }));\n        });\n    }\n    return o;\n}\n/**\n * Serialize the given error to JSON. This calls errorToJson(), but stringifies\n * the result, and converts it into a UInt8Array.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction errorToJsonBytes(error, jsonWriteOptions) {\n    const textEncoder = new TextEncoder();\n    try {\n        const jsonObject = errorToJson(error, jsonWriteOptions);\n        const jsonString = JSON.stringify(jsonObject);\n        return textEncoder.encode(jsonString);\n    }\n    catch (e) {\n        const m = e instanceof Error ? e.message : String(e);\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_1__.ConnectError(`failed to serialize Connect Error: ${m}`, _code_js__WEBPACK_IMPORTED_MODULE_3__.Code.Internal);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/error-json.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/get-request.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/get-request.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   transformConnectPostToGetRequest: () => (/* binding */ transformConnectPostToGetRequest)\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bufbuild/protobuf */ \"(ssr)/./node_modules/@bufbuild/protobuf/dist/esm/proto-base64.js\");\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./headers.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/headers.js\");\n/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./version.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/version.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\nconst contentTypePrefix = \"application/\";\nfunction encodeMessageForUrl(message, useBase64) {\n    if (useBase64) {\n        // TODO(jchadwick-buf): Three regex replaces seems excessive.\n        // Can we make protoBase64.enc more flexible?\n        return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.protoBase64\n            .enc(message)\n            .replace(/\\+/g, \"-\")\n            .replace(/\\//g, \"_\")\n            .replace(/=+$/, \"\");\n    }\n    else {\n        return encodeURIComponent(new TextDecoder().decode(message));\n    }\n}\n/**\n * @private Internal code, does not follow semantic versioning.\n */\nfunction transformConnectPostToGetRequest(request, message, useBase64) {\n    let query = `?connect=v${_version_js__WEBPACK_IMPORTED_MODULE_1__.protocolVersion}`;\n    const contentType = request.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_2__.headerContentType);\n    if ((contentType === null || contentType === void 0 ? void 0 : contentType.indexOf(contentTypePrefix)) === 0) {\n        query +=\n            \"&encoding=\" +\n                encodeURIComponent(contentType.slice(contentTypePrefix.length));\n    }\n    const compression = request.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_2__.headerUnaryEncoding);\n    if (compression !== null && compression !== \"identity\") {\n        query += \"&compression=\" + encodeURIComponent(compression);\n        // Force base64 for compressed payloads.\n        useBase64 = true;\n    }\n    if (useBase64) {\n        query += \"&base64=1\";\n    }\n    query += \"&message=\" + encodeMessageForUrl(message, useBase64);\n    const url = request.url + query;\n    // Omit headers that are not used for unary GET requests.\n    const header = new Headers(request.header);\n    [\n        _headers_js__WEBPACK_IMPORTED_MODULE_2__.headerProtocolVersion,\n        _headers_js__WEBPACK_IMPORTED_MODULE_2__.headerContentType,\n        _headers_js__WEBPACK_IMPORTED_MODULE_2__.headerUnaryContentLength,\n        _headers_js__WEBPACK_IMPORTED_MODULE_2__.headerUnaryEncoding,\n        _headers_js__WEBPACK_IMPORTED_MODULE_2__.headerUnaryAcceptEncoding,\n    ].forEach((h) => header.delete(h));\n    return Object.assign(Object.assign({}, request), { init: Object.assign(Object.assign({}, request.init), { method: \"GET\" }), url,\n        header });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1jb25uZWN0L2dldC1yZXF1ZXN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUMwRDtBQUN5RjtBQUNwRztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSwyREFBVztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLDZCQUE2Qix3REFBZSxDQUFDO0FBQzdDLDJDQUEyQywwREFBaUI7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyw0REFBbUI7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLDhEQUFxQjtBQUM3QixRQUFRLDBEQUFpQjtBQUN6QixRQUFRLGlFQUF3QjtBQUNoQyxRQUFRLDREQUFtQjtBQUMzQixRQUFRLGtFQUF5QjtBQUNqQztBQUNBLHlDQUF5QyxjQUFjLG9DQUFvQyxtQkFBbUIsZUFBZTtBQUM3SCxnQkFBZ0I7QUFDaEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZS1jby9ldGhvcy1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AY29ubmVjdHJwYy9jb25uZWN0L2Rpc3QvZXNtL3Byb3RvY29sLWNvbm5lY3QvZ2V0LXJlcXVlc3QuanM/ZGMwYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuaW1wb3J0IHsgTWVzc2FnZSwgcHJvdG9CYXNlNjQgfSBmcm9tIFwiQGJ1ZmJ1aWxkL3Byb3RvYnVmXCI7XG5pbXBvcnQgeyBoZWFkZXJDb250ZW50VHlwZSwgaGVhZGVyUHJvdG9jb2xWZXJzaW9uLCBoZWFkZXJVbmFyeUFjY2VwdEVuY29kaW5nLCBoZWFkZXJVbmFyeUNvbnRlbnRMZW5ndGgsIGhlYWRlclVuYXJ5RW5jb2RpbmcsIH0gZnJvbSBcIi4vaGVhZGVycy5qc1wiO1xuaW1wb3J0IHsgcHJvdG9jb2xWZXJzaW9uIH0gZnJvbSBcIi4vdmVyc2lvbi5qc1wiO1xuY29uc3QgY29udGVudFR5cGVQcmVmaXggPSBcImFwcGxpY2F0aW9uL1wiO1xuZnVuY3Rpb24gZW5jb2RlTWVzc2FnZUZvclVybChtZXNzYWdlLCB1c2VCYXNlNjQpIHtcbiAgICBpZiAodXNlQmFzZTY0KSB7XG4gICAgICAgIC8vIFRPRE8oamNoYWR3aWNrLWJ1Zik6IFRocmVlIHJlZ2V4IHJlcGxhY2VzIHNlZW1zIGV4Y2Vzc2l2ZS5cbiAgICAgICAgLy8gQ2FuIHdlIG1ha2UgcHJvdG9CYXNlNjQuZW5jIG1vcmUgZmxleGlibGU/XG4gICAgICAgIHJldHVybiBwcm90b0Jhc2U2NFxuICAgICAgICAgICAgLmVuYyhtZXNzYWdlKVxuICAgICAgICAgICAgLnJlcGxhY2UoL1xcKy9nLCBcIi1cIilcbiAgICAgICAgICAgIC5yZXBsYWNlKC9cXC8vZywgXCJfXCIpXG4gICAgICAgICAgICAucmVwbGFjZSgvPSskLywgXCJcIik7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KG5ldyBUZXh0RGVjb2RlcigpLmRlY29kZShtZXNzYWdlKSk7XG4gICAgfVxufVxuLyoqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRyYW5zZm9ybUNvbm5lY3RQb3N0VG9HZXRSZXF1ZXN0KHJlcXVlc3QsIG1lc3NhZ2UsIHVzZUJhc2U2NCkge1xuICAgIGxldCBxdWVyeSA9IGA/Y29ubmVjdD12JHtwcm90b2NvbFZlcnNpb259YDtcbiAgICBjb25zdCBjb250ZW50VHlwZSA9IHJlcXVlc3QuaGVhZGVyLmdldChoZWFkZXJDb250ZW50VHlwZSk7XG4gICAgaWYgKChjb250ZW50VHlwZSA9PT0gbnVsbCB8fCBjb250ZW50VHlwZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29udGVudFR5cGUuaW5kZXhPZihjb250ZW50VHlwZVByZWZpeCkpID09PSAwKSB7XG4gICAgICAgIHF1ZXJ5ICs9XG4gICAgICAgICAgICBcIiZlbmNvZGluZz1cIiArXG4gICAgICAgICAgICAgICAgZW5jb2RlVVJJQ29tcG9uZW50KGNvbnRlbnRUeXBlLnNsaWNlKGNvbnRlbnRUeXBlUHJlZml4Lmxlbmd0aCkpO1xuICAgIH1cbiAgICBjb25zdCBjb21wcmVzc2lvbiA9IHJlcXVlc3QuaGVhZGVyLmdldChoZWFkZXJVbmFyeUVuY29kaW5nKTtcbiAgICBpZiAoY29tcHJlc3Npb24gIT09IG51bGwgJiYgY29tcHJlc3Npb24gIT09IFwiaWRlbnRpdHlcIikge1xuICAgICAgICBxdWVyeSArPSBcIiZjb21wcmVzc2lvbj1cIiArIGVuY29kZVVSSUNvbXBvbmVudChjb21wcmVzc2lvbik7XG4gICAgICAgIC8vIEZvcmNlIGJhc2U2NCBmb3IgY29tcHJlc3NlZCBwYXlsb2Fkcy5cbiAgICAgICAgdXNlQmFzZTY0ID0gdHJ1ZTtcbiAgICB9XG4gICAgaWYgKHVzZUJhc2U2NCkge1xuICAgICAgICBxdWVyeSArPSBcIiZiYXNlNjQ9MVwiO1xuICAgIH1cbiAgICBxdWVyeSArPSBcIiZtZXNzYWdlPVwiICsgZW5jb2RlTWVzc2FnZUZvclVybChtZXNzYWdlLCB1c2VCYXNlNjQpO1xuICAgIGNvbnN0IHVybCA9IHJlcXVlc3QudXJsICsgcXVlcnk7XG4gICAgLy8gT21pdCBoZWFkZXJzIHRoYXQgYXJlIG5vdCB1c2VkIGZvciB1bmFyeSBHRVQgcmVxdWVzdHMuXG4gICAgY29uc3QgaGVhZGVyID0gbmV3IEhlYWRlcnMocmVxdWVzdC5oZWFkZXIpO1xuICAgIFtcbiAgICAgICAgaGVhZGVyUHJvdG9jb2xWZXJzaW9uLFxuICAgICAgICBoZWFkZXJDb250ZW50VHlwZSxcbiAgICAgICAgaGVhZGVyVW5hcnlDb250ZW50TGVuZ3RoLFxuICAgICAgICBoZWFkZXJVbmFyeUVuY29kaW5nLFxuICAgICAgICBoZWFkZXJVbmFyeUFjY2VwdEVuY29kaW5nLFxuICAgIF0uZm9yRWFjaCgoaCkgPT4gaGVhZGVyLmRlbGV0ZShoKSk7XG4gICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgcmVxdWVzdCksIHsgaW5pdDogT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCByZXF1ZXN0LmluaXQpLCB7IG1ldGhvZDogXCJHRVRcIiB9KSwgdXJsLFxuICAgICAgICBoZWFkZXIgfSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/get-request.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/handler-factory.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/handler-factory.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createHandlerFactory: () => (/* binding */ createHandlerFactory)\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @bufbuild/protobuf */ \"(ssr)/./node_modules/@bufbuild/protobuf/dist/esm/service-type.js\");\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @bufbuild/protobuf */ \"(ssr)/./node_modules/@bufbuild/protobuf/dist/esm/proto-base64.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../code.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../connect-error.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _implementation_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../implementation.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/implementation.js\");\n/* harmony import */ var _content_type_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./content-type.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/content-type.js\");\n/* harmony import */ var _end_stream_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./end-stream.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/end-stream.js\");\n/* harmony import */ var _error_json_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./error-json.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/error-json.js\");\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./headers.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/headers.js\");\n/* harmony import */ var _http_status_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./http-status.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/http-status.js\");\n/* harmony import */ var _parse_timeout_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./parse-timeout.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/parse-timeout.js\");\n/* harmony import */ var _query_params_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./query-params.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/query-params.js\");\n/* harmony import */ var _trailer_mux_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./trailer-mux.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/trailer-mux.js\");\n/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./version.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/version.js\");\n/* harmony import */ var _protocol_compression_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../protocol/compression.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/compression.js\");\n/* harmony import */ var _protocol_serialization_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../protocol/serialization.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/serialization.js\");\n/* harmony import */ var _protocol_universal_handler_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../protocol/universal-handler.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/universal-handler.js\");\n/* harmony import */ var _protocol_universal_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../protocol/universal.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/universal.js\");\n/* harmony import */ var _protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../protocol/async-iterable.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/async-iterable.js\");\n/* harmony import */ var _protocol_content_type_matcher_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../protocol/content-type-matcher.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/content-type-matcher.js\");\n/* harmony import */ var _protocol_create_method_url_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../protocol/create-method-url.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/create-method-url.js\");\n/* harmony import */ var _protocol_invoke_implementation_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../protocol/invoke-implementation.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/invoke-implementation.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst protocolName = \"connect\";\nconst methodPost = \"POST\";\nconst methodGet = \"GET\";\n/**\n * Create a factory that creates Connect handlers.\n */\nfunction createHandlerFactory(options) {\n    const opt = (0,_protocol_universal_handler_js__WEBPACK_IMPORTED_MODULE_0__.validateUniversalHandlerOptions)(options);\n    const endStreamSerialization = (0,_end_stream_js__WEBPACK_IMPORTED_MODULE_1__.createEndStreamSerialization)(opt.jsonOptions);\n    function fact(spec) {\n        let h;\n        let contentTypeRegExp;\n        const serialization = (0,_protocol_serialization_js__WEBPACK_IMPORTED_MODULE_2__.createMethodSerializationLookup)(spec.method, opt.binaryOptions, opt.jsonOptions, opt);\n        switch (spec.kind) {\n            case _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_3__.MethodKind.Unary:\n                contentTypeRegExp = _content_type_js__WEBPACK_IMPORTED_MODULE_4__.contentTypeUnaryRegExp;\n                h = createUnaryHandler(opt, spec, serialization);\n                break;\n            default:\n                contentTypeRegExp = _content_type_js__WEBPACK_IMPORTED_MODULE_4__.contentTypeStreamRegExp;\n                h = createStreamHandler(opt, spec, serialization, endStreamSerialization);\n                break;\n        }\n        const allowedMethods = [methodPost];\n        if (spec.method.idempotency === _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_3__.MethodIdempotency.NoSideEffects) {\n            allowedMethods.push(methodGet);\n        }\n        return Object.assign(h, {\n            protocolNames: [protocolName],\n            supportedContentType: (0,_protocol_content_type_matcher_js__WEBPACK_IMPORTED_MODULE_5__.contentTypeMatcher)(contentTypeRegExp),\n            allowedMethods,\n            requestPath: (0,_protocol_create_method_url_js__WEBPACK_IMPORTED_MODULE_6__.createMethodUrl)(\"/\", spec.service, spec.method),\n            service: spec.service,\n            method: spec.method,\n        });\n    }\n    fact.protocolName = protocolName;\n    return fact;\n}\nfunction createUnaryHandler(opt, spec, serialization) {\n    return async function handle(req) {\n        const isGet = req.method == methodGet;\n        if (isGet && spec.method.idempotency != _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_3__.MethodIdempotency.NoSideEffects) {\n            return _protocol_universal_js__WEBPACK_IMPORTED_MODULE_7__.uResponseMethodNotAllowed;\n        }\n        const queryParams = new URL(req.url).searchParams;\n        const compressionRequested = isGet\n            ? queryParams.get(_query_params_js__WEBPACK_IMPORTED_MODULE_8__.paramCompression)\n            : req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_9__.headerUnaryEncoding);\n        const type = isGet\n            ? (0,_content_type_js__WEBPACK_IMPORTED_MODULE_4__.parseEncodingQuery)(queryParams.get(_query_params_js__WEBPACK_IMPORTED_MODULE_8__.paramEncoding))\n            : (0,_content_type_js__WEBPACK_IMPORTED_MODULE_4__.parseContentType)(req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_9__.headerContentType));\n        if (type == undefined || type.stream) {\n            return _protocol_universal_js__WEBPACK_IMPORTED_MODULE_7__.uResponseUnsupportedMediaType;\n        }\n        const timeout = (0,_parse_timeout_js__WEBPACK_IMPORTED_MODULE_10__.parseTimeout)(req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_9__.headerTimeout), opt.maxTimeoutMs);\n        const context = (0,_implementation_js__WEBPACK_IMPORTED_MODULE_11__.createHandlerContext)(Object.assign(Object.assign({}, spec), { requestMethod: req.method, protocolName, timeoutMs: timeout.timeoutMs, shutdownSignal: opt.shutdownSignal, requestSignal: req.signal, requestHeader: req.header, url: req.url, responseHeader: {\n                [_headers_js__WEBPACK_IMPORTED_MODULE_9__.headerContentType]: type.binary\n                    ? _content_type_js__WEBPACK_IMPORTED_MODULE_4__.contentTypeUnaryProto\n                    : _content_type_js__WEBPACK_IMPORTED_MODULE_4__.contentTypeUnaryJson,\n            }, contextValues: req.contextValues }));\n        const compression = (0,_protocol_compression_js__WEBPACK_IMPORTED_MODULE_12__.compressionNegotiate)(opt.acceptCompression, compressionRequested, req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_9__.headerUnaryAcceptEncoding), _headers_js__WEBPACK_IMPORTED_MODULE_9__.headerUnaryAcceptEncoding);\n        let status = _protocol_universal_js__WEBPACK_IMPORTED_MODULE_7__.uResponseOk.status;\n        let body;\n        try {\n            if (opt.requireConnectProtocolHeader) {\n                if (isGet) {\n                    (0,_version_js__WEBPACK_IMPORTED_MODULE_13__.requireProtocolVersionParam)(queryParams);\n                }\n                else {\n                    (0,_version_js__WEBPACK_IMPORTED_MODULE_13__.requireProtocolVersionHeader)(req.header);\n                }\n            }\n            // raise compression error to serialize it as a error response\n            if (compression.error) {\n                throw compression.error;\n            }\n            // raise timeout parsing error to serialize it as a trailer status\n            if (timeout.error) {\n                throw timeout.error;\n            }\n            let reqBody;\n            if (isGet) {\n                reqBody = await readUnaryMessageFromQuery(opt.readMaxBytes, compression.request, queryParams);\n            }\n            else {\n                reqBody = await readUnaryMessageFromBody(opt.readMaxBytes, compression.request, req);\n            }\n            const input = parseUnaryMessage(spec.method, type.binary, serialization, reqBody);\n            const output = await (0,_protocol_invoke_implementation_js__WEBPACK_IMPORTED_MODULE_14__.invokeUnaryImplementation)(spec, context, input, opt.interceptors);\n            body = serialization.getO(type.binary).serialize(output);\n        }\n        catch (e) {\n            let error;\n            if (e instanceof _connect_error_js__WEBPACK_IMPORTED_MODULE_15__.ConnectError) {\n                error = e;\n            }\n            else {\n                error = new _connect_error_js__WEBPACK_IMPORTED_MODULE_15__.ConnectError(\"internal error\", _code_js__WEBPACK_IMPORTED_MODULE_16__.Code.Internal, undefined, undefined, e);\n            }\n            status = (0,_http_status_js__WEBPACK_IMPORTED_MODULE_17__.codeToHttpStatus)(error.code);\n            context.responseHeader.set(_headers_js__WEBPACK_IMPORTED_MODULE_9__.headerContentType, _content_type_js__WEBPACK_IMPORTED_MODULE_4__.contentTypeUnaryJson);\n            error.metadata.forEach((value, key) => {\n                context.responseHeader.set(key, value);\n            });\n            body = (0,_error_json_js__WEBPACK_IMPORTED_MODULE_18__.errorToJsonBytes)(error, opt.jsonOptions);\n        }\n        finally {\n            context.abort();\n        }\n        if (compression.response && body.byteLength >= opt.compressMinBytes) {\n            body = await compression.response.compress(body);\n            context.responseHeader.set(_headers_js__WEBPACK_IMPORTED_MODULE_9__.headerUnaryEncoding, compression.response.name);\n        }\n        const header = (0,_trailer_mux_js__WEBPACK_IMPORTED_MODULE_19__.trailerMux)(context.responseHeader, context.responseTrailer);\n        header.set(_headers_js__WEBPACK_IMPORTED_MODULE_9__.headerUnaryContentLength, body.byteLength.toString(10));\n        return {\n            status,\n            body: (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_20__.createAsyncIterable)([body]),\n            header,\n        };\n    };\n}\nasync function readUnaryMessageFromBody(readMaxBytes, compression, request) {\n    if (typeof request.body == \"object\" &&\n        request.body !== null &&\n        Symbol.asyncIterator in request.body) {\n        let reqBytes = await (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_20__.readAllBytes)(request.body, readMaxBytes, request.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_9__.headerUnaryContentLength));\n        if (compression) {\n            reqBytes = await compression.decompress(reqBytes, readMaxBytes);\n        }\n        return reqBytes;\n    }\n    return request.body;\n}\nasync function readUnaryMessageFromQuery(readMaxBytes, compression, queryParams) {\n    var _a;\n    const base64 = queryParams.get(_query_params_js__WEBPACK_IMPORTED_MODULE_8__.paramBase64);\n    const message = (_a = queryParams.get(_query_params_js__WEBPACK_IMPORTED_MODULE_8__.paramMessage)) !== null && _a !== void 0 ? _a : \"\";\n    let decoded;\n    if (base64 === \"1\") {\n        decoded = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_21__.protoBase64.dec(message);\n    }\n    else {\n        decoded = new TextEncoder().encode(message);\n    }\n    if (compression) {\n        decoded = await compression.decompress(decoded, readMaxBytes);\n    }\n    return decoded;\n}\nfunction parseUnaryMessage(method, useBinaryFormat, serialization, input) {\n    if (input instanceof Uint8Array) {\n        return serialization.getI(useBinaryFormat).parse(input);\n    }\n    if (useBinaryFormat) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_15__.ConnectError(\"received parsed JSON request body, but content-type indicates binary format\", _code_js__WEBPACK_IMPORTED_MODULE_16__.Code.Internal);\n    }\n    try {\n        return method.I.fromJson(input);\n    }\n    catch (e) {\n        throw _connect_error_js__WEBPACK_IMPORTED_MODULE_15__.ConnectError.from(e, _code_js__WEBPACK_IMPORTED_MODULE_16__.Code.InvalidArgument);\n    }\n}\nfunction createStreamHandler(opt, spec, serialization, endStreamSerialization) {\n    return async function handle(req) {\n        (0,_protocol_universal_js__WEBPACK_IMPORTED_MODULE_7__.assertByteStreamRequest)(req);\n        const type = (0,_content_type_js__WEBPACK_IMPORTED_MODULE_4__.parseContentType)(req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_9__.headerContentType));\n        if (type == undefined || !type.stream) {\n            return _protocol_universal_js__WEBPACK_IMPORTED_MODULE_7__.uResponseUnsupportedMediaType;\n        }\n        if (req.method !== methodPost) {\n            return _protocol_universal_js__WEBPACK_IMPORTED_MODULE_7__.uResponseMethodNotAllowed;\n        }\n        const timeout = (0,_parse_timeout_js__WEBPACK_IMPORTED_MODULE_10__.parseTimeout)(req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_9__.headerTimeout), opt.maxTimeoutMs);\n        const context = (0,_implementation_js__WEBPACK_IMPORTED_MODULE_11__.createHandlerContext)(Object.assign(Object.assign({}, spec), { requestMethod: req.method, protocolName, timeoutMs: timeout.timeoutMs, shutdownSignal: opt.shutdownSignal, requestSignal: req.signal, requestHeader: req.header, url: req.url, responseHeader: {\n                [_headers_js__WEBPACK_IMPORTED_MODULE_9__.headerContentType]: type.binary\n                    ? _content_type_js__WEBPACK_IMPORTED_MODULE_4__.contentTypeStreamProto\n                    : _content_type_js__WEBPACK_IMPORTED_MODULE_4__.contentTypeStreamJson,\n            }, contextValues: req.contextValues }));\n        const compression = (0,_protocol_compression_js__WEBPACK_IMPORTED_MODULE_12__.compressionNegotiate)(opt.acceptCompression, req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_9__.headerStreamEncoding), req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_9__.headerStreamAcceptEncoding), _headers_js__WEBPACK_IMPORTED_MODULE_9__.headerStreamAcceptEncoding);\n        if (compression.response) {\n            context.responseHeader.set(_headers_js__WEBPACK_IMPORTED_MODULE_9__.headerStreamEncoding, compression.response.name);\n        }\n        // We split the pipeline into two parts: The request iterator, and the\n        // response iterator. We do this because the request iterator is responsible\n        // for parsing the request body, and we don't want write errors of the response\n        // iterator to affect the request iterator.\n        const inputIt = (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_20__.pipe)(req.body, (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_20__.transformPrepend)(() => {\n            if (opt.requireConnectProtocolHeader) {\n                (0,_version_js__WEBPACK_IMPORTED_MODULE_13__.requireProtocolVersionHeader)(req.header);\n            }\n            // raise compression error to serialize it as the end stream response\n            if (compression.error)\n                throw compression.error;\n            // raise timeout parsing error to serialize it as a trailer status\n            if (timeout.error)\n                throw timeout.error;\n            return undefined;\n        }), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_20__.transformSplitEnvelope)(opt.readMaxBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_20__.transformDecompressEnvelope)(compression.request, opt.readMaxBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_20__.transformParseEnvelope)(serialization.getI(type.binary), _end_stream_js__WEBPACK_IMPORTED_MODULE_1__.endStreamFlag));\n        const it = (0,_protocol_invoke_implementation_js__WEBPACK_IMPORTED_MODULE_14__.transformInvokeImplementation)(spec, context, opt.interceptors)(inputIt)[Symbol.asyncIterator]();\n        const outputIt = (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_20__.pipe)(\n        // We wrap the iterator in an async iterator to ensure that the\n        // abort signal is aborted when the iterator is done.\n        {\n            [Symbol.asyncIterator]() {\n                return {\n                    next: () => it.next(),\n                    throw: (e) => {\n                        var _a, _b;\n                        context.abort(e);\n                        return (_b = (_a = it.throw) === null || _a === void 0 ? void 0 : _a.call(it, e)) !== null && _b !== void 0 ? _b : Promise.reject({ done: true });\n                    },\n                    return: (v) => {\n                        var _a, _b;\n                        context.abort();\n                        return ((_b = (_a = it.return) === null || _a === void 0 ? void 0 : _a.call(it, v)) !== null && _b !== void 0 ? _b : Promise.resolve({ done: true, value: v }));\n                    },\n                };\n            },\n        }, (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_20__.transformSerializeEnvelope)(serialization.getO(type.binary)), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_20__.transformCatchFinally)((e) => {\n            context.abort();\n            const end = {\n                metadata: context.responseTrailer,\n            };\n            if (e instanceof _connect_error_js__WEBPACK_IMPORTED_MODULE_15__.ConnectError) {\n                end.error = e;\n            }\n            else if (e !== undefined) {\n                end.error = new _connect_error_js__WEBPACK_IMPORTED_MODULE_15__.ConnectError(\"internal error\", _code_js__WEBPACK_IMPORTED_MODULE_16__.Code.Internal, undefined, undefined, e);\n            }\n            return {\n                flags: _end_stream_js__WEBPACK_IMPORTED_MODULE_1__.endStreamFlag,\n                data: endStreamSerialization.serialize(end),\n            };\n        }), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_20__.transformCompressEnvelope)(compression.response, opt.compressMinBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_20__.transformJoinEnvelopes)(), { propagateDownStreamError: true });\n        return Object.assign(Object.assign({}, _protocol_universal_js__WEBPACK_IMPORTED_MODULE_7__.uResponseOk), { \n            // We wait for the first response body bytes before resolving, so that\n            // implementations have a chance to add headers before an adapter commits\n            // them to the wire.\n            body: await (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_20__.untilFirst)(outputIt), header: context.responseHeader });\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/handler-factory.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/headers.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/headers.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerContentType: () => (/* binding */ headerContentType),\n/* harmony export */   headerProtocolVersion: () => (/* binding */ headerProtocolVersion),\n/* harmony export */   headerStreamAcceptEncoding: () => (/* binding */ headerStreamAcceptEncoding),\n/* harmony export */   headerStreamEncoding: () => (/* binding */ headerStreamEncoding),\n/* harmony export */   headerTimeout: () => (/* binding */ headerTimeout),\n/* harmony export */   headerUnaryAcceptEncoding: () => (/* binding */ headerUnaryAcceptEncoding),\n/* harmony export */   headerUnaryContentLength: () => (/* binding */ headerUnaryContentLength),\n/* harmony export */   headerUnaryEncoding: () => (/* binding */ headerUnaryEncoding),\n/* harmony export */   headerUserAgent: () => (/* binding */ headerUserAgent)\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * @private Internal code, does not follow semantic versioning.\n */\nconst headerContentType = \"Content-Type\";\nconst headerUnaryContentLength = \"Content-Length\";\nconst headerUnaryEncoding = \"Content-Encoding\";\nconst headerStreamEncoding = \"Connect-Content-Encoding\";\nconst headerUnaryAcceptEncoding = \"Accept-Encoding\";\nconst headerStreamAcceptEncoding = \"Connect-Accept-Encoding\";\nconst headerTimeout = \"Connect-Timeout-Ms\";\nconst headerProtocolVersion = \"Connect-Protocol-Version\";\nconst headerUserAgent = \"User-Agent\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1jb25uZWN0L2hlYWRlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZS1jby9ldGhvcy1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AY29ubmVjdHJwYy9jb25uZWN0L2Rpc3QvZXNtL3Byb3RvY29sLWNvbm5lY3QvaGVhZGVycy5qcz8zZGNjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgVGhlIENvbm5lY3QgQXV0aG9yc1xuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4vKipcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgY29uc3QgaGVhZGVyQ29udGVudFR5cGUgPSBcIkNvbnRlbnQtVHlwZVwiO1xuZXhwb3J0IGNvbnN0IGhlYWRlclVuYXJ5Q29udGVudExlbmd0aCA9IFwiQ29udGVudC1MZW5ndGhcIjtcbmV4cG9ydCBjb25zdCBoZWFkZXJVbmFyeUVuY29kaW5nID0gXCJDb250ZW50LUVuY29kaW5nXCI7XG5leHBvcnQgY29uc3QgaGVhZGVyU3RyZWFtRW5jb2RpbmcgPSBcIkNvbm5lY3QtQ29udGVudC1FbmNvZGluZ1wiO1xuZXhwb3J0IGNvbnN0IGhlYWRlclVuYXJ5QWNjZXB0RW5jb2RpbmcgPSBcIkFjY2VwdC1FbmNvZGluZ1wiO1xuZXhwb3J0IGNvbnN0IGhlYWRlclN0cmVhbUFjY2VwdEVuY29kaW5nID0gXCJDb25uZWN0LUFjY2VwdC1FbmNvZGluZ1wiO1xuZXhwb3J0IGNvbnN0IGhlYWRlclRpbWVvdXQgPSBcIkNvbm5lY3QtVGltZW91dC1Nc1wiO1xuZXhwb3J0IGNvbnN0IGhlYWRlclByb3RvY29sVmVyc2lvbiA9IFwiQ29ubmVjdC1Qcm90b2NvbC1WZXJzaW9uXCI7XG5leHBvcnQgY29uc3QgaGVhZGVyVXNlckFnZW50ID0gXCJVc2VyLUFnZW50XCI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/headers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/http-status.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/http-status.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   codeFromHttpStatus: () => (/* binding */ codeFromHttpStatus),\n/* harmony export */   codeToHttpStatus: () => (/* binding */ codeToHttpStatus)\n/* harmony export */ });\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../code.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Determine the Connect error code for the given HTTP status code.\n * See https://connectrpc.com/docs/protocol/#http-to-error-code\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction codeFromHttpStatus(httpStatus) {\n    switch (httpStatus) {\n        case 400: // Bad Request\n            return _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Internal;\n        case 401: // Unauthorized\n            return _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unauthenticated;\n        case 403: // Forbidden\n            return _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.PermissionDenied;\n        case 404: // Not Found\n            return _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unimplemented;\n        case 429: // Too Many Requests\n            return _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unavailable;\n        case 502: // Bad Gateway\n            return _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unavailable;\n        case 503: // Service Unavailable\n            return _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unavailable;\n        case 504: // Gateway Timeout\n            return _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unavailable;\n        default:\n            return _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unknown;\n    }\n}\n/**\n * Returns a HTTP status code for the given Connect code.\n * See https://connectrpc.com/docs/protocol#error-codes\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction codeToHttpStatus(code) {\n    switch (code) {\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Canceled:\n            return 499; // Client Closed Request\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unknown:\n            return 500; // Internal Server Error\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.InvalidArgument:\n            return 400; // Bad Request\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.DeadlineExceeded:\n            return 504; // Gateway Timeout\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.NotFound:\n            return 404; // Not Found\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.AlreadyExists:\n            return 409; // Conflict\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.PermissionDenied:\n            return 403; // Forbidden\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.ResourceExhausted:\n            return 429; // Too Many Requests\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.FailedPrecondition:\n            return 400; // Bad Request\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Aborted:\n            return 409; // Conflict\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.OutOfRange:\n            return 400; // Bad Request\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unimplemented:\n            return 501; // Not Implemented\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Internal:\n            return 500; // Internal Server Error\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unavailable:\n            return 503; // Service Unavailable\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.DataLoss:\n            return 500; // Internal Server Error\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unauthenticated:\n            return 401; // Unauthorized\n        default:\n            return 500; // same as CodeUnknown\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1jb25uZWN0L2h0dHAtc3RhdHVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2tDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLG1CQUFtQiwwQ0FBSTtBQUN2QjtBQUNBLG1CQUFtQiwwQ0FBSTtBQUN2QjtBQUNBLG1CQUFtQiwwQ0FBSTtBQUN2QjtBQUNBLG1CQUFtQiwwQ0FBSTtBQUN2QjtBQUNBLG1CQUFtQiwwQ0FBSTtBQUN2QjtBQUNBLG1CQUFtQiwwQ0FBSTtBQUN2QjtBQUNBLG1CQUFtQiwwQ0FBSTtBQUN2QjtBQUNBLG1CQUFtQiwwQ0FBSTtBQUN2QjtBQUNBLG1CQUFtQiwwQ0FBSTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZS1jby9ldGhvcy1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AY29ubmVjdHJwYy9jb25uZWN0L2Rpc3QvZXNtL3Byb3RvY29sLWNvbm5lY3QvaHR0cC1zdGF0dXMuanM/M2Q4MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuaW1wb3J0IHsgQ29kZSB9IGZyb20gXCIuLi9jb2RlLmpzXCI7XG4vKipcbiAqIERldGVybWluZSB0aGUgQ29ubmVjdCBlcnJvciBjb2RlIGZvciB0aGUgZ2l2ZW4gSFRUUCBzdGF0dXMgY29kZS5cbiAqIFNlZSBodHRwczovL2Nvbm5lY3RycGMuY29tL2RvY3MvcHJvdG9jb2wvI2h0dHAtdG8tZXJyb3ItY29kZVxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY29kZUZyb21IdHRwU3RhdHVzKGh0dHBTdGF0dXMpIHtcbiAgICBzd2l0Y2ggKGh0dHBTdGF0dXMpIHtcbiAgICAgICAgY2FzZSA0MDA6IC8vIEJhZCBSZXF1ZXN0XG4gICAgICAgICAgICByZXR1cm4gQ29kZS5JbnRlcm5hbDtcbiAgICAgICAgY2FzZSA0MDE6IC8vIFVuYXV0aG9yaXplZFxuICAgICAgICAgICAgcmV0dXJuIENvZGUuVW5hdXRoZW50aWNhdGVkO1xuICAgICAgICBjYXNlIDQwMzogLy8gRm9yYmlkZGVuXG4gICAgICAgICAgICByZXR1cm4gQ29kZS5QZXJtaXNzaW9uRGVuaWVkO1xuICAgICAgICBjYXNlIDQwNDogLy8gTm90IEZvdW5kXG4gICAgICAgICAgICByZXR1cm4gQ29kZS5VbmltcGxlbWVudGVkO1xuICAgICAgICBjYXNlIDQyOTogLy8gVG9vIE1hbnkgUmVxdWVzdHNcbiAgICAgICAgICAgIHJldHVybiBDb2RlLlVuYXZhaWxhYmxlO1xuICAgICAgICBjYXNlIDUwMjogLy8gQmFkIEdhdGV3YXlcbiAgICAgICAgICAgIHJldHVybiBDb2RlLlVuYXZhaWxhYmxlO1xuICAgICAgICBjYXNlIDUwMzogLy8gU2VydmljZSBVbmF2YWlsYWJsZVxuICAgICAgICAgICAgcmV0dXJuIENvZGUuVW5hdmFpbGFibGU7XG4gICAgICAgIGNhc2UgNTA0OiAvLyBHYXRld2F5IFRpbWVvdXRcbiAgICAgICAgICAgIHJldHVybiBDb2RlLlVuYXZhaWxhYmxlO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIENvZGUuVW5rbm93bjtcbiAgICB9XG59XG4vKipcbiAqIFJldHVybnMgYSBIVFRQIHN0YXR1cyBjb2RlIGZvciB0aGUgZ2l2ZW4gQ29ubmVjdCBjb2RlLlxuICogU2VlIGh0dHBzOi8vY29ubmVjdHJwYy5jb20vZG9jcy9wcm90b2NvbCNlcnJvci1jb2Rlc1xuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY29kZVRvSHR0cFN0YXR1cyhjb2RlKSB7XG4gICAgc3dpdGNoIChjb2RlKSB7XG4gICAgICAgIGNhc2UgQ29kZS5DYW5jZWxlZDpcbiAgICAgICAgICAgIHJldHVybiA0OTk7IC8vIENsaWVudCBDbG9zZWQgUmVxdWVzdFxuICAgICAgICBjYXNlIENvZGUuVW5rbm93bjpcbiAgICAgICAgICAgIHJldHVybiA1MDA7IC8vIEludGVybmFsIFNlcnZlciBFcnJvclxuICAgICAgICBjYXNlIENvZGUuSW52YWxpZEFyZ3VtZW50OlxuICAgICAgICAgICAgcmV0dXJuIDQwMDsgLy8gQmFkIFJlcXVlc3RcbiAgICAgICAgY2FzZSBDb2RlLkRlYWRsaW5lRXhjZWVkZWQ6XG4gICAgICAgICAgICByZXR1cm4gNTA0OyAvLyBHYXRld2F5IFRpbWVvdXRcbiAgICAgICAgY2FzZSBDb2RlLk5vdEZvdW5kOlxuICAgICAgICAgICAgcmV0dXJuIDQwNDsgLy8gTm90IEZvdW5kXG4gICAgICAgIGNhc2UgQ29kZS5BbHJlYWR5RXhpc3RzOlxuICAgICAgICAgICAgcmV0dXJuIDQwOTsgLy8gQ29uZmxpY3RcbiAgICAgICAgY2FzZSBDb2RlLlBlcm1pc3Npb25EZW5pZWQ6XG4gICAgICAgICAgICByZXR1cm4gNDAzOyAvLyBGb3JiaWRkZW5cbiAgICAgICAgY2FzZSBDb2RlLlJlc291cmNlRXhoYXVzdGVkOlxuICAgICAgICAgICAgcmV0dXJuIDQyOTsgLy8gVG9vIE1hbnkgUmVxdWVzdHNcbiAgICAgICAgY2FzZSBDb2RlLkZhaWxlZFByZWNvbmRpdGlvbjpcbiAgICAgICAgICAgIHJldHVybiA0MDA7IC8vIEJhZCBSZXF1ZXN0XG4gICAgICAgIGNhc2UgQ29kZS5BYm9ydGVkOlxuICAgICAgICAgICAgcmV0dXJuIDQwOTsgLy8gQ29uZmxpY3RcbiAgICAgICAgY2FzZSBDb2RlLk91dE9mUmFuZ2U6XG4gICAgICAgICAgICByZXR1cm4gNDAwOyAvLyBCYWQgUmVxdWVzdFxuICAgICAgICBjYXNlIENvZGUuVW5pbXBsZW1lbnRlZDpcbiAgICAgICAgICAgIHJldHVybiA1MDE7IC8vIE5vdCBJbXBsZW1lbnRlZFxuICAgICAgICBjYXNlIENvZGUuSW50ZXJuYWw6XG4gICAgICAgICAgICByZXR1cm4gNTAwOyAvLyBJbnRlcm5hbCBTZXJ2ZXIgRXJyb3JcbiAgICAgICAgY2FzZSBDb2RlLlVuYXZhaWxhYmxlOlxuICAgICAgICAgICAgcmV0dXJuIDUwMzsgLy8gU2VydmljZSBVbmF2YWlsYWJsZVxuICAgICAgICBjYXNlIENvZGUuRGF0YUxvc3M6XG4gICAgICAgICAgICByZXR1cm4gNTAwOyAvLyBJbnRlcm5hbCBTZXJ2ZXIgRXJyb3JcbiAgICAgICAgY2FzZSBDb2RlLlVuYXV0aGVudGljYXRlZDpcbiAgICAgICAgICAgIHJldHVybiA0MDE7IC8vIFVuYXV0aG9yaXplZFxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIDUwMDsgLy8gc2FtZSBhcyBDb2RlVW5rbm93blxuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/http-status.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/parse-timeout.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/parse-timeout.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseTimeout: () => (/* binding */ parseTimeout)\n/* harmony export */ });\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../code.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../connect-error.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * Parse a Connect Timeout (Deadline) header.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction parseTimeout(value, maxTimeoutMs) {\n    if (value === null) {\n        return {};\n    }\n    const results = /^\\d{1,10}$/.exec(value);\n    if (results === null) {\n        return {\n            error: new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(`protocol error: invalid connect timeout value: ${value}`, _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.InvalidArgument),\n        };\n    }\n    const timeoutMs = parseInt(results[0]);\n    if (timeoutMs > maxTimeoutMs) {\n        return {\n            timeoutMs: timeoutMs,\n            error: new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(`timeout ${timeoutMs}ms must be <= ${maxTimeoutMs}`, _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.InvalidArgument),\n        };\n    }\n    return {\n        timeoutMs: parseInt(results[0]),\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1jb25uZWN0L3BhcnNlLXRpbWVvdXQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDa0M7QUFDaUI7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLEtBQUs7QUFDOUI7QUFDQTtBQUNBLHVCQUF1QiwyREFBWSxtREFBbUQsTUFBTSxHQUFHLDBDQUFJO0FBQ25HO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QiwyREFBWSxZQUFZLFVBQVUsZ0JBQWdCLGFBQWEsR0FBRywwQ0FBSTtBQUM3RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZS1jby9ldGhvcy1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AY29ubmVjdHJwYy9jb25uZWN0L2Rpc3QvZXNtL3Byb3RvY29sLWNvbm5lY3QvcGFyc2UtdGltZW91dC5qcz8wNTgxIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgVGhlIENvbm5lY3QgQXV0aG9yc1xuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5pbXBvcnQgeyBDb2RlIH0gZnJvbSBcIi4uL2NvZGUuanNcIjtcbmltcG9ydCB7IENvbm5lY3RFcnJvciB9IGZyb20gXCIuLi9jb25uZWN0LWVycm9yLmpzXCI7XG4vKipcbiAqIFBhcnNlIGEgQ29ubmVjdCBUaW1lb3V0IChEZWFkbGluZSkgaGVhZGVyLlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VUaW1lb3V0KHZhbHVlLCBtYXhUaW1lb3V0TXMpIHtcbiAgICBpZiAodmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIHt9O1xuICAgIH1cbiAgICBjb25zdCByZXN1bHRzID0gL15cXGR7MSwxMH0kLy5leGVjKHZhbHVlKTtcbiAgICBpZiAocmVzdWx0cyA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgZXJyb3I6IG5ldyBDb25uZWN0RXJyb3IoYHByb3RvY29sIGVycm9yOiBpbnZhbGlkIGNvbm5lY3QgdGltZW91dCB2YWx1ZTogJHt2YWx1ZX1gLCBDb2RlLkludmFsaWRBcmd1bWVudCksXG4gICAgICAgIH07XG4gICAgfVxuICAgIGNvbnN0IHRpbWVvdXRNcyA9IHBhcnNlSW50KHJlc3VsdHNbMF0pO1xuICAgIGlmICh0aW1lb3V0TXMgPiBtYXhUaW1lb3V0TXMpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHRpbWVvdXRNczogdGltZW91dE1zLFxuICAgICAgICAgICAgZXJyb3I6IG5ldyBDb25uZWN0RXJyb3IoYHRpbWVvdXQgJHt0aW1lb3V0TXN9bXMgbXVzdCBiZSA8PSAke21heFRpbWVvdXRNc31gLCBDb2RlLkludmFsaWRBcmd1bWVudCksXG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIHRpbWVvdXRNczogcGFyc2VJbnQocmVzdWx0c1swXSksXG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/parse-timeout.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/query-params.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/query-params.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   paramBase64: () => (/* binding */ paramBase64),\n/* harmony export */   paramCompression: () => (/* binding */ paramCompression),\n/* harmony export */   paramConnectVersion: () => (/* binding */ paramConnectVersion),\n/* harmony export */   paramEncoding: () => (/* binding */ paramEncoding),\n/* harmony export */   paramMessage: () => (/* binding */ paramMessage)\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * @private Internal code, does not follow semantic versioning.\n */\nconst paramConnectVersion = \"connect\";\nconst paramEncoding = \"encoding\";\nconst paramCompression = \"compression\";\nconst paramBase64 = \"base64\";\nconst paramMessage = \"message\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1jb25uZWN0L3F1ZXJ5LXBhcmFtcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BlLWNvL2V0aG9zLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0Bjb25uZWN0cnBjL2Nvbm5lY3QvZGlzdC9lc20vcHJvdG9jb2wtY29ubmVjdC9xdWVyeS1wYXJhbXMuanM/MWZmOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuLyoqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGNvbnN0IHBhcmFtQ29ubmVjdFZlcnNpb24gPSBcImNvbm5lY3RcIjtcbmV4cG9ydCBjb25zdCBwYXJhbUVuY29kaW5nID0gXCJlbmNvZGluZ1wiO1xuZXhwb3J0IGNvbnN0IHBhcmFtQ29tcHJlc3Npb24gPSBcImNvbXByZXNzaW9uXCI7XG5leHBvcnQgY29uc3QgcGFyYW1CYXNlNjQgPSBcImJhc2U2NFwiO1xuZXhwb3J0IGNvbnN0IHBhcmFtTWVzc2FnZSA9IFwibWVzc2FnZVwiO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/query-params.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/request-header.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/request-header.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   requestHeader: () => (/* binding */ requestHeader),\n/* harmony export */   requestHeaderWithCompression: () => (/* binding */ requestHeaderWithCompression)\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @bufbuild/protobuf */ \"(ssr)/./node_modules/@bufbuild/protobuf/dist/esm/service-type.js\");\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./headers.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/headers.js\");\n/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./version.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/version.js\");\n/* harmony import */ var _content_type_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./content-type.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/content-type.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n/**\n * Creates headers for a Connect request.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction requestHeader(methodKind, useBinaryFormat, timeoutMs, userProvidedHeaders, setUserAgent) {\n    const result = new Headers(userProvidedHeaders !== null && userProvidedHeaders !== void 0 ? userProvidedHeaders : {});\n    if (timeoutMs !== undefined) {\n        result.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerTimeout, `${timeoutMs}`);\n    }\n    result.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerContentType, methodKind == _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.MethodKind.Unary\n        ? useBinaryFormat\n            ? _content_type_js__WEBPACK_IMPORTED_MODULE_2__.contentTypeUnaryProto\n            : _content_type_js__WEBPACK_IMPORTED_MODULE_2__.contentTypeUnaryJson\n        : useBinaryFormat\n            ? _content_type_js__WEBPACK_IMPORTED_MODULE_2__.contentTypeStreamProto\n            : _content_type_js__WEBPACK_IMPORTED_MODULE_2__.contentTypeStreamJson);\n    result.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerProtocolVersion, _version_js__WEBPACK_IMPORTED_MODULE_3__.protocolVersion);\n    if (setUserAgent && !result.has(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerUserAgent)) {\n        result.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerUserAgent, \"connect-es/1.7.0\");\n    }\n    return result;\n}\n/**\n * Creates headers for a Connect request with compression.\n *\n * Note that we always set the Content-Encoding header for unary methods.\n * It is up to the caller to decide whether to apply compression - and remove\n * the header if compression is not used, for example because the payload is\n * too small to make compression effective.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction requestHeaderWithCompression(methodKind, useBinaryFormat, timeoutMs, userProvidedHeaders, acceptCompression, sendCompression, setUserAgent) {\n    const result = requestHeader(methodKind, useBinaryFormat, timeoutMs, userProvidedHeaders, setUserAgent);\n    if (sendCompression != null) {\n        const name = methodKind == _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.MethodKind.Unary\n            ? _headers_js__WEBPACK_IMPORTED_MODULE_0__.headerUnaryEncoding\n            : _headers_js__WEBPACK_IMPORTED_MODULE_0__.headerStreamEncoding;\n        result.set(name, sendCompression.name);\n    }\n    if (acceptCompression.length > 0) {\n        const name = methodKind == _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.MethodKind.Unary\n            ? _headers_js__WEBPACK_IMPORTED_MODULE_0__.headerUnaryAcceptEncoding\n            : _headers_js__WEBPACK_IMPORTED_MODULE_0__.headerStreamAcceptEncoding;\n        result.set(name, acceptCompression.map((c) => c.name).join(\",\"));\n    }\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1jb25uZWN0L3JlcXVlc3QtaGVhZGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2dEO0FBQzJKO0FBQzVKO0FBQ2lGO0FBQ2hJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLHdIQUF3SDtBQUN4SDtBQUNBLG1CQUFtQixzREFBYSxLQUFLLFVBQVU7QUFDL0M7QUFDQSxlQUFlLDBEQUFpQixnQkFBZ0IsMERBQVU7QUFDMUQ7QUFDQSxjQUFjLG1FQUFxQjtBQUNuQyxjQUFjLGtFQUFvQjtBQUNsQztBQUNBLGNBQWMsb0VBQXNCO0FBQ3BDLGNBQWMsbUVBQXFCO0FBQ25DLGVBQWUsOERBQXFCLEVBQUUsd0RBQWU7QUFDckQsb0NBQW9DLHdEQUFlO0FBQ25ELG1CQUFtQix3REFBZTtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLG1DQUFtQywwREFBVTtBQUM3QyxjQUFjLDREQUFtQjtBQUNqQyxjQUFjLDZEQUFvQjtBQUNsQztBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsMERBQVU7QUFDN0MsY0FBYyxrRUFBeUI7QUFDdkMsY0FBYyxtRUFBMEI7QUFDeEM7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZS1jby9ldGhvcy1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AY29ubmVjdHJwYy9jb25uZWN0L2Rpc3QvZXNtL3Byb3RvY29sLWNvbm5lY3QvcmVxdWVzdC1oZWFkZXIuanM/NGI3YyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuaW1wb3J0IHsgTWV0aG9kS2luZCB9IGZyb20gXCJAYnVmYnVpbGQvcHJvdG9idWZcIjtcbmltcG9ydCB7IGhlYWRlckNvbnRlbnRUeXBlLCBoZWFkZXJTdHJlYW1BY2NlcHRFbmNvZGluZywgaGVhZGVyU3RyZWFtRW5jb2RpbmcsIGhlYWRlclVuYXJ5QWNjZXB0RW5jb2RpbmcsIGhlYWRlclVuYXJ5RW5jb2RpbmcsIGhlYWRlclRpbWVvdXQsIGhlYWRlclByb3RvY29sVmVyc2lvbiwgaGVhZGVyVXNlckFnZW50LCB9IGZyb20gXCIuL2hlYWRlcnMuanNcIjtcbmltcG9ydCB7IHByb3RvY29sVmVyc2lvbiB9IGZyb20gXCIuL3ZlcnNpb24uanNcIjtcbmltcG9ydCB7IGNvbnRlbnRUeXBlU3RyZWFtSnNvbiwgY29udGVudFR5cGVTdHJlYW1Qcm90bywgY29udGVudFR5cGVVbmFyeUpzb24sIGNvbnRlbnRUeXBlVW5hcnlQcm90bywgfSBmcm9tIFwiLi9jb250ZW50LXR5cGUuanNcIjtcbi8qKlxuICogQ3JlYXRlcyBoZWFkZXJzIGZvciBhIENvbm5lY3QgcmVxdWVzdC5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlcXVlc3RIZWFkZXIobWV0aG9kS2luZCwgdXNlQmluYXJ5Rm9ybWF0LCB0aW1lb3V0TXMsIHVzZXJQcm92aWRlZEhlYWRlcnMsIHNldFVzZXJBZ2VudCkge1xuICAgIGNvbnN0IHJlc3VsdCA9IG5ldyBIZWFkZXJzKHVzZXJQcm92aWRlZEhlYWRlcnMgIT09IG51bGwgJiYgdXNlclByb3ZpZGVkSGVhZGVycyAhPT0gdm9pZCAwID8gdXNlclByb3ZpZGVkSGVhZGVycyA6IHt9KTtcbiAgICBpZiAodGltZW91dE1zICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmVzdWx0LnNldChoZWFkZXJUaW1lb3V0LCBgJHt0aW1lb3V0TXN9YCk7XG4gICAgfVxuICAgIHJlc3VsdC5zZXQoaGVhZGVyQ29udGVudFR5cGUsIG1ldGhvZEtpbmQgPT0gTWV0aG9kS2luZC5VbmFyeVxuICAgICAgICA/IHVzZUJpbmFyeUZvcm1hdFxuICAgICAgICAgICAgPyBjb250ZW50VHlwZVVuYXJ5UHJvdG9cbiAgICAgICAgICAgIDogY29udGVudFR5cGVVbmFyeUpzb25cbiAgICAgICAgOiB1c2VCaW5hcnlGb3JtYXRcbiAgICAgICAgICAgID8gY29udGVudFR5cGVTdHJlYW1Qcm90b1xuICAgICAgICAgICAgOiBjb250ZW50VHlwZVN0cmVhbUpzb24pO1xuICAgIHJlc3VsdC5zZXQoaGVhZGVyUHJvdG9jb2xWZXJzaW9uLCBwcm90b2NvbFZlcnNpb24pO1xuICAgIGlmIChzZXRVc2VyQWdlbnQgJiYgIXJlc3VsdC5oYXMoaGVhZGVyVXNlckFnZW50KSkge1xuICAgICAgICByZXN1bHQuc2V0KGhlYWRlclVzZXJBZ2VudCwgXCJjb25uZWN0LWVzLzEuNy4wXCIpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuLyoqXG4gKiBDcmVhdGVzIGhlYWRlcnMgZm9yIGEgQ29ubmVjdCByZXF1ZXN0IHdpdGggY29tcHJlc3Npb24uXG4gKlxuICogTm90ZSB0aGF0IHdlIGFsd2F5cyBzZXQgdGhlIENvbnRlbnQtRW5jb2RpbmcgaGVhZGVyIGZvciB1bmFyeSBtZXRob2RzLlxuICogSXQgaXMgdXAgdG8gdGhlIGNhbGxlciB0byBkZWNpZGUgd2hldGhlciB0byBhcHBseSBjb21wcmVzc2lvbiAtIGFuZCByZW1vdmVcbiAqIHRoZSBoZWFkZXIgaWYgY29tcHJlc3Npb24gaXMgbm90IHVzZWQsIGZvciBleGFtcGxlIGJlY2F1c2UgdGhlIHBheWxvYWQgaXNcbiAqIHRvbyBzbWFsbCB0byBtYWtlIGNvbXByZXNzaW9uIGVmZmVjdGl2ZS5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlcXVlc3RIZWFkZXJXaXRoQ29tcHJlc3Npb24obWV0aG9kS2luZCwgdXNlQmluYXJ5Rm9ybWF0LCB0aW1lb3V0TXMsIHVzZXJQcm92aWRlZEhlYWRlcnMsIGFjY2VwdENvbXByZXNzaW9uLCBzZW5kQ29tcHJlc3Npb24sIHNldFVzZXJBZ2VudCkge1xuICAgIGNvbnN0IHJlc3VsdCA9IHJlcXVlc3RIZWFkZXIobWV0aG9kS2luZCwgdXNlQmluYXJ5Rm9ybWF0LCB0aW1lb3V0TXMsIHVzZXJQcm92aWRlZEhlYWRlcnMsIHNldFVzZXJBZ2VudCk7XG4gICAgaWYgKHNlbmRDb21wcmVzc2lvbiAhPSBudWxsKSB7XG4gICAgICAgIGNvbnN0IG5hbWUgPSBtZXRob2RLaW5kID09IE1ldGhvZEtpbmQuVW5hcnlcbiAgICAgICAgICAgID8gaGVhZGVyVW5hcnlFbmNvZGluZ1xuICAgICAgICAgICAgOiBoZWFkZXJTdHJlYW1FbmNvZGluZztcbiAgICAgICAgcmVzdWx0LnNldChuYW1lLCBzZW5kQ29tcHJlc3Npb24ubmFtZSk7XG4gICAgfVxuICAgIGlmIChhY2NlcHRDb21wcmVzc2lvbi5sZW5ndGggPiAwKSB7XG4gICAgICAgIGNvbnN0IG5hbWUgPSBtZXRob2RLaW5kID09IE1ldGhvZEtpbmQuVW5hcnlcbiAgICAgICAgICAgID8gaGVhZGVyVW5hcnlBY2NlcHRFbmNvZGluZ1xuICAgICAgICAgICAgOiBoZWFkZXJTdHJlYW1BY2NlcHRFbmNvZGluZztcbiAgICAgICAgcmVzdWx0LnNldChuYW1lLCBhY2NlcHRDb21wcmVzc2lvbi5tYXAoKGMpID0+IGMubmFtZSkuam9pbihcIixcIikpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/request-header.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/trailer-mux.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/trailer-mux.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   trailerDemux: () => (/* binding */ trailerDemux),\n/* harmony export */   trailerMux: () => (/* binding */ trailerMux)\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * In unary RPCs, Connect transports trailing metadata as response header\n * fields, prefixed with \"trailer-\".\n *\n * This function demuxes headers and trailers into two separate Headers\n * objects.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction trailerDemux(header) {\n    const h = new Headers(), t = new Headers();\n    header.forEach((value, key) => {\n        if (key.toLowerCase().startsWith(\"trailer-\")) {\n            t.append(key.substring(8), value);\n        }\n        else {\n            h.append(key, value);\n        }\n    });\n    return [h, t];\n}\n/**\n * In unary RPCs, Connect transports trailing metadata as response header\n * fields, prefixed with \"trailer-\".\n *\n * This function muxes a header and a trailer into a single Headers object.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction trailerMux(header, trailer) {\n    const h = new Headers(header);\n    trailer.forEach((value, key) => {\n        h.append(`trailer-${key}`, value);\n    });\n    return h;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1jb25uZWN0L3RyYWlsZXItbXV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSw0QkFBNEIsSUFBSTtBQUNoQyxLQUFLO0FBQ0w7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BlLWNvL2V0aG9zLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0Bjb25uZWN0cnBjL2Nvbm5lY3QvZGlzdC9lc20vcHJvdG9jb2wtY29ubmVjdC90cmFpbGVyLW11eC5qcz82OWI0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgVGhlIENvbm5lY3QgQXV0aG9yc1xuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4vKipcbiAqIEluIHVuYXJ5IFJQQ3MsIENvbm5lY3QgdHJhbnNwb3J0cyB0cmFpbGluZyBtZXRhZGF0YSBhcyByZXNwb25zZSBoZWFkZXJcbiAqIGZpZWxkcywgcHJlZml4ZWQgd2l0aCBcInRyYWlsZXItXCIuXG4gKlxuICogVGhpcyBmdW5jdGlvbiBkZW11eGVzIGhlYWRlcnMgYW5kIHRyYWlsZXJzIGludG8gdHdvIHNlcGFyYXRlIEhlYWRlcnNcbiAqIG9iamVjdHMuXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0cmFpbGVyRGVtdXgoaGVhZGVyKSB7XG4gICAgY29uc3QgaCA9IG5ldyBIZWFkZXJzKCksIHQgPSBuZXcgSGVhZGVycygpO1xuICAgIGhlYWRlci5mb3JFYWNoKCh2YWx1ZSwga2V5KSA9PiB7XG4gICAgICAgIGlmIChrZXkudG9Mb3dlckNhc2UoKS5zdGFydHNXaXRoKFwidHJhaWxlci1cIikpIHtcbiAgICAgICAgICAgIHQuYXBwZW5kKGtleS5zdWJzdHJpbmcoOCksIHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGguYXBwZW5kKGtleSwgdmFsdWUpO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIFtoLCB0XTtcbn1cbi8qKlxuICogSW4gdW5hcnkgUlBDcywgQ29ubmVjdCB0cmFuc3BvcnRzIHRyYWlsaW5nIG1ldGFkYXRhIGFzIHJlc3BvbnNlIGhlYWRlclxuICogZmllbGRzLCBwcmVmaXhlZCB3aXRoIFwidHJhaWxlci1cIi5cbiAqXG4gKiBUaGlzIGZ1bmN0aW9uIG11eGVzIGEgaGVhZGVyIGFuZCBhIHRyYWlsZXIgaW50byBhIHNpbmdsZSBIZWFkZXJzIG9iamVjdC5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRyYWlsZXJNdXgoaGVhZGVyLCB0cmFpbGVyKSB7XG4gICAgY29uc3QgaCA9IG5ldyBIZWFkZXJzKGhlYWRlcik7XG4gICAgdHJhaWxlci5mb3JFYWNoKCh2YWx1ZSwga2V5KSA9PiB7XG4gICAgICAgIGguYXBwZW5kKGB0cmFpbGVyLSR7a2V5fWAsIHZhbHVlKTtcbiAgICB9KTtcbiAgICByZXR1cm4gaDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/trailer-mux.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/transport.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/transport.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createTransport: () => (/* binding */ createTransport)\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @bufbuild/protobuf */ \"(ssr)/./node_modules/@bufbuild/protobuf/dist/esm/service-type.js\");\n/* harmony import */ var _request_header_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./request-header.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/request-header.js\");\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./headers.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/headers.js\");\n/* harmony import */ var _validate_response_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./validate-response.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/validate-response.js\");\n/* harmony import */ var _trailer_mux_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./trailer-mux.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/trailer-mux.js\");\n/* harmony import */ var _error_json_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./error-json.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/error-json.js\");\n/* harmony import */ var _end_stream_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./end-stream.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/end-stream.js\");\n/* harmony import */ var _get_request_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./get-request.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/get-request.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../code.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../connect-error.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _http_headers_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../http-headers.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/http-headers.js\");\n/* harmony import */ var _protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../protocol/async-iterable.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/async-iterable.js\");\n/* harmony import */ var _protocol_create_method_url_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../protocol/create-method-url.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/create-method-url.js\");\n/* harmony import */ var _protocol_run_call_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../protocol/run-call.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/run-call.js\");\n/* harmony import */ var _protocol_serialization_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../protocol/serialization.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/serialization.js\");\n/* harmony import */ var _context_values_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../context-values.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/context-values.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __asyncValues = (undefined && undefined.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar __await = (undefined && undefined.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (undefined && undefined.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Create a Transport for the Connect protocol.\n */\nfunction createTransport(opt) {\n    return {\n        async unary(service, method, signal, timeoutMs, header, message, contextValues) {\n            const serialization = (0,_protocol_serialization_js__WEBPACK_IMPORTED_MODULE_0__.createMethodSerializationLookup)(method, opt.binaryOptions, opt.jsonOptions, opt);\n            timeoutMs =\n                timeoutMs === undefined\n                    ? opt.defaultTimeoutMs\n                    : timeoutMs <= 0\n                        ? undefined\n                        : timeoutMs;\n            return await (0,_protocol_run_call_js__WEBPACK_IMPORTED_MODULE_1__.runUnaryCall)({\n                interceptors: opt.interceptors,\n                signal,\n                timeoutMs,\n                req: {\n                    stream: false,\n                    service,\n                    method,\n                    url: (0,_protocol_create_method_url_js__WEBPACK_IMPORTED_MODULE_2__.createMethodUrl)(opt.baseUrl, service, method),\n                    init: {},\n                    header: (0,_request_header_js__WEBPACK_IMPORTED_MODULE_3__.requestHeaderWithCompression)(method.kind, opt.useBinaryFormat, timeoutMs, header, opt.acceptCompression, opt.sendCompression, true),\n                    contextValues: contextValues !== null && contextValues !== void 0 ? contextValues : (0,_context_values_js__WEBPACK_IMPORTED_MODULE_4__.createContextValues)(),\n                    message,\n                },\n                next: async (req) => {\n                    var _a;\n                    let requestBody = serialization\n                        .getI(opt.useBinaryFormat)\n                        .serialize(req.message);\n                    if (opt.sendCompression &&\n                        requestBody.byteLength > opt.compressMinBytes) {\n                        requestBody = await opt.sendCompression.compress(requestBody);\n                        req.header.set(_headers_js__WEBPACK_IMPORTED_MODULE_5__.headerUnaryEncoding, opt.sendCompression.name);\n                    }\n                    else {\n                        req.header.delete(_headers_js__WEBPACK_IMPORTED_MODULE_5__.headerUnaryEncoding);\n                    }\n                    const useGet = opt.useHttpGet === true &&\n                        method.idempotency === _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_6__.MethodIdempotency.NoSideEffects;\n                    let body;\n                    if (useGet) {\n                        req = (0,_get_request_js__WEBPACK_IMPORTED_MODULE_7__.transformConnectPostToGetRequest)(req, requestBody, opt.useBinaryFormat);\n                    }\n                    else {\n                        body = (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.createAsyncIterable)([requestBody]);\n                    }\n                    const universalResponse = await opt.httpClient({\n                        url: req.url,\n                        method: (_a = req.init.method) !== null && _a !== void 0 ? _a : \"POST\",\n                        header: req.header,\n                        signal: req.signal,\n                        body,\n                    });\n                    const { compression, isUnaryError, unaryError } = (0,_validate_response_js__WEBPACK_IMPORTED_MODULE_9__.validateResponseWithCompression)(method.kind, opt.acceptCompression, opt.useBinaryFormat, universalResponse.status, universalResponse.header);\n                    const [header, trailer] = (0,_trailer_mux_js__WEBPACK_IMPORTED_MODULE_10__.trailerDemux)(universalResponse.header);\n                    let responseBody = await (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.pipeTo)(universalResponse.body, (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.sinkAllBytes)(opt.readMaxBytes, universalResponse.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_5__.headerUnaryContentLength)), { propagateDownStreamError: false });\n                    if (compression) {\n                        responseBody = await compression.decompress(responseBody, opt.readMaxBytes);\n                    }\n                    if (isUnaryError) {\n                        throw (0,_error_json_js__WEBPACK_IMPORTED_MODULE_11__.errorFromJsonBytes)(responseBody, (0,_http_headers_js__WEBPACK_IMPORTED_MODULE_12__.appendHeaders)(header, trailer), unaryError);\n                    }\n                    return {\n                        stream: false,\n                        service,\n                        method,\n                        header,\n                        message: serialization\n                            .getO(opt.useBinaryFormat)\n                            .parse(responseBody),\n                        trailer,\n                    };\n                },\n            });\n        },\n        async stream(service, method, signal, timeoutMs, header, input, contextValues) {\n            const serialization = (0,_protocol_serialization_js__WEBPACK_IMPORTED_MODULE_0__.createMethodSerializationLookup)(method, opt.binaryOptions, opt.jsonOptions, opt);\n            const endStreamSerialization = (0,_end_stream_js__WEBPACK_IMPORTED_MODULE_13__.createEndStreamSerialization)(opt.jsonOptions);\n            timeoutMs =\n                timeoutMs === undefined\n                    ? opt.defaultTimeoutMs\n                    : timeoutMs <= 0\n                        ? undefined\n                        : timeoutMs;\n            return (0,_protocol_run_call_js__WEBPACK_IMPORTED_MODULE_1__.runStreamingCall)({\n                interceptors: opt.interceptors,\n                signal,\n                timeoutMs,\n                req: {\n                    stream: true,\n                    service,\n                    method,\n                    url: (0,_protocol_create_method_url_js__WEBPACK_IMPORTED_MODULE_2__.createMethodUrl)(opt.baseUrl, service, method),\n                    init: {\n                        method: \"POST\",\n                        redirect: \"error\",\n                        mode: \"cors\",\n                    },\n                    header: (0,_request_header_js__WEBPACK_IMPORTED_MODULE_3__.requestHeaderWithCompression)(method.kind, opt.useBinaryFormat, timeoutMs, header, opt.acceptCompression, opt.sendCompression, true),\n                    contextValues: contextValues !== null && contextValues !== void 0 ? contextValues : (0,_context_values_js__WEBPACK_IMPORTED_MODULE_4__.createContextValues)(),\n                    message: input,\n                },\n                next: async (req) => {\n                    const uRes = await opt.httpClient({\n                        url: req.url,\n                        method: \"POST\",\n                        header: req.header,\n                        signal: req.signal,\n                        body: (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.pipe)(req.message, (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.transformSerializeEnvelope)(serialization.getI(opt.useBinaryFormat)), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.transformCompressEnvelope)(opt.sendCompression, opt.compressMinBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.transformJoinEnvelopes)(), { propagateDownStreamError: true }),\n                    });\n                    const { compression } = (0,_validate_response_js__WEBPACK_IMPORTED_MODULE_9__.validateResponseWithCompression)(method.kind, opt.acceptCompression, opt.useBinaryFormat, uRes.status, uRes.header);\n                    const res = Object.assign(Object.assign({}, req), { header: uRes.header, trailer: new Headers(), message: (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.pipe)(uRes.body, (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.transformSplitEnvelope)(opt.readMaxBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.transformDecompressEnvelope)(compression !== null && compression !== void 0 ? compression : null, opt.readMaxBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.transformParseEnvelope)(serialization.getO(opt.useBinaryFormat), _end_stream_js__WEBPACK_IMPORTED_MODULE_13__.endStreamFlag, endStreamSerialization), function (iterable) {\n                            return __asyncGenerator(this, arguments, function* () {\n                                var _a, e_1, _b, _c;\n                                let endStreamReceived = false;\n                                try {\n                                    for (var _d = true, iterable_1 = __asyncValues(iterable), iterable_1_1; iterable_1_1 = yield __await(iterable_1.next()), _a = iterable_1_1.done, !_a; _d = true) {\n                                        _c = iterable_1_1.value;\n                                        _d = false;\n                                        const chunk = _c;\n                                        if (chunk.end) {\n                                            if (endStreamReceived) {\n                                                throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_14__.ConnectError(\"protocol error: received extra EndStreamResponse\", _code_js__WEBPACK_IMPORTED_MODULE_15__.Code.InvalidArgument);\n                                            }\n                                            endStreamReceived = true;\n                                            if (chunk.value.error) {\n                                                const error = chunk.value.error;\n                                                uRes.header.forEach((value, key) => {\n                                                    error.metadata.append(key, value);\n                                                });\n                                                throw error;\n                                            }\n                                            chunk.value.metadata.forEach((value, key) => res.trailer.set(key, value));\n                                            continue;\n                                        }\n                                        if (endStreamReceived) {\n                                            throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_14__.ConnectError(\"protocol error: received extra message after EndStreamResponse\", _code_js__WEBPACK_IMPORTED_MODULE_15__.Code.InvalidArgument);\n                                        }\n                                        yield yield __await(chunk.value);\n                                    }\n                                }\n                                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                                finally {\n                                    try {\n                                        if (!_d && !_a && (_b = iterable_1.return)) yield __await(_b.call(iterable_1));\n                                    }\n                                    finally { if (e_1) throw e_1.error; }\n                                }\n                                if (!endStreamReceived) {\n                                    throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_14__.ConnectError(\"protocol error: missing EndStreamResponse\", _code_js__WEBPACK_IMPORTED_MODULE_15__.Code.InvalidArgument);\n                                }\n                            });\n                        }, { propagateDownStreamError: true }) });\n                    return res;\n                },\n            });\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1jb25uZWN0L3RyYW5zcG9ydC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLFNBQUksSUFBSSxTQUFJO0FBQ2pDO0FBQ0E7QUFDQSwyR0FBMkcsdUZBQXVGLGNBQWM7QUFDaE4sdUJBQXVCLDhCQUE4QixnREFBZ0Qsd0RBQXdEO0FBQzdKLDZDQUE2QyxzQ0FBc0MsVUFBVSxtQkFBbUIsSUFBSTtBQUNwSDtBQUNBLGVBQWUsU0FBSSxJQUFJLFNBQUksNEJBQTRCO0FBQ3ZELHdCQUF3QixTQUFJLElBQUksU0FBSTtBQUNwQztBQUNBO0FBQ0EsaUJBQWlCLG9HQUFvRyxjQUFjO0FBQ25JLDhCQUE4QixzQkFBc0I7QUFDcEQsMEJBQTBCLFlBQVksc0JBQXNCLHFDQUFxQywyQ0FBMkMsTUFBTTtBQUNsSiw0QkFBNEIsTUFBTSxpQkFBaUIsWUFBWTtBQUMvRCx1QkFBdUI7QUFDdkIsOEJBQThCO0FBQzlCLDZCQUE2QjtBQUM3Qiw0QkFBNEI7QUFDNUI7QUFDdUQ7QUFDWTtBQUNVO0FBQ0o7QUFDekI7QUFDSztBQUN5QjtBQUNWO0FBQ2xDO0FBQ2lCO0FBQ0E7QUFDME07QUFDMUw7QUFDTTtBQUNNO0FBQ3BCO0FBQzNEO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLGtDQUFrQywyRkFBK0I7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLG1FQUFZO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLCtFQUFlO0FBQ3hDLDRCQUE0QjtBQUM1Qiw0QkFBNEIsZ0ZBQTRCO0FBQ3hELHdHQUF3Ryx1RUFBbUI7QUFDM0g7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1Qyw0REFBbUI7QUFDMUQ7QUFDQTtBQUNBLDBDQUEwQyw0REFBbUI7QUFDN0Q7QUFDQTtBQUNBLCtDQUErQyxpRUFBaUI7QUFDaEU7QUFDQTtBQUNBLDhCQUE4QixpRkFBZ0M7QUFDOUQ7QUFDQTtBQUNBLCtCQUErQixnRkFBbUI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIsNEJBQTRCLHdDQUF3QyxFQUFFLHNGQUErQjtBQUNyRyw4Q0FBOEMsOERBQVk7QUFDMUQsNkNBQTZDLG1FQUFNLHlCQUF5Qix5RUFBWSxnREFBZ0QsaUVBQXdCLE1BQU0saUNBQWlDO0FBQ3ZNO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLG1FQUFrQixlQUFlLGdFQUFhO0FBQzVFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBLGtDQUFrQywyRkFBK0I7QUFDakUsMkNBQTJDLDZFQUE0QjtBQUN2RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsdUVBQWdCO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLCtFQUFlO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCLDRCQUE0QixnRkFBNEI7QUFDeEQsd0dBQXdHLHVFQUFtQjtBQUMzSDtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsaUVBQUksY0FBYyx1RkFBMEIsMkNBQTJDLHNGQUF5Qiw2Q0FBNkMsbUZBQXNCLE1BQU0sZ0NBQWdDO0FBQ3ZQLHFCQUFxQjtBQUNyQiw0QkFBNEIsY0FBYyxFQUFFLHNGQUErQjtBQUMzRSw4REFBOEQsVUFBVSxzREFBc0QsaUVBQUksWUFBWSxtRkFBc0Isb0JBQW9CLHdGQUEyQix5RkFBeUYsbUZBQXNCLDBDQUEwQywwREFBYTtBQUN6WDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRHQUE0Ryw4RUFBOEU7QUFDMUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBEQUEwRCw0REFBWSxxREFBcUQsMkNBQUk7QUFDL0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQWlEO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRCw0REFBWSxtRUFBbUUsMkNBQUk7QUFDekk7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnREFBZ0QsUUFBUTtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QztBQUM5QztBQUNBO0FBQ0EsOENBQThDLDREQUFZLDhDQUE4QywyQ0FBSTtBQUM1RztBQUNBLDZCQUE2QjtBQUM3Qix5QkFBeUIsSUFBSSxnQ0FBZ0MsR0FBRztBQUNoRTtBQUNBLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZS1jby9ldGhvcy1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AY29ubmVjdHJwYy9jb25uZWN0L2Rpc3QvZXNtL3Byb3RvY29sLWNvbm5lY3QvdHJhbnNwb3J0LmpzPzY1MWYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbnZhciBfX2FzeW5jVmFsdWVzID0gKHRoaXMgJiYgdGhpcy5fX2FzeW5jVmFsdWVzKSB8fCBmdW5jdGlvbiAobykge1xuICAgIGlmICghU3ltYm9sLmFzeW5jSXRlcmF0b3IpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTeW1ib2wuYXN5bmNJdGVyYXRvciBpcyBub3QgZGVmaW5lZC5cIik7XG4gICAgdmFyIG0gPSBvW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSwgaTtcbiAgICByZXR1cm4gbSA/IG0uY2FsbChvKSA6IChvID0gdHlwZW9mIF9fdmFsdWVzID09PSBcImZ1bmN0aW9uXCIgPyBfX3ZhbHVlcyhvKSA6IG9bU3ltYm9sLml0ZXJhdG9yXSgpLCBpID0ge30sIHZlcmIoXCJuZXh0XCIpLCB2ZXJiKFwidGhyb3dcIiksIHZlcmIoXCJyZXR1cm5cIiksIGlbU3ltYm9sLmFzeW5jSXRlcmF0b3JdID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpczsgfSwgaSk7XG4gICAgZnVuY3Rpb24gdmVyYihuKSB7IGlbbl0gPSBvW25dICYmIGZ1bmN0aW9uICh2KSB7IHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7IHYgPSBvW25dKHYpLCBzZXR0bGUocmVzb2x2ZSwgcmVqZWN0LCB2LmRvbmUsIHYudmFsdWUpOyB9KTsgfTsgfVxuICAgIGZ1bmN0aW9uIHNldHRsZShyZXNvbHZlLCByZWplY3QsIGQsIHYpIHsgUHJvbWlzZS5yZXNvbHZlKHYpLnRoZW4oZnVuY3Rpb24odikgeyByZXNvbHZlKHsgdmFsdWU6IHYsIGRvbmU6IGQgfSk7IH0sIHJlamVjdCk7IH1cbn07XG52YXIgX19hd2FpdCA9ICh0aGlzICYmIHRoaXMuX19hd2FpdCkgfHwgZnVuY3Rpb24gKHYpIHsgcmV0dXJuIHRoaXMgaW5zdGFuY2VvZiBfX2F3YWl0ID8gKHRoaXMudiA9IHYsIHRoaXMpIDogbmV3IF9fYXdhaXQodik7IH1cbnZhciBfX2FzeW5jR2VuZXJhdG9yID0gKHRoaXMgJiYgdGhpcy5fX2FzeW5jR2VuZXJhdG9yKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgZ2VuZXJhdG9yKSB7XG4gICAgaWYgKCFTeW1ib2wuYXN5bmNJdGVyYXRvcikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN5bWJvbC5hc3luY0l0ZXJhdG9yIGlzIG5vdCBkZWZpbmVkLlwiKTtcbiAgICB2YXIgZyA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSwgaSwgcSA9IFtdO1xuICAgIHJldHVybiBpID0ge30sIHZlcmIoXCJuZXh0XCIpLCB2ZXJiKFwidGhyb3dcIiksIHZlcmIoXCJyZXR1cm5cIiwgYXdhaXRSZXR1cm4pLCBpW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXM7IH0sIGk7XG4gICAgZnVuY3Rpb24gYXdhaXRSZXR1cm4oZikgeyByZXR1cm4gZnVuY3Rpb24gKHYpIHsgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh2KS50aGVuKGYsIHJlamVjdCk7IH07IH1cbiAgICBmdW5jdGlvbiB2ZXJiKG4sIGYpIHsgaWYgKGdbbl0pIHsgaVtuXSA9IGZ1bmN0aW9uICh2KSB7IHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAoYSwgYikgeyBxLnB1c2goW24sIHYsIGEsIGJdKSA+IDEgfHwgcmVzdW1lKG4sIHYpOyB9KTsgfTsgaWYgKGYpIGlbbl0gPSBmKGlbbl0pOyB9IH1cbiAgICBmdW5jdGlvbiByZXN1bWUobiwgdikgeyB0cnkgeyBzdGVwKGdbbl0odikpOyB9IGNhdGNoIChlKSB7IHNldHRsZShxWzBdWzNdLCBlKTsgfSB9XG4gICAgZnVuY3Rpb24gc3RlcChyKSB7IHIudmFsdWUgaW5zdGFuY2VvZiBfX2F3YWl0ID8gUHJvbWlzZS5yZXNvbHZlKHIudmFsdWUudikudGhlbihmdWxmaWxsLCByZWplY3QpIDogc2V0dGxlKHFbMF1bMl0sIHIpOyB9XG4gICAgZnVuY3Rpb24gZnVsZmlsbCh2YWx1ZSkgeyByZXN1bWUoXCJuZXh0XCIsIHZhbHVlKTsgfVxuICAgIGZ1bmN0aW9uIHJlamVjdCh2YWx1ZSkgeyByZXN1bWUoXCJ0aHJvd1wiLCB2YWx1ZSk7IH1cbiAgICBmdW5jdGlvbiBzZXR0bGUoZiwgdikgeyBpZiAoZih2KSwgcS5zaGlmdCgpLCBxLmxlbmd0aCkgcmVzdW1lKHFbMF1bMF0sIHFbMF1bMV0pOyB9XG59O1xuaW1wb3J0IHsgTWV0aG9kSWRlbXBvdGVuY3kgfSBmcm9tIFwiQGJ1ZmJ1aWxkL3Byb3RvYnVmXCI7XG5pbXBvcnQgeyByZXF1ZXN0SGVhZGVyV2l0aENvbXByZXNzaW9uIH0gZnJvbSBcIi4vcmVxdWVzdC1oZWFkZXIuanNcIjtcbmltcG9ydCB7IGhlYWRlclVuYXJ5Q29udGVudExlbmd0aCwgaGVhZGVyVW5hcnlFbmNvZGluZyB9IGZyb20gXCIuL2hlYWRlcnMuanNcIjtcbmltcG9ydCB7IHZhbGlkYXRlUmVzcG9uc2VXaXRoQ29tcHJlc3Npb24gfSBmcm9tIFwiLi92YWxpZGF0ZS1yZXNwb25zZS5qc1wiO1xuaW1wb3J0IHsgdHJhaWxlckRlbXV4IH0gZnJvbSBcIi4vdHJhaWxlci1tdXguanNcIjtcbmltcG9ydCB7IGVycm9yRnJvbUpzb25CeXRlcyB9IGZyb20gXCIuL2Vycm9yLWpzb24uanNcIjtcbmltcG9ydCB7IGNyZWF0ZUVuZFN0cmVhbVNlcmlhbGl6YXRpb24sIGVuZFN0cmVhbUZsYWcgfSBmcm9tIFwiLi9lbmQtc3RyZWFtLmpzXCI7XG5pbXBvcnQgeyB0cmFuc2Zvcm1Db25uZWN0UG9zdFRvR2V0UmVxdWVzdCB9IGZyb20gXCIuL2dldC1yZXF1ZXN0LmpzXCI7XG5pbXBvcnQgeyBDb2RlIH0gZnJvbSBcIi4uL2NvZGUuanNcIjtcbmltcG9ydCB7IENvbm5lY3RFcnJvciB9IGZyb20gXCIuLi9jb25uZWN0LWVycm9yLmpzXCI7XG5pbXBvcnQgeyBhcHBlbmRIZWFkZXJzIH0gZnJvbSBcIi4uL2h0dHAtaGVhZGVycy5qc1wiO1xuaW1wb3J0IHsgY3JlYXRlQXN5bmNJdGVyYWJsZSwgcGlwZVRvLCBzaW5rQWxsQnl0ZXMsIHBpcGUsIHRyYW5zZm9ybVNlcmlhbGl6ZUVudmVsb3BlLCB0cmFuc2Zvcm1Db21wcmVzc0VudmVsb3BlLCB0cmFuc2Zvcm1Kb2luRW52ZWxvcGVzLCB0cmFuc2Zvcm1TcGxpdEVudmVsb3BlLCB0cmFuc2Zvcm1EZWNvbXByZXNzRW52ZWxvcGUsIHRyYW5zZm9ybVBhcnNlRW52ZWxvcGUsIH0gZnJvbSBcIi4uL3Byb3RvY29sL2FzeW5jLWl0ZXJhYmxlLmpzXCI7XG5pbXBvcnQgeyBjcmVhdGVNZXRob2RVcmwgfSBmcm9tIFwiLi4vcHJvdG9jb2wvY3JlYXRlLW1ldGhvZC11cmwuanNcIjtcbmltcG9ydCB7IHJ1blVuYXJ5Q2FsbCwgcnVuU3RyZWFtaW5nQ2FsbCB9IGZyb20gXCIuLi9wcm90b2NvbC9ydW4tY2FsbC5qc1wiO1xuaW1wb3J0IHsgY3JlYXRlTWV0aG9kU2VyaWFsaXphdGlvbkxvb2t1cCB9IGZyb20gXCIuLi9wcm90b2NvbC9zZXJpYWxpemF0aW9uLmpzXCI7XG5pbXBvcnQgeyBjcmVhdGVDb250ZXh0VmFsdWVzIH0gZnJvbSBcIi4uL2NvbnRleHQtdmFsdWVzLmpzXCI7XG4vKipcbiAqIENyZWF0ZSBhIFRyYW5zcG9ydCBmb3IgdGhlIENvbm5lY3QgcHJvdG9jb2wuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVUcmFuc3BvcnQob3B0KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgYXN5bmMgdW5hcnkoc2VydmljZSwgbWV0aG9kLCBzaWduYWwsIHRpbWVvdXRNcywgaGVhZGVyLCBtZXNzYWdlLCBjb250ZXh0VmFsdWVzKSB7XG4gICAgICAgICAgICBjb25zdCBzZXJpYWxpemF0aW9uID0gY3JlYXRlTWV0aG9kU2VyaWFsaXphdGlvbkxvb2t1cChtZXRob2QsIG9wdC5iaW5hcnlPcHRpb25zLCBvcHQuanNvbk9wdGlvbnMsIG9wdCk7XG4gICAgICAgICAgICB0aW1lb3V0TXMgPVxuICAgICAgICAgICAgICAgIHRpbWVvdXRNcyA9PT0gdW5kZWZpbmVkXG4gICAgICAgICAgICAgICAgICAgID8gb3B0LmRlZmF1bHRUaW1lb3V0TXNcbiAgICAgICAgICAgICAgICAgICAgOiB0aW1lb3V0TXMgPD0gMFxuICAgICAgICAgICAgICAgICAgICAgICAgPyB1bmRlZmluZWRcbiAgICAgICAgICAgICAgICAgICAgICAgIDogdGltZW91dE1zO1xuICAgICAgICAgICAgcmV0dXJuIGF3YWl0IHJ1blVuYXJ5Q2FsbCh7XG4gICAgICAgICAgICAgICAgaW50ZXJjZXB0b3JzOiBvcHQuaW50ZXJjZXB0b3JzLFxuICAgICAgICAgICAgICAgIHNpZ25hbCxcbiAgICAgICAgICAgICAgICB0aW1lb3V0TXMsXG4gICAgICAgICAgICAgICAgcmVxOiB7XG4gICAgICAgICAgICAgICAgICAgIHN0cmVhbTogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIHNlcnZpY2UsXG4gICAgICAgICAgICAgICAgICAgIG1ldGhvZCxcbiAgICAgICAgICAgICAgICAgICAgdXJsOiBjcmVhdGVNZXRob2RVcmwob3B0LmJhc2VVcmwsIHNlcnZpY2UsIG1ldGhvZCksXG4gICAgICAgICAgICAgICAgICAgIGluaXQ6IHt9LFxuICAgICAgICAgICAgICAgICAgICBoZWFkZXI6IHJlcXVlc3RIZWFkZXJXaXRoQ29tcHJlc3Npb24obWV0aG9kLmtpbmQsIG9wdC51c2VCaW5hcnlGb3JtYXQsIHRpbWVvdXRNcywgaGVhZGVyLCBvcHQuYWNjZXB0Q29tcHJlc3Npb24sIG9wdC5zZW5kQ29tcHJlc3Npb24sIHRydWUpLFxuICAgICAgICAgICAgICAgICAgICBjb250ZXh0VmFsdWVzOiBjb250ZXh0VmFsdWVzICE9PSBudWxsICYmIGNvbnRleHRWYWx1ZXMgIT09IHZvaWQgMCA/IGNvbnRleHRWYWx1ZXMgOiBjcmVhdGVDb250ZXh0VmFsdWVzKCksXG4gICAgICAgICAgICAgICAgICAgIG1lc3NhZ2UsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBuZXh0OiBhc3luYyAocmVxKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgICAgICAgICAgbGV0IHJlcXVlc3RCb2R5ID0gc2VyaWFsaXphdGlvblxuICAgICAgICAgICAgICAgICAgICAgICAgLmdldEkob3B0LnVzZUJpbmFyeUZvcm1hdClcbiAgICAgICAgICAgICAgICAgICAgICAgIC5zZXJpYWxpemUocmVxLm1lc3NhZ2UpO1xuICAgICAgICAgICAgICAgICAgICBpZiAob3B0LnNlbmRDb21wcmVzc2lvbiAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWVzdEJvZHkuYnl0ZUxlbmd0aCA+IG9wdC5jb21wcmVzc01pbkJ5dGVzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXF1ZXN0Qm9keSA9IGF3YWl0IG9wdC5zZW5kQ29tcHJlc3Npb24uY29tcHJlc3MocmVxdWVzdEJvZHkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVxLmhlYWRlci5zZXQoaGVhZGVyVW5hcnlFbmNvZGluZywgb3B0LnNlbmRDb21wcmVzc2lvbi5uYW1lKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcS5oZWFkZXIuZGVsZXRlKGhlYWRlclVuYXJ5RW5jb2RpbmcpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHVzZUdldCA9IG9wdC51c2VIdHRwR2V0ID09PSB0cnVlICYmXG4gICAgICAgICAgICAgICAgICAgICAgICBtZXRob2QuaWRlbXBvdGVuY3kgPT09IE1ldGhvZElkZW1wb3RlbmN5Lk5vU2lkZUVmZmVjdHM7XG4gICAgICAgICAgICAgICAgICAgIGxldCBib2R5O1xuICAgICAgICAgICAgICAgICAgICBpZiAodXNlR2V0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXEgPSB0cmFuc2Zvcm1Db25uZWN0UG9zdFRvR2V0UmVxdWVzdChyZXEsIHJlcXVlc3RCb2R5LCBvcHQudXNlQmluYXJ5Rm9ybWF0KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvZHkgPSBjcmVhdGVBc3luY0l0ZXJhYmxlKFtyZXF1ZXN0Qm9keV0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHVuaXZlcnNhbFJlc3BvbnNlID0gYXdhaXQgb3B0Lmh0dHBDbGllbnQoe1xuICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiByZXEudXJsLFxuICAgICAgICAgICAgICAgICAgICAgICAgbWV0aG9kOiAoX2EgPSByZXEuaW5pdC5tZXRob2QpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IFwiUE9TVFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyOiByZXEuaGVhZGVyLFxuICAgICAgICAgICAgICAgICAgICAgICAgc2lnbmFsOiByZXEuc2lnbmFsLFxuICAgICAgICAgICAgICAgICAgICAgICAgYm9keSxcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHsgY29tcHJlc3Npb24sIGlzVW5hcnlFcnJvciwgdW5hcnlFcnJvciB9ID0gdmFsaWRhdGVSZXNwb25zZVdpdGhDb21wcmVzc2lvbihtZXRob2Qua2luZCwgb3B0LmFjY2VwdENvbXByZXNzaW9uLCBvcHQudXNlQmluYXJ5Rm9ybWF0LCB1bml2ZXJzYWxSZXNwb25zZS5zdGF0dXMsIHVuaXZlcnNhbFJlc3BvbnNlLmhlYWRlcik7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IFtoZWFkZXIsIHRyYWlsZXJdID0gdHJhaWxlckRlbXV4KHVuaXZlcnNhbFJlc3BvbnNlLmhlYWRlcik7XG4gICAgICAgICAgICAgICAgICAgIGxldCByZXNwb25zZUJvZHkgPSBhd2FpdCBwaXBlVG8odW5pdmVyc2FsUmVzcG9uc2UuYm9keSwgc2lua0FsbEJ5dGVzKG9wdC5yZWFkTWF4Qnl0ZXMsIHVuaXZlcnNhbFJlc3BvbnNlLmhlYWRlci5nZXQoaGVhZGVyVW5hcnlDb250ZW50TGVuZ3RoKSksIHsgcHJvcGFnYXRlRG93blN0cmVhbUVycm9yOiBmYWxzZSB9KTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNvbXByZXNzaW9uKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZUJvZHkgPSBhd2FpdCBjb21wcmVzc2lvbi5kZWNvbXByZXNzKHJlc3BvbnNlQm9keSwgb3B0LnJlYWRNYXhCeXRlcyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKGlzVW5hcnlFcnJvcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgZXJyb3JGcm9tSnNvbkJ5dGVzKHJlc3BvbnNlQm9keSwgYXBwZW5kSGVhZGVycyhoZWFkZXIsIHRyYWlsZXIpLCB1bmFyeUVycm9yKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgc3RyZWFtOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlcnZpY2UsXG4gICAgICAgICAgICAgICAgICAgICAgICBtZXRob2QsXG4gICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXIsXG4gICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiBzZXJpYWxpemF0aW9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLmdldE8ob3B0LnVzZUJpbmFyeUZvcm1hdClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAucGFyc2UocmVzcG9uc2VCb2R5KSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyYWlsZXIsXG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuICAgICAgICBhc3luYyBzdHJlYW0oc2VydmljZSwgbWV0aG9kLCBzaWduYWwsIHRpbWVvdXRNcywgaGVhZGVyLCBpbnB1dCwgY29udGV4dFZhbHVlcykge1xuICAgICAgICAgICAgY29uc3Qgc2VyaWFsaXphdGlvbiA9IGNyZWF0ZU1ldGhvZFNlcmlhbGl6YXRpb25Mb29rdXAobWV0aG9kLCBvcHQuYmluYXJ5T3B0aW9ucywgb3B0Lmpzb25PcHRpb25zLCBvcHQpO1xuICAgICAgICAgICAgY29uc3QgZW5kU3RyZWFtU2VyaWFsaXphdGlvbiA9IGNyZWF0ZUVuZFN0cmVhbVNlcmlhbGl6YXRpb24ob3B0Lmpzb25PcHRpb25zKTtcbiAgICAgICAgICAgIHRpbWVvdXRNcyA9XG4gICAgICAgICAgICAgICAgdGltZW91dE1zID09PSB1bmRlZmluZWRcbiAgICAgICAgICAgICAgICAgICAgPyBvcHQuZGVmYXVsdFRpbWVvdXRNc1xuICAgICAgICAgICAgICAgICAgICA6IHRpbWVvdXRNcyA8PSAwXG4gICAgICAgICAgICAgICAgICAgICAgICA/IHVuZGVmaW5lZFxuICAgICAgICAgICAgICAgICAgICAgICAgOiB0aW1lb3V0TXM7XG4gICAgICAgICAgICByZXR1cm4gcnVuU3RyZWFtaW5nQ2FsbCh7XG4gICAgICAgICAgICAgICAgaW50ZXJjZXB0b3JzOiBvcHQuaW50ZXJjZXB0b3JzLFxuICAgICAgICAgICAgICAgIHNpZ25hbCxcbiAgICAgICAgICAgICAgICB0aW1lb3V0TXMsXG4gICAgICAgICAgICAgICAgcmVxOiB7XG4gICAgICAgICAgICAgICAgICAgIHN0cmVhbTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgc2VydmljZSxcbiAgICAgICAgICAgICAgICAgICAgbWV0aG9kLFxuICAgICAgICAgICAgICAgICAgICB1cmw6IGNyZWF0ZU1ldGhvZFVybChvcHQuYmFzZVVybCwgc2VydmljZSwgbWV0aG9kKSxcbiAgICAgICAgICAgICAgICAgICAgaW5pdDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlZGlyZWN0OiBcImVycm9yXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBtb2RlOiBcImNvcnNcIixcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgaGVhZGVyOiByZXF1ZXN0SGVhZGVyV2l0aENvbXByZXNzaW9uKG1ldGhvZC5raW5kLCBvcHQudXNlQmluYXJ5Rm9ybWF0LCB0aW1lb3V0TXMsIGhlYWRlciwgb3B0LmFjY2VwdENvbXByZXNzaW9uLCBvcHQuc2VuZENvbXByZXNzaW9uLCB0cnVlKSxcbiAgICAgICAgICAgICAgICAgICAgY29udGV4dFZhbHVlczogY29udGV4dFZhbHVlcyAhPT0gbnVsbCAmJiBjb250ZXh0VmFsdWVzICE9PSB2b2lkIDAgPyBjb250ZXh0VmFsdWVzIDogY3JlYXRlQ29udGV4dFZhbHVlcygpLFxuICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiBpbnB1dCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIG5leHQ6IGFzeW5jIChyZXEpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdVJlcyA9IGF3YWl0IG9wdC5odHRwQ2xpZW50KHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHVybDogcmVxLnVybCxcbiAgICAgICAgICAgICAgICAgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXI6IHJlcS5oZWFkZXIsXG4gICAgICAgICAgICAgICAgICAgICAgICBzaWduYWw6IHJlcS5zaWduYWwsXG4gICAgICAgICAgICAgICAgICAgICAgICBib2R5OiBwaXBlKHJlcS5tZXNzYWdlLCB0cmFuc2Zvcm1TZXJpYWxpemVFbnZlbG9wZShzZXJpYWxpemF0aW9uLmdldEkob3B0LnVzZUJpbmFyeUZvcm1hdCkpLCB0cmFuc2Zvcm1Db21wcmVzc0VudmVsb3BlKG9wdC5zZW5kQ29tcHJlc3Npb24sIG9wdC5jb21wcmVzc01pbkJ5dGVzKSwgdHJhbnNmb3JtSm9pbkVudmVsb3BlcygpLCB7IHByb3BhZ2F0ZURvd25TdHJlYW1FcnJvcjogdHJ1ZSB9KSxcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHsgY29tcHJlc3Npb24gfSA9IHZhbGlkYXRlUmVzcG9uc2VXaXRoQ29tcHJlc3Npb24obWV0aG9kLmtpbmQsIG9wdC5hY2NlcHRDb21wcmVzc2lvbiwgb3B0LnVzZUJpbmFyeUZvcm1hdCwgdVJlcy5zdGF0dXMsIHVSZXMuaGVhZGVyKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVzID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCByZXEpLCB7IGhlYWRlcjogdVJlcy5oZWFkZXIsIHRyYWlsZXI6IG5ldyBIZWFkZXJzKCksIG1lc3NhZ2U6IHBpcGUodVJlcy5ib2R5LCB0cmFuc2Zvcm1TcGxpdEVudmVsb3BlKG9wdC5yZWFkTWF4Qnl0ZXMpLCB0cmFuc2Zvcm1EZWNvbXByZXNzRW52ZWxvcGUoY29tcHJlc3Npb24gIT09IG51bGwgJiYgY29tcHJlc3Npb24gIT09IHZvaWQgMCA/IGNvbXByZXNzaW9uIDogbnVsbCwgb3B0LnJlYWRNYXhCeXRlcyksIHRyYW5zZm9ybVBhcnNlRW52ZWxvcGUoc2VyaWFsaXphdGlvbi5nZXRPKG9wdC51c2VCaW5hcnlGb3JtYXQpLCBlbmRTdHJlYW1GbGFnLCBlbmRTdHJlYW1TZXJpYWxpemF0aW9uKSwgZnVuY3Rpb24gKGl0ZXJhYmxlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9fYXN5bmNHZW5lcmF0b3IodGhpcywgYXJndW1lbnRzLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgX2EsIGVfMSwgX2IsIF9jO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgZW5kU3RyZWFtUmVjZWl2ZWQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIF9kID0gdHJ1ZSwgaXRlcmFibGVfMSA9IF9fYXN5bmNWYWx1ZXMoaXRlcmFibGUpLCBpdGVyYWJsZV8xXzE7IGl0ZXJhYmxlXzFfMSA9IHlpZWxkIF9fYXdhaXQoaXRlcmFibGVfMS5uZXh0KCkpLCBfYSA9IGl0ZXJhYmxlXzFfMS5kb25lLCAhX2E7IF9kID0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jID0gaXRlcmFibGVfMV8xLnZhbHVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9kID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgY2h1bmsgPSBfYztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2h1bmsuZW5kKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlbmRTdHJlYW1SZWNlaXZlZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IENvbm5lY3RFcnJvcihcInByb3RvY29sIGVycm9yOiByZWNlaXZlZCBleHRyYSBFbmRTdHJlYW1SZXNwb25zZVwiLCBDb2RlLkludmFsaWRBcmd1bWVudCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5kU3RyZWFtUmVjZWl2ZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2h1bmsudmFsdWUuZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGVycm9yID0gY2h1bmsudmFsdWUuZXJyb3I7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1UmVzLmhlYWRlci5mb3JFYWNoKCh2YWx1ZSwga2V5KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3IubWV0YWRhdGEuYXBwZW5kKGtleSwgdmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaHVuay52YWx1ZS5tZXRhZGF0YS5mb3JFYWNoKCh2YWx1ZSwga2V5KSA9PiByZXMudHJhaWxlci5zZXQoa2V5LCB2YWx1ZSkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGVuZFN0cmVhbVJlY2VpdmVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBDb25uZWN0RXJyb3IoXCJwcm90b2NvbCBlcnJvcjogcmVjZWl2ZWQgZXh0cmEgbWVzc2FnZSBhZnRlciBFbmRTdHJlYW1SZXNwb25zZVwiLCBDb2RlLkludmFsaWRBcmd1bWVudCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHlpZWxkIHlpZWxkIF9fYXdhaXQoY2h1bmsudmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhdGNoIChlXzFfMSkgeyBlXzEgPSB7IGVycm9yOiBlXzFfMSB9OyB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbmFsbHkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIV9kICYmICFfYSAmJiAoX2IgPSBpdGVyYWJsZV8xLnJldHVybikpIHlpZWxkIF9fYXdhaXQoX2IuY2FsbChpdGVyYWJsZV8xKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaW5hbGx5IHsgaWYgKGVfMSkgdGhyb3cgZV8xLmVycm9yOyB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFlbmRTdHJlYW1SZWNlaXZlZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IENvbm5lY3RFcnJvcihcInByb3RvY29sIGVycm9yOiBtaXNzaW5nIEVuZFN0cmVhbVJlc3BvbnNlXCIsIENvZGUuSW52YWxpZEFyZ3VtZW50KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSwgeyBwcm9wYWdhdGVEb3duU3RyZWFtRXJyb3I6IHRydWUgfSkgfSk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXM7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuICAgIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/transport.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/validate-response.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/validate-response.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   validateResponse: () => (/* binding */ validateResponse),\n/* harmony export */   validateResponseWithCompression: () => (/* binding */ validateResponseWithCompression)\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @bufbuild/protobuf */ \"(ssr)/./node_modules/@bufbuild/protobuf/dist/esm/service-type.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../code.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _http_status_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./http-status.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/http-status.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../connect-error.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _content_type_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./content-type.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/content-type.js\");\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./headers.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/headers.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n/**\n * Validates response status and header for the Connect protocol.\n * Throws a ConnectError if the header indicates an error, or if\n * the content type is unexpected, with the following exception:\n * For unary RPCs with an HTTP error status, this returns an error\n * derived from the HTTP status instead of throwing it, giving an\n * implementation a chance to parse a Connect error from the wire.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction validateResponse(methodKind, useBinaryFormat, status, headers) {\n    const mimeType = headers.get(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerContentType);\n    const parsedType = (0,_content_type_js__WEBPACK_IMPORTED_MODULE_1__.parseContentType)(mimeType);\n    if (status !== 200) {\n        const errorFromStatus = new _connect_error_js__WEBPACK_IMPORTED_MODULE_2__.ConnectError(`HTTP ${status}`, (0,_http_status_js__WEBPACK_IMPORTED_MODULE_3__.codeFromHttpStatus)(status), headers);\n        // If parsedType is defined and it is not binary, then this is a unary JSON response\n        if (methodKind == _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_4__.MethodKind.Unary && parsedType && !parsedType.binary) {\n            return { isUnaryError: true, unaryError: errorFromStatus };\n        }\n        throw errorFromStatus;\n    }\n    const allowedContentType = {\n        binary: useBinaryFormat,\n        stream: methodKind !== _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_4__.MethodKind.Unary,\n    };\n    if ((parsedType === null || parsedType === void 0 ? void 0 : parsedType.binary) !== allowedContentType.binary ||\n        parsedType.stream !== allowedContentType.stream) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_2__.ConnectError(`unsupported content type ${mimeType}`, parsedType === undefined ? _code_js__WEBPACK_IMPORTED_MODULE_5__.Code.Unknown : _code_js__WEBPACK_IMPORTED_MODULE_5__.Code.Internal, headers);\n    }\n    return { isUnaryError: false };\n}\n/**\n * Validates response status and header for the Connect protocol.\n * This function is identical to validateResponse(), but also verifies\n * that a given encoding header is acceptable.\n *\n * @private\n */\nfunction validateResponseWithCompression(methodKind, acceptCompression, useBinaryFormat, status, headers) {\n    let compression;\n    const encoding = headers.get(methodKind == _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_4__.MethodKind.Unary ? _headers_js__WEBPACK_IMPORTED_MODULE_0__.headerUnaryEncoding : _headers_js__WEBPACK_IMPORTED_MODULE_0__.headerStreamEncoding);\n    if (encoding != null && encoding.toLowerCase() !== \"identity\") {\n        compression = acceptCompression.find((c) => c.name === encoding);\n        if (!compression) {\n            throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_2__.ConnectError(`unsupported response encoding \"${encoding}\"`, _code_js__WEBPACK_IMPORTED_MODULE_5__.Code.Internal, headers);\n        }\n    }\n    return Object.assign({ compression }, validateResponse(methodKind, useBinaryFormat, status, headers));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1jb25uZWN0L3ZhbGlkYXRlLXJlc3BvbnNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDZ0Q7QUFDZDtBQUNvQjtBQUNIO0FBQ0U7QUFDd0M7QUFDN0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLGlDQUFpQywwREFBaUI7QUFDbEQsdUJBQXVCLGtFQUFnQjtBQUN2QztBQUNBLG9DQUFvQywyREFBWSxTQUFTLE9BQU8sR0FBRyxtRUFBa0I7QUFDckY7QUFDQSwwQkFBMEIsMERBQVU7QUFDcEMscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsMERBQVU7QUFDekM7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLDJEQUFZLDZCQUE2QixTQUFTLDhCQUE4QiwwQ0FBSSxXQUFXLDBDQUFJO0FBQ3JIO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsK0NBQStDLDBEQUFVLFNBQVMsNERBQW1CLEdBQUcsNkRBQW9CO0FBQzVHO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiwyREFBWSxtQ0FBbUMsU0FBUyxJQUFJLDBDQUFJO0FBQ3RGO0FBQ0E7QUFDQSwyQkFBMkIsYUFBYTtBQUN4QyIsInNvdXJjZXMiOlsid2VicGFjazovL0BlLWNvL2V0aG9zLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0Bjb25uZWN0cnBjL2Nvbm5lY3QvZGlzdC9lc20vcHJvdG9jb2wtY29ubmVjdC92YWxpZGF0ZS1yZXNwb25zZS5qcz8wM2FiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgVGhlIENvbm5lY3QgQXV0aG9yc1xuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5pbXBvcnQgeyBNZXRob2RLaW5kIH0gZnJvbSBcIkBidWZidWlsZC9wcm90b2J1ZlwiO1xuaW1wb3J0IHsgQ29kZSB9IGZyb20gXCIuLi9jb2RlLmpzXCI7XG5pbXBvcnQgeyBjb2RlRnJvbUh0dHBTdGF0dXMgfSBmcm9tIFwiLi9odHRwLXN0YXR1cy5qc1wiO1xuaW1wb3J0IHsgQ29ubmVjdEVycm9yIH0gZnJvbSBcIi4uL2Nvbm5lY3QtZXJyb3IuanNcIjtcbmltcG9ydCB7IHBhcnNlQ29udGVudFR5cGUgfSBmcm9tIFwiLi9jb250ZW50LXR5cGUuanNcIjtcbmltcG9ydCB7IGhlYWRlckNvbnRlbnRUeXBlLCBoZWFkZXJTdHJlYW1FbmNvZGluZywgaGVhZGVyVW5hcnlFbmNvZGluZywgfSBmcm9tIFwiLi9oZWFkZXJzLmpzXCI7XG4vKipcbiAqIFZhbGlkYXRlcyByZXNwb25zZSBzdGF0dXMgYW5kIGhlYWRlciBmb3IgdGhlIENvbm5lY3QgcHJvdG9jb2wuXG4gKiBUaHJvd3MgYSBDb25uZWN0RXJyb3IgaWYgdGhlIGhlYWRlciBpbmRpY2F0ZXMgYW4gZXJyb3IsIG9yIGlmXG4gKiB0aGUgY29udGVudCB0eXBlIGlzIHVuZXhwZWN0ZWQsIHdpdGggdGhlIGZvbGxvd2luZyBleGNlcHRpb246XG4gKiBGb3IgdW5hcnkgUlBDcyB3aXRoIGFuIEhUVFAgZXJyb3Igc3RhdHVzLCB0aGlzIHJldHVybnMgYW4gZXJyb3JcbiAqIGRlcml2ZWQgZnJvbSB0aGUgSFRUUCBzdGF0dXMgaW5zdGVhZCBvZiB0aHJvd2luZyBpdCwgZ2l2aW5nIGFuXG4gKiBpbXBsZW1lbnRhdGlvbiBhIGNoYW5jZSB0byBwYXJzZSBhIENvbm5lY3QgZXJyb3IgZnJvbSB0aGUgd2lyZS5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlUmVzcG9uc2UobWV0aG9kS2luZCwgdXNlQmluYXJ5Rm9ybWF0LCBzdGF0dXMsIGhlYWRlcnMpIHtcbiAgICBjb25zdCBtaW1lVHlwZSA9IGhlYWRlcnMuZ2V0KGhlYWRlckNvbnRlbnRUeXBlKTtcbiAgICBjb25zdCBwYXJzZWRUeXBlID0gcGFyc2VDb250ZW50VHlwZShtaW1lVHlwZSk7XG4gICAgaWYgKHN0YXR1cyAhPT0gMjAwKSB7XG4gICAgICAgIGNvbnN0IGVycm9yRnJvbVN0YXR1cyA9IG5ldyBDb25uZWN0RXJyb3IoYEhUVFAgJHtzdGF0dXN9YCwgY29kZUZyb21IdHRwU3RhdHVzKHN0YXR1cyksIGhlYWRlcnMpO1xuICAgICAgICAvLyBJZiBwYXJzZWRUeXBlIGlzIGRlZmluZWQgYW5kIGl0IGlzIG5vdCBiaW5hcnksIHRoZW4gdGhpcyBpcyBhIHVuYXJ5IEpTT04gcmVzcG9uc2VcbiAgICAgICAgaWYgKG1ldGhvZEtpbmQgPT0gTWV0aG9kS2luZC5VbmFyeSAmJiBwYXJzZWRUeXBlICYmICFwYXJzZWRUeXBlLmJpbmFyeSkge1xuICAgICAgICAgICAgcmV0dXJuIHsgaXNVbmFyeUVycm9yOiB0cnVlLCB1bmFyeUVycm9yOiBlcnJvckZyb21TdGF0dXMgfTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBlcnJvckZyb21TdGF0dXM7XG4gICAgfVxuICAgIGNvbnN0IGFsbG93ZWRDb250ZW50VHlwZSA9IHtcbiAgICAgICAgYmluYXJ5OiB1c2VCaW5hcnlGb3JtYXQsXG4gICAgICAgIHN0cmVhbTogbWV0aG9kS2luZCAhPT0gTWV0aG9kS2luZC5VbmFyeSxcbiAgICB9O1xuICAgIGlmICgocGFyc2VkVHlwZSA9PT0gbnVsbCB8fCBwYXJzZWRUeXBlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBwYXJzZWRUeXBlLmJpbmFyeSkgIT09IGFsbG93ZWRDb250ZW50VHlwZS5iaW5hcnkgfHxcbiAgICAgICAgcGFyc2VkVHlwZS5zdHJlYW0gIT09IGFsbG93ZWRDb250ZW50VHlwZS5zdHJlYW0pIHtcbiAgICAgICAgdGhyb3cgbmV3IENvbm5lY3RFcnJvcihgdW5zdXBwb3J0ZWQgY29udGVudCB0eXBlICR7bWltZVR5cGV9YCwgcGFyc2VkVHlwZSA9PT0gdW5kZWZpbmVkID8gQ29kZS5Vbmtub3duIDogQ29kZS5JbnRlcm5hbCwgaGVhZGVycyk7XG4gICAgfVxuICAgIHJldHVybiB7IGlzVW5hcnlFcnJvcjogZmFsc2UgfTtcbn1cbi8qKlxuICogVmFsaWRhdGVzIHJlc3BvbnNlIHN0YXR1cyBhbmQgaGVhZGVyIGZvciB0aGUgQ29ubmVjdCBwcm90b2NvbC5cbiAqIFRoaXMgZnVuY3Rpb24gaXMgaWRlbnRpY2FsIHRvIHZhbGlkYXRlUmVzcG9uc2UoKSwgYnV0IGFsc28gdmVyaWZpZXNcbiAqIHRoYXQgYSBnaXZlbiBlbmNvZGluZyBoZWFkZXIgaXMgYWNjZXB0YWJsZS5cbiAqXG4gKiBAcHJpdmF0ZVxuICovXG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVSZXNwb25zZVdpdGhDb21wcmVzc2lvbihtZXRob2RLaW5kLCBhY2NlcHRDb21wcmVzc2lvbiwgdXNlQmluYXJ5Rm9ybWF0LCBzdGF0dXMsIGhlYWRlcnMpIHtcbiAgICBsZXQgY29tcHJlc3Npb247XG4gICAgY29uc3QgZW5jb2RpbmcgPSBoZWFkZXJzLmdldChtZXRob2RLaW5kID09IE1ldGhvZEtpbmQuVW5hcnkgPyBoZWFkZXJVbmFyeUVuY29kaW5nIDogaGVhZGVyU3RyZWFtRW5jb2RpbmcpO1xuICAgIGlmIChlbmNvZGluZyAhPSBudWxsICYmIGVuY29kaW5nLnRvTG93ZXJDYXNlKCkgIT09IFwiaWRlbnRpdHlcIikge1xuICAgICAgICBjb21wcmVzc2lvbiA9IGFjY2VwdENvbXByZXNzaW9uLmZpbmQoKGMpID0+IGMubmFtZSA9PT0gZW5jb2RpbmcpO1xuICAgICAgICBpZiAoIWNvbXByZXNzaW9uKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgQ29ubmVjdEVycm9yKGB1bnN1cHBvcnRlZCByZXNwb25zZSBlbmNvZGluZyBcIiR7ZW5jb2Rpbmd9XCJgLCBDb2RlLkludGVybmFsLCBoZWFkZXJzKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7IGNvbXByZXNzaW9uIH0sIHZhbGlkYXRlUmVzcG9uc2UobWV0aG9kS2luZCwgdXNlQmluYXJ5Rm9ybWF0LCBzdGF0dXMsIGhlYWRlcnMpKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/validate-response.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/version.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/version.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   protocolVersion: () => (/* binding */ protocolVersion),\n/* harmony export */   requireProtocolVersionHeader: () => (/* binding */ requireProtocolVersionHeader),\n/* harmony export */   requireProtocolVersionParam: () => (/* binding */ requireProtocolVersionParam)\n/* harmony export */ });\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./headers.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/headers.js\");\n/* harmony import */ var _query_params_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./query-params.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/query-params.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../connect-error.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../code.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n/**\n * The only know value for the header Connect-Protocol-Version.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst protocolVersion = \"1\";\n/**\n * Requires the Connect-Protocol-Version header to be present with the expected\n * value. Raises a ConnectError with Code.InvalidArgument otherwise.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction requireProtocolVersionHeader(requestHeader) {\n    const v = requestHeader.get(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerProtocolVersion);\n    if (v === null) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_1__.ConnectError(`missing required header: set ${_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerProtocolVersion} to \"${protocolVersion}\"`, _code_js__WEBPACK_IMPORTED_MODULE_2__.Code.InvalidArgument);\n    }\n    else if (v !== protocolVersion) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_1__.ConnectError(`${_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerProtocolVersion} must be \"${protocolVersion}\": got \"${v}\"`, _code_js__WEBPACK_IMPORTED_MODULE_2__.Code.InvalidArgument);\n    }\n}\n/**\n * Requires the connect query parameter to be present with the expected value.\n * Raises a ConnectError with Code.InvalidArgument otherwise.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction requireProtocolVersionParam(queryParams) {\n    const v = queryParams.get(_query_params_js__WEBPACK_IMPORTED_MODULE_3__.paramConnectVersion);\n    if (v === null) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_1__.ConnectError(`missing required parameter: set ${_query_params_js__WEBPACK_IMPORTED_MODULE_3__.paramConnectVersion} to \"v${protocolVersion}\"`, _code_js__WEBPACK_IMPORTED_MODULE_2__.Code.InvalidArgument);\n    }\n    else if (v !== `v${protocolVersion}`) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_1__.ConnectError(`${_query_params_js__WEBPACK_IMPORTED_MODULE_3__.paramConnectVersion} must be \"v${protocolVersion}\": got \"${v}\"`, _code_js__WEBPACK_IMPORTED_MODULE_2__.Code.InvalidArgument);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1jb25uZWN0L3ZlcnNpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ3FEO0FBQ0c7QUFDTDtBQUNqQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLGdDQUFnQyw4REFBcUI7QUFDckQ7QUFDQSxrQkFBa0IsMkRBQVksaUNBQWlDLDhEQUFxQixFQUFFLE1BQU0sZ0JBQWdCLElBQUksMENBQUk7QUFDcEg7QUFDQTtBQUNBLGtCQUFrQiwyREFBWSxJQUFJLDhEQUFxQixFQUFFLFdBQVcsZ0JBQWdCLFVBQVUsRUFBRSxJQUFJLDBDQUFJO0FBQ3hHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLDhCQUE4QixpRUFBbUI7QUFDakQ7QUFDQSxrQkFBa0IsMkRBQVksb0NBQW9DLGlFQUFtQixFQUFFLE9BQU8sZ0JBQWdCLElBQUksMENBQUk7QUFDdEg7QUFDQSx1QkFBdUIsZ0JBQWdCO0FBQ3ZDLGtCQUFrQiwyREFBWSxJQUFJLGlFQUFtQixFQUFFLFlBQVksZ0JBQWdCLFVBQVUsRUFBRSxJQUFJLDBDQUFJO0FBQ3ZHO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZS1jby9ldGhvcy1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AY29ubmVjdHJwYy9jb25uZWN0L2Rpc3QvZXNtL3Byb3RvY29sLWNvbm5lY3QvdmVyc2lvbi5qcz9mZGQzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgVGhlIENvbm5lY3QgQXV0aG9yc1xuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5pbXBvcnQgeyBoZWFkZXJQcm90b2NvbFZlcnNpb24gfSBmcm9tIFwiLi9oZWFkZXJzLmpzXCI7XG5pbXBvcnQgeyBwYXJhbUNvbm5lY3RWZXJzaW9uIH0gZnJvbSBcIi4vcXVlcnktcGFyYW1zLmpzXCI7XG5pbXBvcnQgeyBDb25uZWN0RXJyb3IgfSBmcm9tIFwiLi4vY29ubmVjdC1lcnJvci5qc1wiO1xuaW1wb3J0IHsgQ29kZSB9IGZyb20gXCIuLi9jb2RlLmpzXCI7XG4vKipcbiAqIFRoZSBvbmx5IGtub3cgdmFsdWUgZm9yIHRoZSBoZWFkZXIgQ29ubmVjdC1Qcm90b2NvbC1WZXJzaW9uLlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgY29uc3QgcHJvdG9jb2xWZXJzaW9uID0gXCIxXCI7XG4vKipcbiAqIFJlcXVpcmVzIHRoZSBDb25uZWN0LVByb3RvY29sLVZlcnNpb24gaGVhZGVyIHRvIGJlIHByZXNlbnQgd2l0aCB0aGUgZXhwZWN0ZWRcbiAqIHZhbHVlLiBSYWlzZXMgYSBDb25uZWN0RXJyb3Igd2l0aCBDb2RlLkludmFsaWRBcmd1bWVudCBvdGhlcndpc2UuXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZXF1aXJlUHJvdG9jb2xWZXJzaW9uSGVhZGVyKHJlcXVlc3RIZWFkZXIpIHtcbiAgICBjb25zdCB2ID0gcmVxdWVzdEhlYWRlci5nZXQoaGVhZGVyUHJvdG9jb2xWZXJzaW9uKTtcbiAgICBpZiAodiA9PT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgQ29ubmVjdEVycm9yKGBtaXNzaW5nIHJlcXVpcmVkIGhlYWRlcjogc2V0ICR7aGVhZGVyUHJvdG9jb2xWZXJzaW9ufSB0byBcIiR7cHJvdG9jb2xWZXJzaW9ufVwiYCwgQ29kZS5JbnZhbGlkQXJndW1lbnQpO1xuICAgIH1cbiAgICBlbHNlIGlmICh2ICE9PSBwcm90b2NvbFZlcnNpb24pIHtcbiAgICAgICAgdGhyb3cgbmV3IENvbm5lY3RFcnJvcihgJHtoZWFkZXJQcm90b2NvbFZlcnNpb259IG11c3QgYmUgXCIke3Byb3RvY29sVmVyc2lvbn1cIjogZ290IFwiJHt2fVwiYCwgQ29kZS5JbnZhbGlkQXJndW1lbnQpO1xuICAgIH1cbn1cbi8qKlxuICogUmVxdWlyZXMgdGhlIGNvbm5lY3QgcXVlcnkgcGFyYW1ldGVyIHRvIGJlIHByZXNlbnQgd2l0aCB0aGUgZXhwZWN0ZWQgdmFsdWUuXG4gKiBSYWlzZXMgYSBDb25uZWN0RXJyb3Igd2l0aCBDb2RlLkludmFsaWRBcmd1bWVudCBvdGhlcndpc2UuXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZXF1aXJlUHJvdG9jb2xWZXJzaW9uUGFyYW0ocXVlcnlQYXJhbXMpIHtcbiAgICBjb25zdCB2ID0gcXVlcnlQYXJhbXMuZ2V0KHBhcmFtQ29ubmVjdFZlcnNpb24pO1xuICAgIGlmICh2ID09PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBDb25uZWN0RXJyb3IoYG1pc3NpbmcgcmVxdWlyZWQgcGFyYW1ldGVyOiBzZXQgJHtwYXJhbUNvbm5lY3RWZXJzaW9ufSB0byBcInYke3Byb3RvY29sVmVyc2lvbn1cImAsIENvZGUuSW52YWxpZEFyZ3VtZW50KTtcbiAgICB9XG4gICAgZWxzZSBpZiAodiAhPT0gYHYke3Byb3RvY29sVmVyc2lvbn1gKSB7XG4gICAgICAgIHRocm93IG5ldyBDb25uZWN0RXJyb3IoYCR7cGFyYW1Db25uZWN0VmVyc2lvbn0gbXVzdCBiZSBcInYke3Byb3RvY29sVmVyc2lvbn1cIjogZ290IFwiJHt2fVwiYCwgQ29kZS5JbnZhbGlkQXJndW1lbnQpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/version.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/content-type.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/content-type.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   contentTypeJson: () => (/* binding */ contentTypeJson),\n/* harmony export */   contentTypeProto: () => (/* binding */ contentTypeProto),\n/* harmony export */   contentTypeRegExp: () => (/* binding */ contentTypeRegExp),\n/* harmony export */   parseContentType: () => (/* binding */ parseContentType)\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Regular Expression that matches any valid gRPC-web Content-Type header value.\n * Note that this includes application/grpc-web-text with the additional base64\n * encoding.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst contentTypeRegExp = /^application\\/grpc-web(-text)?(?:\\+(?:(json)(?:; ?charset=utf-?8)?|proto))?$/i;\nconst contentTypeProto = \"application/grpc-web+proto\";\nconst contentTypeJson = \"application/grpc-web+json\";\n/**\n * Parse a gRPC-web Content-Type header value.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction parseContentType(contentType) {\n    const match = contentType === null || contentType === void 0 ? void 0 : contentType.match(contentTypeRegExp);\n    if (!match) {\n        return undefined;\n    }\n    const text = !!match[1];\n    const binary = !match[2];\n    return { text, binary };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1ncnBjLXdlYi9jb250ZW50LXR5cGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyw0RUFBNEU7QUFDNUU7QUFDQTtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYiIsInNvdXJjZXMiOlsid2VicGFjazovL0BlLWNvL2V0aG9zLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0Bjb25uZWN0cnBjL2Nvbm5lY3QvZGlzdC9lc20vcHJvdG9jb2wtZ3JwYy13ZWIvY29udGVudC10eXBlLmpzPzUxOTciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbi8qKlxuICogUmVndWxhciBFeHByZXNzaW9uIHRoYXQgbWF0Y2hlcyBhbnkgdmFsaWQgZ1JQQy13ZWIgQ29udGVudC1UeXBlIGhlYWRlciB2YWx1ZS5cbiAqIE5vdGUgdGhhdCB0aGlzIGluY2x1ZGVzIGFwcGxpY2F0aW9uL2dycGMtd2ViLXRleHQgd2l0aCB0aGUgYWRkaXRpb25hbCBiYXNlNjRcbiAqIGVuY29kaW5nLlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgY29uc3QgY29udGVudFR5cGVSZWdFeHAgPSAvXmFwcGxpY2F0aW9uXFwvZ3JwYy13ZWIoLXRleHQpPyg/OlxcKyg/Oihqc29uKSg/OjsgP2NoYXJzZXQ9dXRmLT84KT98cHJvdG8pKT8kL2k7XG5leHBvcnQgY29uc3QgY29udGVudFR5cGVQcm90byA9IFwiYXBwbGljYXRpb24vZ3JwYy13ZWIrcHJvdG9cIjtcbmV4cG9ydCBjb25zdCBjb250ZW50VHlwZUpzb24gPSBcImFwcGxpY2F0aW9uL2dycGMtd2ViK2pzb25cIjtcbi8qKlxuICogUGFyc2UgYSBnUlBDLXdlYiBDb250ZW50LVR5cGUgaGVhZGVyIHZhbHVlLlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VDb250ZW50VHlwZShjb250ZW50VHlwZSkge1xuICAgIGNvbnN0IG1hdGNoID0gY29udGVudFR5cGUgPT09IG51bGwgfHwgY29udGVudFR5cGUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNvbnRlbnRUeXBlLm1hdGNoKGNvbnRlbnRUeXBlUmVnRXhwKTtcbiAgICBpZiAoIW1hdGNoKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGNvbnN0IHRleHQgPSAhIW1hdGNoWzFdO1xuICAgIGNvbnN0IGJpbmFyeSA9ICFtYXRjaFsyXTtcbiAgICByZXR1cm4geyB0ZXh0LCBiaW5hcnkgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/content-type.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/handler-factory.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/handler-factory.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createHandlerFactory: () => (/* binding */ createHandlerFactory)\n/* harmony export */ });\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../connect-error.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../code.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _implementation_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../implementation.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/implementation.js\");\n/* harmony import */ var _trailer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./trailer.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/trailer.js\");\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./headers.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/headers.js\");\n/* harmony import */ var _content_type_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./content-type.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/content-type.js\");\n/* harmony import */ var _protocol_grpc_parse_timeout_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../protocol-grpc/parse-timeout.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/parse-timeout.js\");\n/* harmony import */ var _protocol_grpc_trailer_status_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../protocol-grpc/trailer-status.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/trailer-status.js\");\n/* harmony import */ var _protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../protocol/async-iterable.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/async-iterable.js\");\n/* harmony import */ var _protocol_compression_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../protocol/compression.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/compression.js\");\n/* harmony import */ var _protocol_content_type_matcher_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../protocol/content-type-matcher.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/content-type-matcher.js\");\n/* harmony import */ var _protocol_create_method_url_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../protocol/create-method-url.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/create-method-url.js\");\n/* harmony import */ var _protocol_invoke_implementation_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../protocol/invoke-implementation.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/invoke-implementation.js\");\n/* harmony import */ var _protocol_serialization_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../protocol/serialization.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/serialization.js\");\n/* harmony import */ var _protocol_universal_handler_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../protocol/universal-handler.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/universal-handler.js\");\n/* harmony import */ var _protocol_universal_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../protocol/universal.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/universal.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst protocolName = \"grpc-web\";\nconst methodPost = \"POST\";\n/**\n * Create a factory that creates gRPC-web handlers.\n */\nfunction createHandlerFactory(options) {\n    const opt = (0,_protocol_universal_handler_js__WEBPACK_IMPORTED_MODULE_0__.validateUniversalHandlerOptions)(options);\n    const trailerSerialization = (0,_trailer_js__WEBPACK_IMPORTED_MODULE_1__.createTrailerSerialization)();\n    function fact(spec) {\n        const h = createHandler(opt, trailerSerialization, spec);\n        return Object.assign(h, {\n            protocolNames: [protocolName],\n            allowedMethods: [methodPost],\n            supportedContentType: (0,_protocol_content_type_matcher_js__WEBPACK_IMPORTED_MODULE_2__.contentTypeMatcher)(_content_type_js__WEBPACK_IMPORTED_MODULE_3__.contentTypeRegExp),\n            requestPath: (0,_protocol_create_method_url_js__WEBPACK_IMPORTED_MODULE_4__.createMethodUrl)(\"/\", spec.service, spec.method),\n            service: spec.service,\n            method: spec.method,\n        });\n    }\n    fact.protocolName = protocolName;\n    return fact;\n}\nfunction createHandler(opt, trailerSerialization, spec) {\n    const serialization = (0,_protocol_serialization_js__WEBPACK_IMPORTED_MODULE_5__.createMethodSerializationLookup)(spec.method, opt.binaryOptions, opt.jsonOptions, opt);\n    return async function handle(req) {\n        (0,_protocol_universal_js__WEBPACK_IMPORTED_MODULE_6__.assertByteStreamRequest)(req);\n        const type = (0,_content_type_js__WEBPACK_IMPORTED_MODULE_3__.parseContentType)(req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_7__.headerContentType));\n        if (type == undefined || type.text) {\n            return _protocol_universal_js__WEBPACK_IMPORTED_MODULE_6__.uResponseUnsupportedMediaType;\n        }\n        if (req.method !== methodPost) {\n            return _protocol_universal_js__WEBPACK_IMPORTED_MODULE_6__.uResponseMethodNotAllowed;\n        }\n        const timeout = (0,_protocol_grpc_parse_timeout_js__WEBPACK_IMPORTED_MODULE_8__.parseTimeout)(req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_7__.headerTimeout), opt.maxTimeoutMs);\n        const context = (0,_implementation_js__WEBPACK_IMPORTED_MODULE_9__.createHandlerContext)(Object.assign(Object.assign({}, spec), { requestMethod: req.method, protocolName, timeoutMs: timeout.timeoutMs, shutdownSignal: opt.shutdownSignal, requestSignal: req.signal, requestHeader: req.header, url: req.url, responseHeader: {\n                [_headers_js__WEBPACK_IMPORTED_MODULE_7__.headerContentType]: type.binary ? _content_type_js__WEBPACK_IMPORTED_MODULE_3__.contentTypeProto : _content_type_js__WEBPACK_IMPORTED_MODULE_3__.contentTypeJson,\n            }, responseTrailer: {\n                [_headers_js__WEBPACK_IMPORTED_MODULE_7__.headerGrpcStatus]: _protocol_grpc_trailer_status_js__WEBPACK_IMPORTED_MODULE_10__.grpcStatusOk,\n            }, contextValues: req.contextValues }));\n        const compression = (0,_protocol_compression_js__WEBPACK_IMPORTED_MODULE_11__.compressionNegotiate)(opt.acceptCompression, req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_7__.headerEncoding), req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_7__.headerAcceptEncoding), _headers_js__WEBPACK_IMPORTED_MODULE_7__.headerAcceptEncoding);\n        if (compression.response) {\n            context.responseHeader.set(_headers_js__WEBPACK_IMPORTED_MODULE_7__.headerEncoding, compression.response.name);\n        }\n        // We split the pipeline into two parts: The request iterator, and the\n        // response iterator. We do this because the request iterator is responsible\n        // for parsing the request body, and we don't want write errors of the response\n        // iterator to affect the request iterator.\n        const inputIt = (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_12__.pipe)(req.body, (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_12__.transformPrepend)(() => {\n            // raise compression error to serialize it as a trailer status\n            if (compression.error)\n                throw compression.error;\n            // raise timeout parsing error to serialize it as a trailer status\n            if (timeout.error)\n                throw timeout.error;\n            return undefined;\n        }), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_12__.transformSplitEnvelope)(opt.readMaxBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_12__.transformDecompressEnvelope)(compression.request, opt.readMaxBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_12__.transformParseEnvelope)(serialization.getI(type.binary), _trailer_js__WEBPACK_IMPORTED_MODULE_1__.trailerFlag));\n        const it = (0,_protocol_invoke_implementation_js__WEBPACK_IMPORTED_MODULE_13__.transformInvokeImplementation)(spec, context, opt.interceptors)(inputIt)[Symbol.asyncIterator]();\n        const outputIt = (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_12__.pipe)(\n        // We wrap the iterator in an async iterator to ensure that the\n        // abort signal is aborted when the iterator is done.\n        {\n            [Symbol.asyncIterator]() {\n                return {\n                    next: () => it.next(),\n                    throw: (e) => {\n                        var _a, _b;\n                        context.abort(e);\n                        return (_b = (_a = it.throw) === null || _a === void 0 ? void 0 : _a.call(it, e)) !== null && _b !== void 0 ? _b : Promise.reject({ done: true });\n                    },\n                    return: (v) => {\n                        var _a, _b;\n                        context.abort();\n                        return ((_b = (_a = it.return) === null || _a === void 0 ? void 0 : _a.call(it, v)) !== null && _b !== void 0 ? _b : Promise.resolve({ done: true, value: v }));\n                    },\n                };\n            },\n        }, (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_12__.transformSerializeEnvelope)(serialization.getO(type.binary)), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_12__.transformCatchFinally)((e) => {\n            context.abort();\n            if (e instanceof _connect_error_js__WEBPACK_IMPORTED_MODULE_14__.ConnectError) {\n                (0,_protocol_grpc_trailer_status_js__WEBPACK_IMPORTED_MODULE_10__.setTrailerStatus)(context.responseTrailer, e);\n            }\n            else if (e !== undefined) {\n                (0,_protocol_grpc_trailer_status_js__WEBPACK_IMPORTED_MODULE_10__.setTrailerStatus)(context.responseTrailer, new _connect_error_js__WEBPACK_IMPORTED_MODULE_14__.ConnectError(\"internal error\", _code_js__WEBPACK_IMPORTED_MODULE_15__.Code.Internal, undefined, undefined, e));\n            }\n            return {\n                flags: _trailer_js__WEBPACK_IMPORTED_MODULE_1__.trailerFlag,\n                data: trailerSerialization.serialize(context.responseTrailer),\n            };\n        }), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_12__.transformCompressEnvelope)(compression.response, opt.compressMinBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_12__.transformJoinEnvelopes)(), { propagateDownStreamError: true });\n        return Object.assign(Object.assign({}, _protocol_universal_js__WEBPACK_IMPORTED_MODULE_6__.uResponseOk), { \n            // We wait for the first response body bytes before resolving, so that\n            // implementations have a chance to add headers before an adapter commits\n            // them to the wire.\n            body: await (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_12__.untilFirst)(outputIt), header: context.responseHeader });\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/handler-factory.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/headers.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/headers.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerAcceptEncoding: () => (/* reexport safe */ _protocol_grpc_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerAcceptEncoding),\n/* harmony export */   headerContentType: () => (/* reexport safe */ _protocol_grpc_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerContentType),\n/* harmony export */   headerEncoding: () => (/* reexport safe */ _protocol_grpc_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerEncoding),\n/* harmony export */   headerGrpcMessage: () => (/* reexport safe */ _protocol_grpc_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerGrpcMessage),\n/* harmony export */   headerGrpcStatus: () => (/* reexport safe */ _protocol_grpc_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerGrpcStatus),\n/* harmony export */   headerStatusDetailsBin: () => (/* reexport safe */ _protocol_grpc_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerStatusDetailsBin),\n/* harmony export */   headerTimeout: () => (/* reexport safe */ _protocol_grpc_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerTimeout),\n/* harmony export */   headerUserAgent: () => (/* reexport safe */ _protocol_grpc_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerUserAgent),\n/* harmony export */   headerXGrpcWeb: () => (/* binding */ headerXGrpcWeb),\n/* harmony export */   headerXUserAgent: () => (/* binding */ headerXUserAgent)\n/* harmony export */ });\n/* harmony import */ var _protocol_grpc_headers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../protocol-grpc/headers.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/headers.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * @private Internal code, does not follow semantic versioning.\n */\n\n/**\n * gRPC-web does not use the standard header User-Agent.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst headerXUserAgent = \"X-User-Agent\";\n/**\n * The canonical grpc/grpc-web JavaScript implementation sets\n * this request header with value \"1\".\n * Some servers may rely on the header to identify gRPC-web\n * requests. For example the proxy by improbable:\n * https://github.com/improbable-eng/grpc-web/blob/53aaf4cdc0fede7103c1b06f0cfc560c003a5c41/go/grpcweb/wrapper.go#L231\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst headerXGrpcWeb = \"X-Grpc-Web\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1ncnBjLXdlYi9oZWFkZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDb007QUFDcE07QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZS1jby9ldGhvcy1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AY29ubmVjdHJwYy9jb25uZWN0L2Rpc3QvZXNtL3Byb3RvY29sLWdycGMtd2ViL2hlYWRlcnMuanM/MzRkNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuLyoqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IHsgaGVhZGVyQ29udGVudFR5cGUsIGhlYWRlckVuY29kaW5nLCBoZWFkZXJBY2NlcHRFbmNvZGluZywgaGVhZGVyVGltZW91dCwgaGVhZGVyR3JwY1N0YXR1cywgaGVhZGVyR3JwY01lc3NhZ2UsIGhlYWRlclN0YXR1c0RldGFpbHNCaW4sIGhlYWRlclVzZXJBZ2VudCwgfSBmcm9tIFwiLi4vcHJvdG9jb2wtZ3JwYy9oZWFkZXJzLmpzXCI7XG4vKipcbiAqIGdSUEMtd2ViIGRvZXMgbm90IHVzZSB0aGUgc3RhbmRhcmQgaGVhZGVyIFVzZXItQWdlbnQuXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBjb25zdCBoZWFkZXJYVXNlckFnZW50ID0gXCJYLVVzZXItQWdlbnRcIjtcbi8qKlxuICogVGhlIGNhbm9uaWNhbCBncnBjL2dycGMtd2ViIEphdmFTY3JpcHQgaW1wbGVtZW50YXRpb24gc2V0c1xuICogdGhpcyByZXF1ZXN0IGhlYWRlciB3aXRoIHZhbHVlIFwiMVwiLlxuICogU29tZSBzZXJ2ZXJzIG1heSByZWx5IG9uIHRoZSBoZWFkZXIgdG8gaWRlbnRpZnkgZ1JQQy13ZWJcbiAqIHJlcXVlc3RzLiBGb3IgZXhhbXBsZSB0aGUgcHJveHkgYnkgaW1wcm9iYWJsZTpcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9pbXByb2JhYmxlLWVuZy9ncnBjLXdlYi9ibG9iLzUzYWFmNGNkYzBmZWRlNzEwM2MxYjA2ZjBjZmM1NjBjMDAzYTVjNDEvZ28vZ3JwY3dlYi93cmFwcGVyLmdvI0wyMzFcbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGNvbnN0IGhlYWRlclhHcnBjV2ViID0gXCJYLUdycGMtV2ViXCI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/headers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/trailer.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/trailer.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createTrailerSerialization: () => (/* binding */ createTrailerSerialization),\n/* harmony export */   trailerFlag: () => (/* binding */ trailerFlag),\n/* harmony export */   trailerParse: () => (/* binding */ trailerParse),\n/* harmony export */   trailerSerialize: () => (/* binding */ trailerSerialize)\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * trailerFlag indicates that the data in a EnvelopedMessage\n * is a set of trailers of the gRPC-web protocol.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst trailerFlag = 0b10000000;\n/**\n * Parse a gRPC-web trailer, a set of header fields separated by CRLF.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction trailerParse(data) {\n    const headers = new Headers();\n    const lines = new TextDecoder().decode(data).split(\"\\r\\n\");\n    for (const line of lines) {\n        if (line === \"\") {\n            continue;\n        }\n        const i = line.indexOf(\":\");\n        if (i > 0) {\n            const name = line.substring(0, i).trim();\n            const value = line.substring(i + 1).trim();\n            headers.append(name, value);\n        }\n    }\n    return headers;\n}\n/**\n * Serialize a Headers object as a gRPC-web trailer.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction trailerSerialize(trailer) {\n    const lines = [];\n    trailer.forEach((value, key) => {\n        lines.push(`${key}: ${value}\\r\\n`);\n    });\n    return new TextEncoder().encode(lines.join(\"\"));\n}\n/**\n * Create a Serialization object that serializes a gRPC-web trailer, a Headers\n * object that is serialized as a set of header fields, separated by CRLF.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction createTrailerSerialization() {\n    return {\n        serialize: trailerSerialize,\n        parse: trailerParse,\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1ncnBjLXdlYi90cmFpbGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLHNCQUFzQixJQUFJLElBQUksTUFBTTtBQUNwQyxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BlLWNvL2V0aG9zLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0Bjb25uZWN0cnBjL2Nvbm5lY3QvZGlzdC9lc20vcHJvdG9jb2wtZ3JwYy13ZWIvdHJhaWxlci5qcz8yNDliIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgVGhlIENvbm5lY3QgQXV0aG9yc1xuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4vKipcbiAqIHRyYWlsZXJGbGFnIGluZGljYXRlcyB0aGF0IHRoZSBkYXRhIGluIGEgRW52ZWxvcGVkTWVzc2FnZVxuICogaXMgYSBzZXQgb2YgdHJhaWxlcnMgb2YgdGhlIGdSUEMtd2ViIHByb3RvY29sLlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgY29uc3QgdHJhaWxlckZsYWcgPSAwYjEwMDAwMDAwO1xuLyoqXG4gKiBQYXJzZSBhIGdSUEMtd2ViIHRyYWlsZXIsIGEgc2V0IG9mIGhlYWRlciBmaWVsZHMgc2VwYXJhdGVkIGJ5IENSTEYuXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0cmFpbGVyUGFyc2UoZGF0YSkge1xuICAgIGNvbnN0IGhlYWRlcnMgPSBuZXcgSGVhZGVycygpO1xuICAgIGNvbnN0IGxpbmVzID0gbmV3IFRleHREZWNvZGVyKCkuZGVjb2RlKGRhdGEpLnNwbGl0KFwiXFxyXFxuXCIpO1xuICAgIGZvciAoY29uc3QgbGluZSBvZiBsaW5lcykge1xuICAgICAgICBpZiAobGluZSA9PT0gXCJcIikge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgaSA9IGxpbmUuaW5kZXhPZihcIjpcIik7XG4gICAgICAgIGlmIChpID4gMCkge1xuICAgICAgICAgICAgY29uc3QgbmFtZSA9IGxpbmUuc3Vic3RyaW5nKDAsIGkpLnRyaW0oKTtcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gbGluZS5zdWJzdHJpbmcoaSArIDEpLnRyaW0oKTtcbiAgICAgICAgICAgIGhlYWRlcnMuYXBwZW5kKG5hbWUsIHZhbHVlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gaGVhZGVycztcbn1cbi8qKlxuICogU2VyaWFsaXplIGEgSGVhZGVycyBvYmplY3QgYXMgYSBnUlBDLXdlYiB0cmFpbGVyLlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdHJhaWxlclNlcmlhbGl6ZSh0cmFpbGVyKSB7XG4gICAgY29uc3QgbGluZXMgPSBbXTtcbiAgICB0cmFpbGVyLmZvckVhY2goKHZhbHVlLCBrZXkpID0+IHtcbiAgICAgICAgbGluZXMucHVzaChgJHtrZXl9OiAke3ZhbHVlfVxcclxcbmApO1xuICAgIH0pO1xuICAgIHJldHVybiBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUobGluZXMuam9pbihcIlwiKSk7XG59XG4vKipcbiAqIENyZWF0ZSBhIFNlcmlhbGl6YXRpb24gb2JqZWN0IHRoYXQgc2VyaWFsaXplcyBhIGdSUEMtd2ViIHRyYWlsZXIsIGEgSGVhZGVyc1xuICogb2JqZWN0IHRoYXQgaXMgc2VyaWFsaXplZCBhcyBhIHNldCBvZiBoZWFkZXIgZmllbGRzLCBzZXBhcmF0ZWQgYnkgQ1JMRi5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVRyYWlsZXJTZXJpYWxpemF0aW9uKCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIHNlcmlhbGl6ZTogdHJhaWxlclNlcmlhbGl6ZSxcbiAgICAgICAgcGFyc2U6IHRyYWlsZXJQYXJzZSxcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/trailer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/content-type.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/content-type.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   contentTypeJson: () => (/* binding */ contentTypeJson),\n/* harmony export */   contentTypeProto: () => (/* binding */ contentTypeProto),\n/* harmony export */   contentTypeRegExp: () => (/* binding */ contentTypeRegExp),\n/* harmony export */   parseContentType: () => (/* binding */ parseContentType)\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Regular Expression that matches any valid gRPC Content-Type header value.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst contentTypeRegExp = /^application\\/grpc(?:\\+(?:(json)(?:; ?charset=utf-?8)?|proto))?$/i;\nconst contentTypeProto = \"application/grpc+proto\";\nconst contentTypeJson = \"application/grpc+json\";\n/**\n * Parse a gRPC Content-Type header.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction parseContentType(contentType) {\n    const match = contentType === null || contentType === void 0 ? void 0 : contentType.match(contentTypeRegExp);\n    if (!match) {\n        return undefined;\n    }\n    const binary = !match[1];\n    return { binary };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1ncnBjL2NvbnRlbnQtdHlwZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sZ0VBQWdFO0FBQ2hFO0FBQ0E7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGUtY28vZXRob3MtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1ncnBjL2NvbnRlbnQtdHlwZS5qcz82YTg5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgVGhlIENvbm5lY3QgQXV0aG9yc1xuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4vKipcbiAqIFJlZ3VsYXIgRXhwcmVzc2lvbiB0aGF0IG1hdGNoZXMgYW55IHZhbGlkIGdSUEMgQ29udGVudC1UeXBlIGhlYWRlciB2YWx1ZS5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGNvbnN0IGNvbnRlbnRUeXBlUmVnRXhwID0gL15hcHBsaWNhdGlvblxcL2dycGMoPzpcXCsoPzooanNvbikoPzo7ID9jaGFyc2V0PXV0Zi0/OCk/fHByb3RvKSk/JC9pO1xuZXhwb3J0IGNvbnN0IGNvbnRlbnRUeXBlUHJvdG8gPSBcImFwcGxpY2F0aW9uL2dycGMrcHJvdG9cIjtcbmV4cG9ydCBjb25zdCBjb250ZW50VHlwZUpzb24gPSBcImFwcGxpY2F0aW9uL2dycGMranNvblwiO1xuLyoqXG4gKiBQYXJzZSBhIGdSUEMgQ29udGVudC1UeXBlIGhlYWRlci5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlQ29udGVudFR5cGUoY29udGVudFR5cGUpIHtcbiAgICBjb25zdCBtYXRjaCA9IGNvbnRlbnRUeXBlID09PSBudWxsIHx8IGNvbnRlbnRUeXBlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjb250ZW50VHlwZS5tYXRjaChjb250ZW50VHlwZVJlZ0V4cCk7XG4gICAgaWYgKCFtYXRjaCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBjb25zdCBiaW5hcnkgPSAhbWF0Y2hbMV07XG4gICAgcmV0dXJuIHsgYmluYXJ5IH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/content-type.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/gen/status_pb.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/gen/status_pb.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Status: () => (/* binding */ Status)\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bufbuild/protobuf */ \"(ssr)/./node_modules/@bufbuild/protobuf/dist/esm/message.js\");\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @bufbuild/protobuf */ \"(ssr)/./node_modules/@bufbuild/protobuf/dist/esm/proto3.js\");\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @bufbuild/protobuf */ \"(ssr)/./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/any_pb.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * The `Status` type defines a logical error model that is suitable for different\n * programming environments, including REST APIs and RPC APIs. It is used by\n * [gRPC](https://github.com/grpc). The error model is designed to be:\n *\n * - Simple to use and understand for most users\n * - Flexible enough to meet unexpected needs\n *\n * # Overview\n *\n * The `Status` message contains three pieces of data: error code, error message,\n * and error details. The error code should be an enum value of\n * [google.rpc.Code][google.rpc.Code], but it may accept additional error codes if needed.  The\n * error message should be a developer-facing English message that helps\n * developers *understand* and *resolve* the error. If a localized user-facing\n * error message is needed, put the localized message in the error details or\n * localize it in the client. The optional error details may contain arbitrary\n * information about the error. There is a predefined set of error detail types\n * in the package `google.rpc` which can be used for common error conditions.\n *\n * # Language mapping\n *\n * The `Status` message is the logical representation of the error model, but it\n * is not necessarily the actual wire format. When the `Status` message is\n * exposed in different client libraries and different wire protocols, it can be\n * mapped differently. For example, it will likely be mapped to some exceptions\n * in Java, but more likely mapped to some error codes in C.\n *\n * # Other uses\n *\n * The error model and the `Status` message can be used in a variety of\n * environments, either with or without APIs, to provide a\n * consistent developer experience across different environments.\n *\n * Example uses of this error model include:\n *\n * - Partial errors. If a service needs to return partial errors to the client,\n *     it may embed the `Status` in the normal response to indicate the partial\n *     errors.\n *\n * - Workflow errors. A typical workflow has multiple steps. Each step may\n *     have a `Status` message for error reporting purpose.\n *\n * - Batch operations. If a client uses batch request and batch response, the\n *     `Status` message should be used directly inside batch response, one for\n *     each error sub-response.\n *\n * - Asynchronous operations. If an API call embeds asynchronous operation\n *     results in its response, the status of those operations should be\n *     represented directly using the `Status` message.\n *\n * - Logging. If some API errors are stored in logs, the message `Status` could\n *     be used directly after any stripping needed for security/privacy reasons.\n *\n * @generated from message google.rpc.Status\n */\nclass Status extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.Message {\n    constructor(data) {\n        super();\n        /**\n         * The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].\n         *\n         * @generated from field: int32 code = 1;\n         */\n        this.code = 0;\n        /**\n         * A developer-facing error message, which should be in English. Any\n         * user-facing error message should be localized and sent in the\n         * [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.\n         *\n         * @generated from field: string message = 2;\n         */\n        this.message = \"\";\n        /**\n         * A list of messages that carry the error details.  There will be a\n         * common set of message types for APIs to use.\n         *\n         * @generated from field: repeated google.protobuf.Any details = 3;\n         */\n        this.details = [];\n        _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new Status().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Status().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Status().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.proto3.util.equals(Status, a, b);\n    }\n}\nStatus.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.proto3;\nStatus.typeName = \"google.rpc.Status\";\nStatus.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.proto3.util.newFieldList(() => [\n    { no: 1, name: \"code\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 2, name: \"message\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"details\", kind: \"message\", T: _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.Any, repeated: true },\n]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/gen/status_pb.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/handler-factory.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/handler-factory.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createHandlerFactory: () => (/* binding */ createHandlerFactory)\n/* harmony export */ });\n/* harmony import */ var _implementation_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../implementation.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/implementation.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../connect-error.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../code.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _content_type_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./content-type.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/content-type.js\");\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./headers.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/headers.js\");\n/* harmony import */ var _trailer_status_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./trailer-status.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/trailer-status.js\");\n/* harmony import */ var _parse_timeout_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./parse-timeout.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/parse-timeout.js\");\n/* harmony import */ var _protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../protocol/async-iterable.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/async-iterable.js\");\n/* harmony import */ var _protocol_compression_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../protocol/compression.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/compression.js\");\n/* harmony import */ var _protocol_content_type_matcher_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../protocol/content-type-matcher.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/content-type-matcher.js\");\n/* harmony import */ var _protocol_create_method_url_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../protocol/create-method-url.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/create-method-url.js\");\n/* harmony import */ var _protocol_invoke_implementation_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../protocol/invoke-implementation.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/invoke-implementation.js\");\n/* harmony import */ var _protocol_serialization_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../protocol/serialization.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/serialization.js\");\n/* harmony import */ var _protocol_universal_handler_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../protocol/universal-handler.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/universal-handler.js\");\n/* harmony import */ var _protocol_universal_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../protocol/universal.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/universal.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst protocolName = \"grpc\";\nconst methodPost = \"POST\";\n/**\n * Create a factory that creates gRPC handlers.\n */\nfunction createHandlerFactory(options) {\n    const opt = (0,_protocol_universal_handler_js__WEBPACK_IMPORTED_MODULE_0__.validateUniversalHandlerOptions)(options);\n    function fact(spec) {\n        const h = createHandler(opt, spec);\n        return Object.assign(h, {\n            protocolNames: [protocolName],\n            allowedMethods: [methodPost],\n            supportedContentType: (0,_protocol_content_type_matcher_js__WEBPACK_IMPORTED_MODULE_1__.contentTypeMatcher)(_content_type_js__WEBPACK_IMPORTED_MODULE_2__.contentTypeRegExp),\n            requestPath: (0,_protocol_create_method_url_js__WEBPACK_IMPORTED_MODULE_3__.createMethodUrl)(\"/\", spec.service, spec.method),\n            service: spec.service,\n            method: spec.method,\n        });\n    }\n    fact.protocolName = protocolName;\n    return fact;\n}\nfunction createHandler(opt, spec) {\n    const serialization = (0,_protocol_serialization_js__WEBPACK_IMPORTED_MODULE_4__.createMethodSerializationLookup)(spec.method, opt.binaryOptions, opt.jsonOptions, opt);\n    return async function handle(req) {\n        (0,_protocol_universal_js__WEBPACK_IMPORTED_MODULE_5__.assertByteStreamRequest)(req);\n        const type = (0,_content_type_js__WEBPACK_IMPORTED_MODULE_2__.parseContentType)(req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_6__.headerContentType));\n        if (type == undefined) {\n            return _protocol_universal_js__WEBPACK_IMPORTED_MODULE_5__.uResponseUnsupportedMediaType;\n        }\n        if (req.method !== methodPost) {\n            return _protocol_universal_js__WEBPACK_IMPORTED_MODULE_5__.uResponseMethodNotAllowed;\n        }\n        const timeout = (0,_parse_timeout_js__WEBPACK_IMPORTED_MODULE_7__.parseTimeout)(req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_6__.headerTimeout), opt.maxTimeoutMs);\n        const context = (0,_implementation_js__WEBPACK_IMPORTED_MODULE_8__.createHandlerContext)(Object.assign(Object.assign({}, spec), { requestMethod: req.method, protocolName, timeoutMs: timeout.timeoutMs, shutdownSignal: opt.shutdownSignal, requestSignal: req.signal, requestHeader: req.header, url: req.url, responseHeader: {\n                [_headers_js__WEBPACK_IMPORTED_MODULE_6__.headerContentType]: type.binary ? _content_type_js__WEBPACK_IMPORTED_MODULE_2__.contentTypeProto : _content_type_js__WEBPACK_IMPORTED_MODULE_2__.contentTypeJson,\n            }, responseTrailer: {\n                [_headers_js__WEBPACK_IMPORTED_MODULE_6__.headerGrpcStatus]: _trailer_status_js__WEBPACK_IMPORTED_MODULE_9__.grpcStatusOk,\n            }, contextValues: req.contextValues }));\n        const compression = (0,_protocol_compression_js__WEBPACK_IMPORTED_MODULE_10__.compressionNegotiate)(opt.acceptCompression, req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_6__.headerEncoding), req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_6__.headerAcceptEncoding), _headers_js__WEBPACK_IMPORTED_MODULE_6__.headerAcceptEncoding);\n        if (compression.response) {\n            context.responseHeader.set(_headers_js__WEBPACK_IMPORTED_MODULE_6__.headerEncoding, compression.response.name);\n        }\n        // We split the pipeline into two parts: The request iterator, and the\n        // response iterator. We do this because the request iterator is responsible\n        // for parsing the request body, and we don't want write errors of the response\n        // iterator to affect the request iterator.\n        const inputIt = (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_11__.pipe)(req.body, (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_11__.transformPrepend)(() => {\n            // raise compression error to serialize it as a trailer status\n            if (compression.error)\n                throw compression.error;\n            // raise timeout parsing error to serialize it as a trailer status\n            if (timeout.error)\n                throw timeout.error;\n            return undefined;\n        }), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_11__.transformSplitEnvelope)(opt.readMaxBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_11__.transformDecompressEnvelope)(compression.request, opt.readMaxBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_11__.transformParseEnvelope)(serialization.getI(type.binary)));\n        const it = (0,_protocol_invoke_implementation_js__WEBPACK_IMPORTED_MODULE_12__.transformInvokeImplementation)(spec, context, opt.interceptors)(inputIt)[Symbol.asyncIterator]();\n        const outputIt = (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_11__.pipe)(\n        // We wrap the iterator in an async iterator to ensure that the\n        // abort signal is aborted when the iterator is done.\n        {\n            [Symbol.asyncIterator]() {\n                return {\n                    next: () => it.next(),\n                    throw: (e) => {\n                        var _a, _b;\n                        context.abort(e);\n                        return (_b = (_a = it.throw) === null || _a === void 0 ? void 0 : _a.call(it, e)) !== null && _b !== void 0 ? _b : Promise.reject({ done: true });\n                    },\n                    return: (v) => {\n                        var _a, _b;\n                        context.abort();\n                        return ((_b = (_a = it.return) === null || _a === void 0 ? void 0 : _a.call(it, v)) !== null && _b !== void 0 ? _b : Promise.resolve({ done: true, value: v }));\n                    },\n                };\n            },\n        }, (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_11__.transformSerializeEnvelope)(serialization.getO(type.binary)), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_11__.transformCompressEnvelope)(compression.response, opt.compressMinBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_11__.transformJoinEnvelopes)(), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_11__.transformCatchFinally)((e) => {\n            context.abort();\n            if (e instanceof _connect_error_js__WEBPACK_IMPORTED_MODULE_13__.ConnectError) {\n                (0,_trailer_status_js__WEBPACK_IMPORTED_MODULE_9__.setTrailerStatus)(context.responseTrailer, e);\n            }\n            else if (e !== undefined) {\n                (0,_trailer_status_js__WEBPACK_IMPORTED_MODULE_9__.setTrailerStatus)(context.responseTrailer, new _connect_error_js__WEBPACK_IMPORTED_MODULE_13__.ConnectError(\"internal error\", _code_js__WEBPACK_IMPORTED_MODULE_14__.Code.Internal, undefined, undefined, e));\n            }\n        }), { propagateDownStreamError: true });\n        return Object.assign(Object.assign({}, _protocol_universal_js__WEBPACK_IMPORTED_MODULE_5__.uResponseOk), { \n            // We wait for the first response body bytes before resolving, so that\n            // implementations have a chance to add headers before an adapter commits\n            // them to the wire.\n            body: await (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_11__.untilFirst)(outputIt), header: context.responseHeader, trailer: context.responseTrailer });\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/handler-factory.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/headers.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/headers.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerAcceptEncoding: () => (/* binding */ headerAcceptEncoding),\n/* harmony export */   headerContentType: () => (/* binding */ headerContentType),\n/* harmony export */   headerEncoding: () => (/* binding */ headerEncoding),\n/* harmony export */   headerGrpcMessage: () => (/* binding */ headerGrpcMessage),\n/* harmony export */   headerGrpcStatus: () => (/* binding */ headerGrpcStatus),\n/* harmony export */   headerMessageType: () => (/* binding */ headerMessageType),\n/* harmony export */   headerStatusDetailsBin: () => (/* binding */ headerStatusDetailsBin),\n/* harmony export */   headerTimeout: () => (/* binding */ headerTimeout),\n/* harmony export */   headerUserAgent: () => (/* binding */ headerUserAgent)\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * @private Internal code, does not follow semantic versioning.\n */\nconst headerContentType = \"Content-Type\";\nconst headerEncoding = \"Grpc-Encoding\";\nconst headerAcceptEncoding = \"Grpc-Accept-Encoding\";\nconst headerTimeout = \"Grpc-Timeout\";\nconst headerGrpcStatus = \"Grpc-Status\";\nconst headerGrpcMessage = \"Grpc-Message\";\nconst headerStatusDetailsBin = \"Grpc-Status-Details-Bin\";\nconst headerMessageType = \"Grpc-Message-Type\";\nconst headerUserAgent = \"User-Agent\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1ncnBjL2hlYWRlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZS1jby9ldGhvcy1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AY29ubmVjdHJwYy9jb25uZWN0L2Rpc3QvZXNtL3Byb3RvY29sLWdycGMvaGVhZGVycy5qcz8zOWZmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgVGhlIENvbm5lY3QgQXV0aG9yc1xuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4vKipcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgY29uc3QgaGVhZGVyQ29udGVudFR5cGUgPSBcIkNvbnRlbnQtVHlwZVwiO1xuZXhwb3J0IGNvbnN0IGhlYWRlckVuY29kaW5nID0gXCJHcnBjLUVuY29kaW5nXCI7XG5leHBvcnQgY29uc3QgaGVhZGVyQWNjZXB0RW5jb2RpbmcgPSBcIkdycGMtQWNjZXB0LUVuY29kaW5nXCI7XG5leHBvcnQgY29uc3QgaGVhZGVyVGltZW91dCA9IFwiR3JwYy1UaW1lb3V0XCI7XG5leHBvcnQgY29uc3QgaGVhZGVyR3JwY1N0YXR1cyA9IFwiR3JwYy1TdGF0dXNcIjtcbmV4cG9ydCBjb25zdCBoZWFkZXJHcnBjTWVzc2FnZSA9IFwiR3JwYy1NZXNzYWdlXCI7XG5leHBvcnQgY29uc3QgaGVhZGVyU3RhdHVzRGV0YWlsc0JpbiA9IFwiR3JwYy1TdGF0dXMtRGV0YWlscy1CaW5cIjtcbmV4cG9ydCBjb25zdCBoZWFkZXJNZXNzYWdlVHlwZSA9IFwiR3JwYy1NZXNzYWdlLVR5cGVcIjtcbmV4cG9ydCBjb25zdCBoZWFkZXJVc2VyQWdlbnQgPSBcIlVzZXItQWdlbnRcIjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/headers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/parse-timeout.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/parse-timeout.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseTimeout: () => (/* binding */ parseTimeout)\n/* harmony export */ });\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../code.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../connect-error.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * Parse a gRPC Timeout (Deadline) header.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction parseTimeout(value, maxTimeoutMs) {\n    if (value === null) {\n        return {};\n    }\n    const results = /^(\\d{1,8})([HMSmun])$/.exec(value);\n    if (results === null) {\n        return {\n            error: new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(`protocol error: invalid grpc timeout value: ${value}`, _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.InvalidArgument),\n        };\n    }\n    const unitToMultiplicand = {\n        H: 60 * 60 * 1000, // hour\n        M: 60 * 1000, // minute\n        S: 1000, // second\n        m: 1, // millisecond\n        u: 0.001, // microsecond\n        n: 0.000001, // nanosecond\n    };\n    const timeoutMs = unitToMultiplicand[results[2]] *\n        parseInt(results[1]);\n    if (timeoutMs > maxTimeoutMs) {\n        return {\n            timeoutMs: timeoutMs,\n            error: new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(`timeout ${timeoutMs}ms must be <= ${maxTimeoutMs}`, _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.InvalidArgument),\n        };\n    }\n    return {\n        timeoutMs,\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1ncnBjL3BhcnNlLXRpbWVvdXQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDa0M7QUFDaUI7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLElBQUk7QUFDOUI7QUFDQTtBQUNBLHVCQUF1QiwyREFBWSxnREFBZ0QsTUFBTSxHQUFHLDBDQUFJO0FBQ2hHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QiwyREFBWSxZQUFZLFVBQVUsZ0JBQWdCLGFBQWEsR0FBRywwQ0FBSTtBQUM3RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZS1jby9ldGhvcy1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AY29ubmVjdHJwYy9jb25uZWN0L2Rpc3QvZXNtL3Byb3RvY29sLWdycGMvcGFyc2UtdGltZW91dC5qcz81ZGQyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgVGhlIENvbm5lY3QgQXV0aG9yc1xuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5pbXBvcnQgeyBDb2RlIH0gZnJvbSBcIi4uL2NvZGUuanNcIjtcbmltcG9ydCB7IENvbm5lY3RFcnJvciB9IGZyb20gXCIuLi9jb25uZWN0LWVycm9yLmpzXCI7XG4vKipcbiAqIFBhcnNlIGEgZ1JQQyBUaW1lb3V0IChEZWFkbGluZSkgaGVhZGVyLlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VUaW1lb3V0KHZhbHVlLCBtYXhUaW1lb3V0TXMpIHtcbiAgICBpZiAodmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIHt9O1xuICAgIH1cbiAgICBjb25zdCByZXN1bHRzID0gL14oXFxkezEsOH0pKFtITVNtdW5dKSQvLmV4ZWModmFsdWUpO1xuICAgIGlmIChyZXN1bHRzID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBlcnJvcjogbmV3IENvbm5lY3RFcnJvcihgcHJvdG9jb2wgZXJyb3I6IGludmFsaWQgZ3JwYyB0aW1lb3V0IHZhbHVlOiAke3ZhbHVlfWAsIENvZGUuSW52YWxpZEFyZ3VtZW50KSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgY29uc3QgdW5pdFRvTXVsdGlwbGljYW5kID0ge1xuICAgICAgICBIOiA2MCAqIDYwICogMTAwMCwgLy8gaG91clxuICAgICAgICBNOiA2MCAqIDEwMDAsIC8vIG1pbnV0ZVxuICAgICAgICBTOiAxMDAwLCAvLyBzZWNvbmRcbiAgICAgICAgbTogMSwgLy8gbWlsbGlzZWNvbmRcbiAgICAgICAgdTogMC4wMDEsIC8vIG1pY3Jvc2Vjb25kXG4gICAgICAgIG46IDAuMDAwMDAxLCAvLyBuYW5vc2Vjb25kXG4gICAgfTtcbiAgICBjb25zdCB0aW1lb3V0TXMgPSB1bml0VG9NdWx0aXBsaWNhbmRbcmVzdWx0c1syXV0gKlxuICAgICAgICBwYXJzZUludChyZXN1bHRzWzFdKTtcbiAgICBpZiAodGltZW91dE1zID4gbWF4VGltZW91dE1zKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB0aW1lb3V0TXM6IHRpbWVvdXRNcyxcbiAgICAgICAgICAgIGVycm9yOiBuZXcgQ29ubmVjdEVycm9yKGB0aW1lb3V0ICR7dGltZW91dE1zfW1zIG11c3QgYmUgPD0gJHttYXhUaW1lb3V0TXN9YCwgQ29kZS5JbnZhbGlkQXJndW1lbnQpLFxuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICB0aW1lb3V0TXMsXG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/parse-timeout.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/trailer-status.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/trailer-status.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   findTrailerError: () => (/* binding */ findTrailerError),\n/* harmony export */   grpcStatusOk: () => (/* binding */ grpcStatusOk),\n/* harmony export */   setTrailerStatus: () => (/* binding */ setTrailerStatus)\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @bufbuild/protobuf */ \"(ssr)/./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/any_pb.js\");\n/* harmony import */ var _gen_status_pb_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./gen/status_pb.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/gen/status_pb.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../connect-error.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _http_headers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../http-headers.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/http-headers.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../code.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./headers.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/headers.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n/**\n * The value of the Grpc-Status header or trailer in case of success.\n * Used by the gRPC and gRPC-web protocols.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst grpcStatusOk = \"0\";\n/**\n * Sets the fields \"grpc-status\" and \"grpc-message\" in the given\n * Headers object.\n * If an error is given and contains error details, the function\n * will also set the field \"grpc-status-details-bin\" with an encoded\n * google.rpc.Status message including the error details.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction setTrailerStatus(target, error) {\n    if (error) {\n        target.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerGrpcStatus, error.code.toString(10));\n        target.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerGrpcMessage, encodeURIComponent(error.rawMessage));\n        if (error.details.length > 0) {\n            const status = new _gen_status_pb_js__WEBPACK_IMPORTED_MODULE_1__.Status({\n                code: error.code,\n                message: error.rawMessage,\n                details: error.details.map((value) => \"getType\" in value\n                    ? _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.Any.pack(value)\n                    : new _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.Any({\n                        typeUrl: `type.googleapis.com/${value.type}`,\n                        value: value.value,\n                    })),\n            });\n            target.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerStatusDetailsBin, (0,_http_headers_js__WEBPACK_IMPORTED_MODULE_3__.encodeBinaryHeader)(status));\n        }\n    }\n    else {\n        target.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerGrpcStatus, grpcStatusOk.toString());\n    }\n    return target;\n}\n/**\n * Find an error status in the given Headers object, which can be either\n * a trailer, or a header (as allowed for so-called trailers-only responses).\n * The field \"grpc-status-details-bin\" is inspected, and if not present,\n * the fields \"grpc-status\" and \"grpc-message\" are used.\n * Returns an error only if the gRPC status code is > 0.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction findTrailerError(headerOrTrailer) {\n    // TODO\n    // let code: Code;\n    // let message: string = \"\";\n    var _a;\n    // Prefer the protobuf-encoded data to the grpc-status header.\n    const statusBytes = headerOrTrailer.get(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerStatusDetailsBin);\n    if (statusBytes != null) {\n        const status = (0,_http_headers_js__WEBPACK_IMPORTED_MODULE_3__.decodeBinaryHeader)(statusBytes, _gen_status_pb_js__WEBPACK_IMPORTED_MODULE_1__.Status);\n        if (status.code == 0) {\n            return undefined;\n        }\n        const error = new _connect_error_js__WEBPACK_IMPORTED_MODULE_4__.ConnectError(status.message, status.code, headerOrTrailer);\n        error.details = status.details.map((any) => ({\n            type: any.typeUrl.substring(any.typeUrl.lastIndexOf(\"/\") + 1),\n            value: any.value,\n        }));\n        return error;\n    }\n    const grpcStatus = headerOrTrailer.get(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerGrpcStatus);\n    if (grpcStatus != null) {\n        if (grpcStatus === grpcStatusOk) {\n            return undefined;\n        }\n        const code = parseInt(grpcStatus, 10);\n        if (code in _code_js__WEBPACK_IMPORTED_MODULE_5__.Code) {\n            return new _connect_error_js__WEBPACK_IMPORTED_MODULE_4__.ConnectError(decodeURIComponent((_a = headerOrTrailer.get(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerGrpcMessage)) !== null && _a !== void 0 ? _a : \"\"), code, headerOrTrailer);\n        }\n        return new _connect_error_js__WEBPACK_IMPORTED_MODULE_4__.ConnectError(`invalid grpc-status: ${grpcStatus}`, _code_js__WEBPACK_IMPORTED_MODULE_5__.Code.Internal, headerOrTrailer);\n    }\n    return undefined;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1ncnBjL3RyYWlsZXItc3RhdHVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ3lDO0FBQ0c7QUFDTztBQUN5QjtBQUMxQztBQUMwRDtBQUM1RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxtQkFBbUIseURBQWdCO0FBQ25DLG1CQUFtQiwwREFBaUI7QUFDcEM7QUFDQSwrQkFBK0IscURBQU07QUFDckM7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLG1EQUFHO0FBQ3pCLDBCQUEwQixtREFBRztBQUM3Qix3REFBd0QsV0FBVztBQUNuRTtBQUNBLHFCQUFxQjtBQUNyQixhQUFhO0FBQ2IsdUJBQXVCLCtEQUFzQixFQUFFLG9FQUFrQjtBQUNqRTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIseURBQWdCO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QywrREFBc0I7QUFDbEU7QUFDQSx1QkFBdUIsb0VBQWtCLGNBQWMscURBQU07QUFDN0Q7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDJEQUFZO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsMkNBQTJDLHlEQUFnQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLDBDQUFJO0FBQ3hCLHVCQUF1QiwyREFBWSw4Q0FBOEMsMERBQWlCO0FBQ2xHO0FBQ0EsbUJBQW1CLDJEQUFZLHlCQUF5QixXQUFXLEdBQUcsMENBQUk7QUFDMUU7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGUtY28vZXRob3MtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1ncnBjL3RyYWlsZXItc3RhdHVzLmpzPzAzZDkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmltcG9ydCB7IEFueSB9IGZyb20gXCJAYnVmYnVpbGQvcHJvdG9idWZcIjtcbmltcG9ydCB7IFN0YXR1cyB9IGZyb20gXCIuL2dlbi9zdGF0dXNfcGIuanNcIjtcbmltcG9ydCB7IENvbm5lY3RFcnJvciB9IGZyb20gXCIuLi9jb25uZWN0LWVycm9yLmpzXCI7XG5pbXBvcnQgeyBkZWNvZGVCaW5hcnlIZWFkZXIsIGVuY29kZUJpbmFyeUhlYWRlciB9IGZyb20gXCIuLi9odHRwLWhlYWRlcnMuanNcIjtcbmltcG9ydCB7IENvZGUgfSBmcm9tIFwiLi4vY29kZS5qc1wiO1xuaW1wb3J0IHsgaGVhZGVyR3JwY01lc3NhZ2UsIGhlYWRlckdycGNTdGF0dXMsIGhlYWRlclN0YXR1c0RldGFpbHNCaW4sIH0gZnJvbSBcIi4vaGVhZGVycy5qc1wiO1xuLyoqXG4gKiBUaGUgdmFsdWUgb2YgdGhlIEdycGMtU3RhdHVzIGhlYWRlciBvciB0cmFpbGVyIGluIGNhc2Ugb2Ygc3VjY2Vzcy5cbiAqIFVzZWQgYnkgdGhlIGdSUEMgYW5kIGdSUEMtd2ViIHByb3RvY29scy5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGNvbnN0IGdycGNTdGF0dXNPayA9IFwiMFwiO1xuLyoqXG4gKiBTZXRzIHRoZSBmaWVsZHMgXCJncnBjLXN0YXR1c1wiIGFuZCBcImdycGMtbWVzc2FnZVwiIGluIHRoZSBnaXZlblxuICogSGVhZGVycyBvYmplY3QuXG4gKiBJZiBhbiBlcnJvciBpcyBnaXZlbiBhbmQgY29udGFpbnMgZXJyb3IgZGV0YWlscywgdGhlIGZ1bmN0aW9uXG4gKiB3aWxsIGFsc28gc2V0IHRoZSBmaWVsZCBcImdycGMtc3RhdHVzLWRldGFpbHMtYmluXCIgd2l0aCBhbiBlbmNvZGVkXG4gKiBnb29nbGUucnBjLlN0YXR1cyBtZXNzYWdlIGluY2x1ZGluZyB0aGUgZXJyb3IgZGV0YWlscy5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNldFRyYWlsZXJTdGF0dXModGFyZ2V0LCBlcnJvcikge1xuICAgIGlmIChlcnJvcikge1xuICAgICAgICB0YXJnZXQuc2V0KGhlYWRlckdycGNTdGF0dXMsIGVycm9yLmNvZGUudG9TdHJpbmcoMTApKTtcbiAgICAgICAgdGFyZ2V0LnNldChoZWFkZXJHcnBjTWVzc2FnZSwgZW5jb2RlVVJJQ29tcG9uZW50KGVycm9yLnJhd01lc3NhZ2UpKTtcbiAgICAgICAgaWYgKGVycm9yLmRldGFpbHMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgY29uc3Qgc3RhdHVzID0gbmV3IFN0YXR1cyh7XG4gICAgICAgICAgICAgICAgY29kZTogZXJyb3IuY29kZSxcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBlcnJvci5yYXdNZXNzYWdlLFxuICAgICAgICAgICAgICAgIGRldGFpbHM6IGVycm9yLmRldGFpbHMubWFwKCh2YWx1ZSkgPT4gXCJnZXRUeXBlXCIgaW4gdmFsdWVcbiAgICAgICAgICAgICAgICAgICAgPyBBbnkucGFjayh2YWx1ZSlcbiAgICAgICAgICAgICAgICAgICAgOiBuZXcgQW55KHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGVVcmw6IGB0eXBlLmdvb2dsZWFwaXMuY29tLyR7dmFsdWUudHlwZX1gLFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHZhbHVlLnZhbHVlLFxuICAgICAgICAgICAgICAgICAgICB9KSksXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRhcmdldC5zZXQoaGVhZGVyU3RhdHVzRGV0YWlsc0JpbiwgZW5jb2RlQmluYXJ5SGVhZGVyKHN0YXR1cykpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB0YXJnZXQuc2V0KGhlYWRlckdycGNTdGF0dXMsIGdycGNTdGF0dXNPay50b1N0cmluZygpKTtcbiAgICB9XG4gICAgcmV0dXJuIHRhcmdldDtcbn1cbi8qKlxuICogRmluZCBhbiBlcnJvciBzdGF0dXMgaW4gdGhlIGdpdmVuIEhlYWRlcnMgb2JqZWN0LCB3aGljaCBjYW4gYmUgZWl0aGVyXG4gKiBhIHRyYWlsZXIsIG9yIGEgaGVhZGVyIChhcyBhbGxvd2VkIGZvciBzby1jYWxsZWQgdHJhaWxlcnMtb25seSByZXNwb25zZXMpLlxuICogVGhlIGZpZWxkIFwiZ3JwYy1zdGF0dXMtZGV0YWlscy1iaW5cIiBpcyBpbnNwZWN0ZWQsIGFuZCBpZiBub3QgcHJlc2VudCxcbiAqIHRoZSBmaWVsZHMgXCJncnBjLXN0YXR1c1wiIGFuZCBcImdycGMtbWVzc2FnZVwiIGFyZSB1c2VkLlxuICogUmV0dXJucyBhbiBlcnJvciBvbmx5IGlmIHRoZSBnUlBDIHN0YXR1cyBjb2RlIGlzID4gMC5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZpbmRUcmFpbGVyRXJyb3IoaGVhZGVyT3JUcmFpbGVyKSB7XG4gICAgLy8gVE9ET1xuICAgIC8vIGxldCBjb2RlOiBDb2RlO1xuICAgIC8vIGxldCBtZXNzYWdlOiBzdHJpbmcgPSBcIlwiO1xuICAgIHZhciBfYTtcbiAgICAvLyBQcmVmZXIgdGhlIHByb3RvYnVmLWVuY29kZWQgZGF0YSB0byB0aGUgZ3JwYy1zdGF0dXMgaGVhZGVyLlxuICAgIGNvbnN0IHN0YXR1c0J5dGVzID0gaGVhZGVyT3JUcmFpbGVyLmdldChoZWFkZXJTdGF0dXNEZXRhaWxzQmluKTtcbiAgICBpZiAoc3RhdHVzQnl0ZXMgIT0gbnVsbCkge1xuICAgICAgICBjb25zdCBzdGF0dXMgPSBkZWNvZGVCaW5hcnlIZWFkZXIoc3RhdHVzQnl0ZXMsIFN0YXR1cyk7XG4gICAgICAgIGlmIChzdGF0dXMuY29kZSA9PSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGVycm9yID0gbmV3IENvbm5lY3RFcnJvcihzdGF0dXMubWVzc2FnZSwgc3RhdHVzLmNvZGUsIGhlYWRlck9yVHJhaWxlcik7XG4gICAgICAgIGVycm9yLmRldGFpbHMgPSBzdGF0dXMuZGV0YWlscy5tYXAoKGFueSkgPT4gKHtcbiAgICAgICAgICAgIHR5cGU6IGFueS50eXBlVXJsLnN1YnN0cmluZyhhbnkudHlwZVVybC5sYXN0SW5kZXhPZihcIi9cIikgKyAxKSxcbiAgICAgICAgICAgIHZhbHVlOiBhbnkudmFsdWUsXG4gICAgICAgIH0pKTtcbiAgICAgICAgcmV0dXJuIGVycm9yO1xuICAgIH1cbiAgICBjb25zdCBncnBjU3RhdHVzID0gaGVhZGVyT3JUcmFpbGVyLmdldChoZWFkZXJHcnBjU3RhdHVzKTtcbiAgICBpZiAoZ3JwY1N0YXR1cyAhPSBudWxsKSB7XG4gICAgICAgIGlmIChncnBjU3RhdHVzID09PSBncnBjU3RhdHVzT2spIHtcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgY29kZSA9IHBhcnNlSW50KGdycGNTdGF0dXMsIDEwKTtcbiAgICAgICAgaWYgKGNvZGUgaW4gQ29kZSkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBDb25uZWN0RXJyb3IoZGVjb2RlVVJJQ29tcG9uZW50KChfYSA9IGhlYWRlck9yVHJhaWxlci5nZXQoaGVhZGVyR3JwY01lc3NhZ2UpKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBcIlwiKSwgY29kZSwgaGVhZGVyT3JUcmFpbGVyKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3IENvbm5lY3RFcnJvcihgaW52YWxpZCBncnBjLXN0YXR1czogJHtncnBjU3RhdHVzfWAsIENvZGUuSW50ZXJuYWwsIGhlYWRlck9yVHJhaWxlcik7XG4gICAgfVxuICAgIHJldHVybiB1bmRlZmluZWQ7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/trailer-status.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/async-iterable.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol/async-iterable.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAsyncIterable: () => (/* binding */ createAsyncIterable),\n/* harmony export */   createWritableIterable: () => (/* binding */ createWritableIterable),\n/* harmony export */   makeIterableAbortable: () => (/* binding */ makeIterableAbortable),\n/* harmony export */   pipe: () => (/* binding */ pipe),\n/* harmony export */   pipeTo: () => (/* binding */ pipeTo),\n/* harmony export */   readAllBytes: () => (/* binding */ readAllBytes),\n/* harmony export */   sinkAll: () => (/* binding */ sinkAll),\n/* harmony export */   sinkAllBytes: () => (/* binding */ sinkAllBytes),\n/* harmony export */   transformAppend: () => (/* binding */ transformAppend),\n/* harmony export */   transformCatch: () => (/* binding */ transformCatch),\n/* harmony export */   transformCatchFinally: () => (/* binding */ transformCatchFinally),\n/* harmony export */   transformCompressEnvelope: () => (/* binding */ transformCompressEnvelope),\n/* harmony export */   transformDecompressEnvelope: () => (/* binding */ transformDecompressEnvelope),\n/* harmony export */   transformJoinEnvelopes: () => (/* binding */ transformJoinEnvelopes),\n/* harmony export */   transformParseEnvelope: () => (/* binding */ transformParseEnvelope),\n/* harmony export */   transformPrepend: () => (/* binding */ transformPrepend),\n/* harmony export */   transformReadAllBytes: () => (/* binding */ transformReadAllBytes),\n/* harmony export */   transformSerializeEnvelope: () => (/* binding */ transformSerializeEnvelope),\n/* harmony export */   transformSplitEnvelope: () => (/* binding */ transformSplitEnvelope),\n/* harmony export */   untilFirst: () => (/* binding */ untilFirst)\n/* harmony export */ });\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../code.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../connect-error.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _envelope_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./envelope.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/envelope.js\");\n/* harmony import */ var _limit_io_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./limit-io.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/limit-io.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __asyncValues = (undefined && undefined.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar __await = (undefined && undefined.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (undefined && undefined.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nvar __asyncDelegator = (undefined && undefined.__asyncDelegator) || function (o) {\n    var i, p;\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n};\n\n\n\n\nfunction pipeTo(source, ...rest) {\n    const [transforms, sink, opt] = pickTransformsAndSink(rest);\n    let iterable = source;\n    let abortable;\n    if ((opt === null || opt === void 0 ? void 0 : opt.propagateDownStreamError) === true) {\n        iterable = abortable = makeIterableAbortable(iterable);\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    iterable = pipe(iterable, ...transforms, { propagateDownStreamError: false });\n    return sink(iterable).catch((reason) => {\n        if (abortable) {\n            return abortable.abort(reason).then(() => Promise.reject(reason));\n        }\n        return Promise.reject(reason);\n    });\n}\n// pick transforms, the sink, and options from the pipeTo() rest parameter\nfunction pickTransformsAndSink(rest) {\n    let opt;\n    if (typeof rest[rest.length - 1] != \"function\") {\n        opt = rest.pop();\n    }\n    const sink = rest.pop();\n    return [rest, sink, opt];\n}\n/**\n * Creates an AsyncIterableSink that concatenates all elements from the input.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction sinkAll() {\n    return async function (iterable) {\n        var _a, e_1, _b, _c;\n        const all = [];\n        try {\n            for (var _d = true, iterable_1 = __asyncValues(iterable), iterable_1_1; iterable_1_1 = await iterable_1.next(), _a = iterable_1_1.done, !_a; _d = true) {\n                _c = iterable_1_1.value;\n                _d = false;\n                const chunk = _c;\n                all.push(chunk);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (!_d && !_a && (_b = iterable_1.return)) await _b.call(iterable_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return all;\n    };\n}\n/**\n * Creates an AsyncIterableSink that concatenates all chunks from the input into\n * a single Uint8Array.\n *\n * The iterable raises an error if the more than readMaxBytes are read.\n *\n * An optional length hint can be provided to optimize allocation and validation.\n * If more or less bytes are present in the source that the length hint indicates,\n * and error is raised.\n * If the length hint is larger than readMaxBytes, an error is raised.\n * If the length hint is not a positive integer, it is ignored.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction sinkAllBytes(readMaxBytes, lengthHint) {\n    return async function (iterable) {\n        return await readAllBytes(iterable, readMaxBytes, lengthHint);\n    };\n}\nfunction pipe(source, ...rest) {\n    return __asyncGenerator(this, arguments, function* pipe_1() {\n        var _a;\n        const [transforms, opt] = pickTransforms(rest);\n        let abortable;\n        const sourceIt = source[Symbol.asyncIterator]();\n        const cachedSource = {\n            [Symbol.asyncIterator]() {\n                return sourceIt;\n            },\n        };\n        let iterable = cachedSource;\n        if ((opt === null || opt === void 0 ? void 0 : opt.propagateDownStreamError) === true) {\n            iterable = abortable = makeIterableAbortable(iterable);\n        }\n        for (const t of transforms) {\n            iterable = t(iterable);\n        }\n        const it = iterable[Symbol.asyncIterator]();\n        try {\n            for (;;) {\n                const r = yield __await(it.next());\n                if (r.done === true) {\n                    break;\n                }\n                if (!abortable) {\n                    yield yield __await(r.value);\n                    continue;\n                }\n                try {\n                    yield yield __await(r.value);\n                }\n                catch (e) {\n                    yield __await(abortable.abort(e)); // propagate downstream error to the source\n                    throw e;\n                }\n            }\n        }\n        finally {\n            if ((opt === null || opt === void 0 ? void 0 : opt.propagateDownStreamError) === true) {\n                // Call return on the source iterable to indicate\n                // that we will no longer consume it and it should\n                // cleanup any allocated resources.\n                (_a = sourceIt.return) === null || _a === void 0 ? void 0 : _a.call(sourceIt).catch(() => {\n                    // return returns a promise, which we don't care about.\n                    //\n                    // Uncaught promises are thrown at sometime/somewhere by the event loop,\n                    // this is to ensure error is caught and ignored.\n                });\n            }\n        }\n    });\n}\nfunction pickTransforms(rest) {\n    let opt;\n    if (typeof rest[rest.length - 1] != \"function\") {\n        opt = rest.pop();\n    }\n    return [rest, opt];\n}\n/**\n * Creates an AsyncIterableTransform that catches any error from the input, and\n * passes it to the given catchError function.\n *\n * The catchError function may return a final value.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction transformCatch(catchError) {\n    return function (iterable) {\n        return __asyncGenerator(this, arguments, function* () {\n            // we deliberate avoid a for-await loop because we only want to catch upstream\n            // errors, not downstream errors (yield).\n            const it = iterable[Symbol.asyncIterator]();\n            for (;;) {\n                let r;\n                try {\n                    r = yield __await(it.next());\n                }\n                catch (e) {\n                    const caught = yield __await(catchError(e));\n                    if (caught !== undefined) {\n                        yield yield __await(caught);\n                    }\n                    break;\n                }\n                if (r.done === true) {\n                    break;\n                }\n                yield yield __await(r.value);\n            }\n        });\n    };\n}\n/**\n * Creates an AsyncIterableTransform that catches any error from the input, and\n * passes it to the given function. Unlike transformCatch(), the given function\n * is also called when no error is raised.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction transformCatchFinally(catchFinally) {\n    return function (iterable) {\n        return __asyncGenerator(this, arguments, function* () {\n            // we deliberate avoid a for-await loop because we only want to catch upstream\n            // errors, not downstream errors (yield).\n            let err;\n            const it = iterable[Symbol.asyncIterator]();\n            for (;;) {\n                let r;\n                try {\n                    r = yield __await(it.next());\n                }\n                catch (e) {\n                    err = e;\n                    break;\n                }\n                if (r.done === true) {\n                    break;\n                }\n                yield yield __await(r.value);\n            }\n            const caught = yield __await(catchFinally(err));\n            if (caught !== undefined) {\n                yield yield __await(caught);\n            }\n        });\n    };\n}\n/**\n * Creates an AsyncIterableTransform that appends a value.\n *\n * The element to append is provided by a function. If the function returns\n * undefined, no element is appended.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction transformAppend(provide) {\n    return function (iterable) {\n        return __asyncGenerator(this, arguments, function* () {\n            var _a, e_2, _b, _c;\n            try {\n                for (var _d = true, iterable_2 = __asyncValues(iterable), iterable_2_1; iterable_2_1 = yield __await(iterable_2.next()), _a = iterable_2_1.done, !_a; _d = true) {\n                    _c = iterable_2_1.value;\n                    _d = false;\n                    const chunk = _c;\n                    yield yield __await(chunk);\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = iterable_2.return)) yield __await(_b.call(iterable_2));\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            const append = yield __await(provide());\n            if (append !== undefined) {\n                yield yield __await(append);\n            }\n        });\n    };\n}\n/**\n * Creates an AsyncIterableTransform that prepends an element.\n *\n * The element to prepend is provided by a function. If the function returns\n * undefined, no element is appended.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction transformPrepend(provide) {\n    return function (iterable) {\n        return __asyncGenerator(this, arguments, function* () {\n            var _a, e_3, _b, _c;\n            const prepend = yield __await(provide());\n            if (prepend !== undefined) {\n                yield yield __await(prepend);\n            }\n            try {\n                for (var _d = true, iterable_3 = __asyncValues(iterable), iterable_3_1; iterable_3_1 = yield __await(iterable_3.next()), _a = iterable_3_1.done, !_a; _d = true) {\n                    _c = iterable_3_1.value;\n                    _d = false;\n                    const chunk = _c;\n                    yield yield __await(chunk);\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = iterable_3.return)) yield __await(_b.call(iterable_3));\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n        });\n    };\n}\n/**\n * Creates an AsyncIterableTransform that reads all bytes from the input, and\n * concatenates them to a single Uint8Array.\n *\n * The iterable raises an error if the more than readMaxBytes are read.\n *\n * An optional length hint can be provided to optimize allocation and validation.\n * If more or less bytes are present in the source that the length hint indicates,\n * and error is raised.\n * If the length hint is larger than readMaxBytes, an error is raised.\n * If the length hint is not a positive integer, it is ignored.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction transformReadAllBytes(readMaxBytes, lengthHint) {\n    return function (iterable) {\n        return __asyncGenerator(this, arguments, function* () {\n            yield yield __await(yield __await(readAllBytes(iterable, readMaxBytes, lengthHint)));\n        });\n    };\n}\nfunction transformSerializeEnvelope(serialization, endStreamFlag, endSerialization) {\n    if (endStreamFlag === undefined || endSerialization === undefined) {\n        return function (iterable) {\n            return __asyncGenerator(this, arguments, function* () {\n                var _a, e_4, _b, _c;\n                try {\n                    for (var _d = true, iterable_4 = __asyncValues(iterable), iterable_4_1; iterable_4_1 = yield __await(iterable_4.next()), _a = iterable_4_1.done, !_a; _d = true) {\n                        _c = iterable_4_1.value;\n                        _d = false;\n                        const chunk = _c;\n                        const data = serialization.serialize(chunk);\n                        yield yield __await({ flags: 0, data });\n                    }\n                }\n                catch (e_4_1) { e_4 = { error: e_4_1 }; }\n                finally {\n                    try {\n                        if (!_d && !_a && (_b = iterable_4.return)) yield __await(_b.call(iterable_4));\n                    }\n                    finally { if (e_4) throw e_4.error; }\n                }\n            });\n        };\n    }\n    return function (iterable) {\n        return __asyncGenerator(this, arguments, function* () {\n            var _a, e_5, _b, _c;\n            try {\n                for (var _d = true, iterable_5 = __asyncValues(iterable), iterable_5_1; iterable_5_1 = yield __await(iterable_5.next()), _a = iterable_5_1.done, !_a; _d = true) {\n                    _c = iterable_5_1.value;\n                    _d = false;\n                    const chunk = _c;\n                    let data;\n                    let flags = 0;\n                    if (chunk.end) {\n                        flags = flags | endStreamFlag;\n                        data = endSerialization.serialize(chunk.value);\n                    }\n                    else {\n                        data = serialization.serialize(chunk.value);\n                    }\n                    yield yield __await({ flags, data });\n                }\n            }\n            catch (e_5_1) { e_5 = { error: e_5_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = iterable_5.return)) yield __await(_b.call(iterable_5));\n                }\n                finally { if (e_5) throw e_5.error; }\n            }\n        });\n    };\n}\nfunction transformParseEnvelope(serialization, endStreamFlag, endSerialization) {\n    // code path always yields ParsedEnvelopedMessage<T, E>\n    if (endSerialization && endStreamFlag !== undefined) {\n        return function (iterable) {\n            return __asyncGenerator(this, arguments, function* () {\n                var _a, e_6, _b, _c;\n                try {\n                    for (var _d = true, iterable_6 = __asyncValues(iterable), iterable_6_1; iterable_6_1 = yield __await(iterable_6.next()), _a = iterable_6_1.done, !_a; _d = true) {\n                        _c = iterable_6_1.value;\n                        _d = false;\n                        const { flags, data } = _c;\n                        if ((flags & endStreamFlag) === endStreamFlag) {\n                            yield yield __await({ value: endSerialization.parse(data), end: true });\n                        }\n                        else {\n                            yield yield __await({ value: serialization.parse(data), end: false });\n                        }\n                    }\n                }\n                catch (e_6_1) { e_6 = { error: e_6_1 }; }\n                finally {\n                    try {\n                        if (!_d && !_a && (_b = iterable_6.return)) yield __await(_b.call(iterable_6));\n                    }\n                    finally { if (e_6) throw e_6.error; }\n                }\n            });\n        };\n    }\n    // code path always yields T\n    return function (iterable) {\n        return __asyncGenerator(this, arguments, function* () {\n            var _a, e_7, _b, _c;\n            try {\n                for (var _d = true, iterable_7 = __asyncValues(iterable), iterable_7_1; iterable_7_1 = yield __await(iterable_7.next()), _a = iterable_7_1.done, !_a; _d = true) {\n                    _c = iterable_7_1.value;\n                    _d = false;\n                    const { flags, data } = _c;\n                    if (endStreamFlag !== undefined &&\n                        (flags & endStreamFlag) === endStreamFlag) {\n                        if (endSerialization === null) {\n                            throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(\"unexpected end flag\", _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.InvalidArgument);\n                        }\n                        // skips end-of-stream envelope\n                        continue;\n                    }\n                    yield yield __await(serialization.parse(data));\n                }\n            }\n            catch (e_7_1) { e_7 = { error: e_7_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = iterable_7.return)) yield __await(_b.call(iterable_7));\n                }\n                finally { if (e_7) throw e_7.error; }\n            }\n        });\n    };\n}\n/**\n * Creates an AsyncIterableTransform that takes enveloped messages as a source,\n * and compresses them if they are larger than compressMinBytes.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction transformCompressEnvelope(compression, compressMinBytes) {\n    return function (iterable) {\n        return __asyncGenerator(this, arguments, function* () {\n            var _a, e_8, _b, _c;\n            try {\n                for (var _d = true, iterable_8 = __asyncValues(iterable), iterable_8_1; iterable_8_1 = yield __await(iterable_8.next()), _a = iterable_8_1.done, !_a; _d = true) {\n                    _c = iterable_8_1.value;\n                    _d = false;\n                    const env = _c;\n                    yield yield __await(yield __await((0,_envelope_js__WEBPACK_IMPORTED_MODULE_2__.envelopeCompress)(env, compression, compressMinBytes)));\n                }\n            }\n            catch (e_8_1) { e_8 = { error: e_8_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = iterable_8.return)) yield __await(_b.call(iterable_8));\n                }\n                finally { if (e_8) throw e_8.error; }\n            }\n        });\n    };\n}\n/**\n * Creates an AsyncIterableTransform that takes enveloped messages as a source,\n * and decompresses them using the given compression.\n *\n * The iterable raises an error if the decompressed payload of an enveloped\n * message is larger than readMaxBytes, or if no compression is provided.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction transformDecompressEnvelope(compression, readMaxBytes) {\n    return function (iterable) {\n        return __asyncGenerator(this, arguments, function* () {\n            var _a, e_9, _b, _c;\n            try {\n                for (var _d = true, iterable_9 = __asyncValues(iterable), iterable_9_1; iterable_9_1 = yield __await(iterable_9.next()), _a = iterable_9_1.done, !_a; _d = true) {\n                    _c = iterable_9_1.value;\n                    _d = false;\n                    const env = _c;\n                    yield yield __await(yield __await((0,_envelope_js__WEBPACK_IMPORTED_MODULE_2__.envelopeDecompress)(env, compression, readMaxBytes)));\n                }\n            }\n            catch (e_9_1) { e_9 = { error: e_9_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = iterable_9.return)) yield __await(_b.call(iterable_9));\n                }\n                finally { if (e_9) throw e_9.error; }\n            }\n        });\n    };\n}\n/**\n * Create an AsyncIterableTransform that takes enveloped messages as a source,\n * and joins them into a stream of raw bytes.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction transformJoinEnvelopes() {\n    return function (iterable) {\n        return __asyncGenerator(this, arguments, function* () {\n            var _a, e_10, _b, _c;\n            try {\n                for (var _d = true, iterable_10 = __asyncValues(iterable), iterable_10_1; iterable_10_1 = yield __await(iterable_10.next()), _a = iterable_10_1.done, !_a; _d = true) {\n                    _c = iterable_10_1.value;\n                    _d = false;\n                    const { flags, data } = _c;\n                    yield yield __await((0,_envelope_js__WEBPACK_IMPORTED_MODULE_2__.encodeEnvelope)(flags, data));\n                }\n            }\n            catch (e_10_1) { e_10 = { error: e_10_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = iterable_10.return)) yield __await(_b.call(iterable_10));\n                }\n                finally { if (e_10) throw e_10.error; }\n            }\n        });\n    };\n}\n/**\n * Create an AsyncIterableTransform that takes raw bytes as a source, and splits\n * them into enveloped messages.\n *\n * The iterable raises an error\n * - if the payload of an enveloped message is larger than readMaxBytes,\n * - if the stream ended before an enveloped message fully arrived,\n * - or if the stream ended with extraneous data.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction transformSplitEnvelope(readMaxBytes) {\n    // append chunk to buffer, returning updated buffer\n    function append(buffer, chunk) {\n        const n = new Uint8Array(buffer.byteLength + chunk.byteLength);\n        n.set(buffer);\n        n.set(chunk, buffer.length);\n        return n;\n    }\n    // tuple 0: envelope, or undefined if incomplete\n    // tuple 1: remainder of the buffer\n    function shiftEnvelope(buffer, header) {\n        if (buffer.byteLength < 5 + header.length) {\n            return [undefined, buffer];\n        }\n        return [\n            { flags: header.flags, data: buffer.subarray(5, 5 + header.length) },\n            buffer.subarray(5 + header.length),\n        ];\n    }\n    // undefined: header is incomplete\n    function peekHeader(buffer) {\n        if (buffer.byteLength < 5) {\n            return undefined;\n        }\n        const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n        const length = view.getUint32(1); // 4 bytes message length\n        const flags = view.getUint8(0); // first byte is flags\n        return { length, flags };\n    }\n    return function (iterable) {\n        return __asyncGenerator(this, arguments, function* () {\n            var _a, e_11, _b, _c;\n            let buffer = new Uint8Array(0);\n            try {\n                for (var _d = true, iterable_11 = __asyncValues(iterable), iterable_11_1; iterable_11_1 = yield __await(iterable_11.next()), _a = iterable_11_1.done, !_a; _d = true) {\n                    _c = iterable_11_1.value;\n                    _d = false;\n                    const chunk = _c;\n                    buffer = append(buffer, chunk);\n                    for (;;) {\n                        const header = peekHeader(buffer);\n                        if (!header) {\n                            break;\n                        }\n                        (0,_limit_io_js__WEBPACK_IMPORTED_MODULE_3__.assertReadMaxBytes)(readMaxBytes, header.length, true);\n                        let env;\n                        [env, buffer] = shiftEnvelope(buffer, header);\n                        if (!env) {\n                            break;\n                        }\n                        yield yield __await(env);\n                    }\n                }\n            }\n            catch (e_11_1) { e_11 = { error: e_11_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = iterable_11.return)) yield __await(_b.call(iterable_11));\n                }\n                finally { if (e_11) throw e_11.error; }\n            }\n            if (buffer.byteLength > 0) {\n                const header = peekHeader(buffer);\n                let message = \"protocol error: incomplete envelope\";\n                if (header) {\n                    message = `protocol error: promised ${header.length} bytes in enveloped message, got ${buffer.byteLength - 5} bytes`;\n                }\n                throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(message, _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.InvalidArgument);\n            }\n        });\n    };\n}\n/**\n * Reads all bytes from the source, and concatenates them to a single Uint8Array.\n *\n * Raises an error if:\n * - more than readMaxBytes are read\n * - lengthHint is a positive integer, but larger than readMaxBytes\n * - lengthHint is a positive integer, and the source contains more or less bytes\n *   than promised\n *\n * @private Internal code, does not follow semantic versioning.\n */\nasync function readAllBytes(iterable, readMaxBytes, lengthHint) {\n    var _a, e_12, _b, _c, _d, e_13, _e, _f;\n    const [ok, hint] = parseLengthHint(lengthHint);\n    if (ok) {\n        if (hint > readMaxBytes) {\n            (0,_limit_io_js__WEBPACK_IMPORTED_MODULE_3__.assertReadMaxBytes)(readMaxBytes, hint, true);\n        }\n        const buffer = new Uint8Array(hint);\n        let offset = 0;\n        try {\n            for (var _g = true, iterable_12 = __asyncValues(iterable), iterable_12_1; iterable_12_1 = await iterable_12.next(), _a = iterable_12_1.done, !_a; _g = true) {\n                _c = iterable_12_1.value;\n                _g = false;\n                const chunk = _c;\n                if (offset + chunk.byteLength > hint) {\n                    throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(`protocol error: promised ${hint} bytes, received ${offset + chunk.byteLength}`, _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.InvalidArgument);\n                }\n                buffer.set(chunk, offset);\n                offset += chunk.byteLength;\n            }\n        }\n        catch (e_12_1) { e_12 = { error: e_12_1 }; }\n        finally {\n            try {\n                if (!_g && !_a && (_b = iterable_12.return)) await _b.call(iterable_12);\n            }\n            finally { if (e_12) throw e_12.error; }\n        }\n        if (offset < hint) {\n            throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(`protocol error: promised ${hint} bytes, received ${offset}`, _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.InvalidArgument);\n        }\n        return buffer;\n    }\n    const chunks = [];\n    let count = 0;\n    try {\n        for (var _h = true, iterable_13 = __asyncValues(iterable), iterable_13_1; iterable_13_1 = await iterable_13.next(), _d = iterable_13_1.done, !_d; _h = true) {\n            _f = iterable_13_1.value;\n            _h = false;\n            const chunk = _f;\n            count += chunk.byteLength;\n            (0,_limit_io_js__WEBPACK_IMPORTED_MODULE_3__.assertReadMaxBytes)(readMaxBytes, count);\n            chunks.push(chunk);\n        }\n    }\n    catch (e_13_1) { e_13 = { error: e_13_1 }; }\n    finally {\n        try {\n            if (!_h && !_d && (_e = iterable_13.return)) await _e.call(iterable_13);\n        }\n        finally { if (e_13) throw e_13.error; }\n    }\n    const all = new Uint8Array(count);\n    let offset = 0;\n    for (let chunk = chunks.shift(); chunk; chunk = chunks.shift()) {\n        all.set(chunk, offset);\n        offset += chunk.byteLength;\n    }\n    return all;\n}\n// parse the lengthHint argument of readAllBytes()\nfunction parseLengthHint(lengthHint) {\n    if (lengthHint === undefined || lengthHint === null) {\n        return [false, 0];\n    }\n    const n = typeof lengthHint == \"string\" ? parseInt(lengthHint, 10) : lengthHint;\n    if (!Number.isSafeInteger(n) || n < 0) {\n        return [false, n];\n    }\n    return [true, n];\n}\n/**\n * Wait for the first element of an iterable without modifying the iterable.\n * This consumes the first element, but pushes it back on the stack.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nasync function untilFirst(iterable) {\n    const it = iterable[Symbol.asyncIterator]();\n    let first = await it.next();\n    return {\n        [Symbol.asyncIterator]() {\n            const w = {\n                async next() {\n                    if (first !== null) {\n                        const n = first;\n                        first = null;\n                        return n;\n                    }\n                    return await it.next();\n                },\n            };\n            if (it.throw !== undefined) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- can't handle mutated object sensibly\n                w.throw = (e) => it.throw(e);\n            }\n            if (it.return !== undefined) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion,@typescript-eslint/no-explicit-any -- can't handle mutated object sensibly\n                w.return = (value) => it.return(value);\n            }\n            return w;\n        },\n    };\n}\n/**\n * Wrap the given iterable and return an iterable with an abort() method.\n *\n * This function exists purely for convenience. Where one would typically have\n * to access the iterator directly, advance through all elements, and call\n * AsyncIterator.throw() to notify the upstream iterable, this function allows\n * to use convenient for-await loops and still notify the upstream iterable:\n *\n * ```ts\n * const abortable = makeIterableAbortable(iterable);\n * for await (const ele of abortable) {\n *   await abortable.abort(\"ERR\");\n * }\n * ```\n * There are a couple of limitations of this function:\n * - the given async iterable must implement throw\n * - the async iterable cannot be re-use\n * - if source catches errors and yields values for them, they are ignored, and\n *   the source may still dangle\n *\n * There are four possible ways an async function* can handle yield errors:\n * 1. don't catch errors at all - Abortable.abort() will resolve \"rethrown\"\n * 2. catch errors and rethrow - Abortable.abort() will resolve \"rethrown\"\n * 3. catch errors and return - Abortable.abort() will resolve \"completed\"\n * 4. catch errors and yield a value - Abortable.abort() will resolve \"caught\"\n *\n * Note that catching errors and yielding a value is problematic, and it should\n * be documented that this may leave the source in a dangling state.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction makeIterableAbortable(iterable) {\n    const innerCandidate = iterable[Symbol.asyncIterator]();\n    if (innerCandidate.throw === undefined) {\n        throw new Error(\"AsyncIterable does not implement throw\");\n    }\n    const inner = innerCandidate;\n    let aborted;\n    let resultPromise;\n    let it = {\n        next() {\n            resultPromise = inner.next().finally(() => {\n                resultPromise = undefined;\n            });\n            return resultPromise;\n        },\n        throw(e) {\n            return inner.throw(e);\n        },\n    };\n    if (innerCandidate.return !== undefined) {\n        it = Object.assign(Object.assign({}, it), { return(value) {\n                return inner.return(value);\n            } });\n    }\n    let used = false;\n    return {\n        abort(reason) {\n            if (aborted) {\n                return aborted.state;\n            }\n            const f = () => {\n                return inner.throw(reason).then((r) => (r.done === true ? \"completed\" : \"caught\"), () => \"rethrown\");\n            };\n            if (resultPromise) {\n                aborted = { reason, state: resultPromise.then(f, f) };\n                return aborted.state;\n            }\n            aborted = { reason, state: f() };\n            return aborted.state;\n        },\n        [Symbol.asyncIterator]() {\n            if (used) {\n                throw new Error(\"AsyncIterable cannot be re-used\");\n            }\n            used = true;\n            return it;\n        },\n    };\n}\n/**\n * Create a new WritableIterable.\n */\nfunction createWritableIterable() {\n    // We start with two queues to capture the read and write attempts.\n    //\n    // The writes and reads each check of their counterpart is\n    // already available and either interact/add themselves to the queue.\n    const readQueue = [];\n    const writeQueue = [];\n    let err = undefined;\n    let nextResolve;\n    let nextReject;\n    let nextPromise = new Promise((resolve, reject) => {\n        nextResolve = resolve;\n        nextReject = reject;\n    });\n    let closed = false;\n    // drain the readQueue in case of error/writer is closed by sending a\n    // done result.\n    function drain() {\n        for (const next of readQueue.splice(0, readQueue.length)) {\n            next({ done: true, value: undefined });\n        }\n    }\n    return {\n        close() {\n            closed = true;\n            drain();\n        },\n        async write(payload) {\n            if (closed) {\n                throw err !== null && err !== void 0 ? err : new Error(\"cannot write, WritableIterable already closed\");\n            }\n            const read = readQueue.shift();\n            if (read === undefined) {\n                // We didn't find a pending read so we add the payload to the write queue.\n                writeQueue.push(payload);\n            }\n            else {\n                // We found a pending read so we respond with the payload.\n                read({ done: false, value: payload });\n                if (readQueue.length > 0) {\n                    // If there are more in the read queue we can mark the write as complete.\n                    // as the error reporting is not guaranteed to be sequential and therefore cannot\n                    // to linked to a specific write.\n                    return;\n                }\n            }\n            // We await the next call for as many times as there are items in the queue + 1\n            //\n            // If there are no items in the write queue that means write happened and we just have\n            // to wait for one more call likewise if we are the nth write in the queue we\n            // have to wait for n writes to complete and one more.\n            const limit = writeQueue.length + 1;\n            for (let i = 0; i < limit; i++) {\n                await nextPromise;\n            }\n        },\n        [Symbol.asyncIterator]() {\n            return {\n                next() {\n                    // Resolve the nextPromise to indicate\n                    // pending writes that a read attempt has been made\n                    // after their write.\n                    //\n                    // We also need to reset the promise for future writes.\n                    nextResolve();\n                    nextPromise = new Promise((resolve, reject) => {\n                        nextResolve = resolve;\n                        nextReject = reject;\n                    });\n                    const write = writeQueue.shift();\n                    if (write !== undefined) {\n                        // We found a pending write so response with the payload.\n                        return Promise.resolve({ done: false, value: write });\n                    }\n                    if (closed) {\n                        return Promise.resolve({ done: true, value: undefined });\n                    }\n                    // We return a promise immediately that is either resolved/rejected\n                    // as writes happen.\n                    let readResolve;\n                    const readPromise = new Promise((resolve) => (readResolve = resolve));\n                    readQueue.push(readResolve); // eslint-disable-line @typescript-eslint/no-non-null-assertion\n                    return readPromise;\n                },\n                throw(throwErr) {\n                    err = throwErr;\n                    closed = true;\n                    writeQueue.splice(0, writeQueue.length);\n                    nextPromise.catch(() => {\n                        // To make sure that the nextPromise is always resolved.\n                    });\n                    // This will reject all pending writes.\n                    nextReject(err);\n                    drain();\n                    return Promise.resolve({ done: true, value: undefined });\n                },\n                return() {\n                    closed = true;\n                    writeQueue.splice(0, writeQueue.length);\n                    // Resolve once for the write awaiting confirmation.\n                    nextResolve();\n                    // Reject all future writes.\n                    nextPromise = Promise.reject(new Error(\"cannot write, consumer called return\"));\n                    nextPromise.catch(() => {\n                        // To make sure that the nextPromise is always resolved.\n                    });\n                    drain();\n                    return Promise.resolve({ done: true, value: undefined });\n                },\n            };\n        },\n    };\n}\n/**\n * Create an asynchronous iterable from an array.\n *\n * @private Internal code, does not follow semantic versioning.\n */\n// eslint-disable-next-line @typescript-eslint/require-await\nfunction createAsyncIterable(items) {\n    return __asyncGenerator(this, arguments, function* createAsyncIterable_1() {\n        yield __await(yield* __asyncDelegator(__asyncValues(items)));\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/async-iterable.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/compression.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol/compression.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compressedFlag: () => (/* binding */ compressedFlag),\n/* harmony export */   compressionNegotiate: () => (/* binding */ compressionNegotiate)\n/* harmony export */ });\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../connect-error.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../code.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * compressedFlag indicates that the data in a EnvelopedMessage is\n * compressed. It has the same meaning in the gRPC-Web, gRPC-HTTP2,\n * and Connect protocols.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst compressedFlag = 0b00000001;\n/**\n * Validates the request encoding and determines the accepted response encoding.\n *\n * Returns the request and response compression to use. If the client requested\n * an encoding that is not available, the returned object contains an error that\n * must be used for the response.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction compressionNegotiate(available, requested, // e.g. the value of the Grpc-Encoding header\naccepted, // e.g. the value of the Grpc-Accept-Encoding header\nheaderNameAcceptEncoding) {\n    let request = null;\n    let response = null;\n    let error = undefined;\n    if (requested !== null && requested !== \"identity\") {\n        const found = available.find((c) => c.name === requested);\n        if (found) {\n            request = found;\n        }\n        else {\n            // To comply with https://github.com/grpc/grpc/blob/master/doc/compression.md\n            // and the Connect protocol, we return code \"unimplemented\" and specify\n            // acceptable compression(s).\n            const acceptable = available.map((c) => c.name).join(\",\");\n            error = new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(`unknown compression \"${requested}\": supported encodings are ${acceptable}`, _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.Unimplemented, {\n                [headerNameAcceptEncoding]: acceptable,\n            });\n        }\n    }\n    if (accepted === null || accepted === \"\") {\n        // Support asymmetric compression. This logic follows\n        // https://github.com/grpc/grpc/blob/master/doc/compression.md and common\n        // sense.\n        response = request;\n    }\n    else {\n        const acceptNames = accepted.split(\",\").map((n) => n.trim());\n        for (const name of acceptNames) {\n            const found = available.find((c) => c.name === name);\n            if (found) {\n                response = found;\n                break;\n            }\n        }\n    }\n    return { request, response, error };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC9jb21wcmVzc2lvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDbUQ7QUFDakI7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLDJEQUFZLHlCQUF5QixVQUFVLDZCQUE2QixXQUFXLEdBQUcsMENBQUk7QUFDdEg7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGUtY28vZXRob3MtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC9jb21wcmVzc2lvbi5qcz80ODc0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgVGhlIENvbm5lY3QgQXV0aG9yc1xuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5pbXBvcnQgeyBDb25uZWN0RXJyb3IgfSBmcm9tIFwiLi4vY29ubmVjdC1lcnJvci5qc1wiO1xuaW1wb3J0IHsgQ29kZSB9IGZyb20gXCIuLi9jb2RlLmpzXCI7XG4vKipcbiAqIGNvbXByZXNzZWRGbGFnIGluZGljYXRlcyB0aGF0IHRoZSBkYXRhIGluIGEgRW52ZWxvcGVkTWVzc2FnZSBpc1xuICogY29tcHJlc3NlZC4gSXQgaGFzIHRoZSBzYW1lIG1lYW5pbmcgaW4gdGhlIGdSUEMtV2ViLCBnUlBDLUhUVFAyLFxuICogYW5kIENvbm5lY3QgcHJvdG9jb2xzLlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgY29uc3QgY29tcHJlc3NlZEZsYWcgPSAwYjAwMDAwMDAxO1xuLyoqXG4gKiBWYWxpZGF0ZXMgdGhlIHJlcXVlc3QgZW5jb2RpbmcgYW5kIGRldGVybWluZXMgdGhlIGFjY2VwdGVkIHJlc3BvbnNlIGVuY29kaW5nLlxuICpcbiAqIFJldHVybnMgdGhlIHJlcXVlc3QgYW5kIHJlc3BvbnNlIGNvbXByZXNzaW9uIHRvIHVzZS4gSWYgdGhlIGNsaWVudCByZXF1ZXN0ZWRcbiAqIGFuIGVuY29kaW5nIHRoYXQgaXMgbm90IGF2YWlsYWJsZSwgdGhlIHJldHVybmVkIG9iamVjdCBjb250YWlucyBhbiBlcnJvciB0aGF0XG4gKiBtdXN0IGJlIHVzZWQgZm9yIHRoZSByZXNwb25zZS5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvbXByZXNzaW9uTmVnb3RpYXRlKGF2YWlsYWJsZSwgcmVxdWVzdGVkLCAvLyBlLmcuIHRoZSB2YWx1ZSBvZiB0aGUgR3JwYy1FbmNvZGluZyBoZWFkZXJcbmFjY2VwdGVkLCAvLyBlLmcuIHRoZSB2YWx1ZSBvZiB0aGUgR3JwYy1BY2NlcHQtRW5jb2RpbmcgaGVhZGVyXG5oZWFkZXJOYW1lQWNjZXB0RW5jb2RpbmcpIHtcbiAgICBsZXQgcmVxdWVzdCA9IG51bGw7XG4gICAgbGV0IHJlc3BvbnNlID0gbnVsbDtcbiAgICBsZXQgZXJyb3IgPSB1bmRlZmluZWQ7XG4gICAgaWYgKHJlcXVlc3RlZCAhPT0gbnVsbCAmJiByZXF1ZXN0ZWQgIT09IFwiaWRlbnRpdHlcIikge1xuICAgICAgICBjb25zdCBmb3VuZCA9IGF2YWlsYWJsZS5maW5kKChjKSA9PiBjLm5hbWUgPT09IHJlcXVlc3RlZCk7XG4gICAgICAgIGlmIChmb3VuZCkge1xuICAgICAgICAgICAgcmVxdWVzdCA9IGZvdW5kO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgLy8gVG8gY29tcGx5IHdpdGggaHR0cHM6Ly9naXRodWIuY29tL2dycGMvZ3JwYy9ibG9iL21hc3Rlci9kb2MvY29tcHJlc3Npb24ubWRcbiAgICAgICAgICAgIC8vIGFuZCB0aGUgQ29ubmVjdCBwcm90b2NvbCwgd2UgcmV0dXJuIGNvZGUgXCJ1bmltcGxlbWVudGVkXCIgYW5kIHNwZWNpZnlcbiAgICAgICAgICAgIC8vIGFjY2VwdGFibGUgY29tcHJlc3Npb24ocykuXG4gICAgICAgICAgICBjb25zdCBhY2NlcHRhYmxlID0gYXZhaWxhYmxlLm1hcCgoYykgPT4gYy5uYW1lKS5qb2luKFwiLFwiKTtcbiAgICAgICAgICAgIGVycm9yID0gbmV3IENvbm5lY3RFcnJvcihgdW5rbm93biBjb21wcmVzc2lvbiBcIiR7cmVxdWVzdGVkfVwiOiBzdXBwb3J0ZWQgZW5jb2RpbmdzIGFyZSAke2FjY2VwdGFibGV9YCwgQ29kZS5VbmltcGxlbWVudGVkLCB7XG4gICAgICAgICAgICAgICAgW2hlYWRlck5hbWVBY2NlcHRFbmNvZGluZ106IGFjY2VwdGFibGUsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoYWNjZXB0ZWQgPT09IG51bGwgfHwgYWNjZXB0ZWQgPT09IFwiXCIpIHtcbiAgICAgICAgLy8gU3VwcG9ydCBhc3ltbWV0cmljIGNvbXByZXNzaW9uLiBUaGlzIGxvZ2ljIGZvbGxvd3NcbiAgICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2dycGMvZ3JwYy9ibG9iL21hc3Rlci9kb2MvY29tcHJlc3Npb24ubWQgYW5kIGNvbW1vblxuICAgICAgICAvLyBzZW5zZS5cbiAgICAgICAgcmVzcG9uc2UgPSByZXF1ZXN0O1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgY29uc3QgYWNjZXB0TmFtZXMgPSBhY2NlcHRlZC5zcGxpdChcIixcIikubWFwKChuKSA9PiBuLnRyaW0oKSk7XG4gICAgICAgIGZvciAoY29uc3QgbmFtZSBvZiBhY2NlcHROYW1lcykge1xuICAgICAgICAgICAgY29uc3QgZm91bmQgPSBhdmFpbGFibGUuZmluZCgoYykgPT4gYy5uYW1lID09PSBuYW1lKTtcbiAgICAgICAgICAgIGlmIChmb3VuZCkge1xuICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gZm91bmQ7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHsgcmVxdWVzdCwgcmVzcG9uc2UsIGVycm9yIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/compression.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/content-type-matcher.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol/content-type-matcher.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   contentTypeMatcher: () => (/* binding */ contentTypeMatcher)\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nconst contentTypeMatcherCacheSize = 1024;\n/**\n * Create a function that returns true if the given mime type is supported.\n * A mime type is supported when one of the regular expressions match.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction contentTypeMatcher(...supported) {\n    const cache = new Map();\n    const source = supported.reduce((previousValue, currentValue) => previousValue.concat(\"supported\" in currentValue ? currentValue.supported : currentValue), []);\n    function match(contentType) {\n        if (contentType === null || contentType.length == 0) {\n            return false;\n        }\n        const cached = cache.get(contentType);\n        if (cached !== undefined) {\n            return cached;\n        }\n        const ok = source.some((re) => re.test(contentType));\n        if (cache.size < contentTypeMatcherCacheSize) {\n            cache.set(contentType, ok);\n        }\n        return ok;\n    }\n    match.supported = source;\n    return match;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC9jb250ZW50LXR5cGUtbWF0Y2hlci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZS1jby9ldGhvcy1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AY29ubmVjdHJwYy9jb25uZWN0L2Rpc3QvZXNtL3Byb3RvY29sL2NvbnRlbnQtdHlwZS1tYXRjaGVyLmpzP2MwNGIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmNvbnN0IGNvbnRlbnRUeXBlTWF0Y2hlckNhY2hlU2l6ZSA9IDEwMjQ7XG4vKipcbiAqIENyZWF0ZSBhIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyB0cnVlIGlmIHRoZSBnaXZlbiBtaW1lIHR5cGUgaXMgc3VwcG9ydGVkLlxuICogQSBtaW1lIHR5cGUgaXMgc3VwcG9ydGVkIHdoZW4gb25lIG9mIHRoZSByZWd1bGFyIGV4cHJlc3Npb25zIG1hdGNoLlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY29udGVudFR5cGVNYXRjaGVyKC4uLnN1cHBvcnRlZCkge1xuICAgIGNvbnN0IGNhY2hlID0gbmV3IE1hcCgpO1xuICAgIGNvbnN0IHNvdXJjZSA9IHN1cHBvcnRlZC5yZWR1Y2UoKHByZXZpb3VzVmFsdWUsIGN1cnJlbnRWYWx1ZSkgPT4gcHJldmlvdXNWYWx1ZS5jb25jYXQoXCJzdXBwb3J0ZWRcIiBpbiBjdXJyZW50VmFsdWUgPyBjdXJyZW50VmFsdWUuc3VwcG9ydGVkIDogY3VycmVudFZhbHVlKSwgW10pO1xuICAgIGZ1bmN0aW9uIG1hdGNoKGNvbnRlbnRUeXBlKSB7XG4gICAgICAgIGlmIChjb250ZW50VHlwZSA9PT0gbnVsbCB8fCBjb250ZW50VHlwZS5sZW5ndGggPT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGNhY2hlZCA9IGNhY2hlLmdldChjb250ZW50VHlwZSk7XG4gICAgICAgIGlmIChjYWNoZWQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZDtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBvayA9IHNvdXJjZS5zb21lKChyZSkgPT4gcmUudGVzdChjb250ZW50VHlwZSkpO1xuICAgICAgICBpZiAoY2FjaGUuc2l6ZSA8IGNvbnRlbnRUeXBlTWF0Y2hlckNhY2hlU2l6ZSkge1xuICAgICAgICAgICAgY2FjaGUuc2V0KGNvbnRlbnRUeXBlLCBvayk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG9rO1xuICAgIH1cbiAgICBtYXRjaC5zdXBwb3J0ZWQgPSBzb3VyY2U7XG4gICAgcmV0dXJuIG1hdGNoO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/content-type-matcher.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/create-method-url.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol/create-method-url.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createMethodUrl: () => (/* binding */ createMethodUrl)\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Create a URL for the given RPC. This simply adds the qualified\n * service name, a slash, and the method name to the path of the given\n * baseUrl.\n *\n * For example, the baseUri https://example.com and method \"Say\" from\n * the service example.ElizaService results in:\n * https://example.com/example.ElizaService/Say\n *\n * This format is used by the protocols Connect, gRPC and Twirp.\n *\n * Note that this function also accepts a protocol-relative baseUrl.\n * If given an empty string or \"/\" as a baseUrl, it returns just the\n * path.\n */\nfunction createMethodUrl(baseUrl, service, method) {\n    const s = typeof service == \"string\" ? service : service.typeName;\n    const m = typeof method == \"string\" ? method : method.name;\n    return baseUrl.toString().replace(/\\/?$/, `/${s}/${m}`);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC9jcmVhdGUtbWV0aG9kLXVybC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxrREFBa0QsRUFBRSxHQUFHLEVBQUU7QUFDekQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZS1jby9ldGhvcy1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AY29ubmVjdHJwYy9jb25uZWN0L2Rpc3QvZXNtL3Byb3RvY29sL2NyZWF0ZS1tZXRob2QtdXJsLmpzPzcyMzQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbi8qKlxuICogQ3JlYXRlIGEgVVJMIGZvciB0aGUgZ2l2ZW4gUlBDLiBUaGlzIHNpbXBseSBhZGRzIHRoZSBxdWFsaWZpZWRcbiAqIHNlcnZpY2UgbmFtZSwgYSBzbGFzaCwgYW5kIHRoZSBtZXRob2QgbmFtZSB0byB0aGUgcGF0aCBvZiB0aGUgZ2l2ZW5cbiAqIGJhc2VVcmwuXG4gKlxuICogRm9yIGV4YW1wbGUsIHRoZSBiYXNlVXJpIGh0dHBzOi8vZXhhbXBsZS5jb20gYW5kIG1ldGhvZCBcIlNheVwiIGZyb21cbiAqIHRoZSBzZXJ2aWNlIGV4YW1wbGUuRWxpemFTZXJ2aWNlIHJlc3VsdHMgaW46XG4gKiBodHRwczovL2V4YW1wbGUuY29tL2V4YW1wbGUuRWxpemFTZXJ2aWNlL1NheVxuICpcbiAqIFRoaXMgZm9ybWF0IGlzIHVzZWQgYnkgdGhlIHByb3RvY29scyBDb25uZWN0LCBnUlBDIGFuZCBUd2lycC5cbiAqXG4gKiBOb3RlIHRoYXQgdGhpcyBmdW5jdGlvbiBhbHNvIGFjY2VwdHMgYSBwcm90b2NvbC1yZWxhdGl2ZSBiYXNlVXJsLlxuICogSWYgZ2l2ZW4gYW4gZW1wdHkgc3RyaW5nIG9yIFwiL1wiIGFzIGEgYmFzZVVybCwgaXQgcmV0dXJucyBqdXN0IHRoZVxuICogcGF0aC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZU1ldGhvZFVybChiYXNlVXJsLCBzZXJ2aWNlLCBtZXRob2QpIHtcbiAgICBjb25zdCBzID0gdHlwZW9mIHNlcnZpY2UgPT0gXCJzdHJpbmdcIiA/IHNlcnZpY2UgOiBzZXJ2aWNlLnR5cGVOYW1lO1xuICAgIGNvbnN0IG0gPSB0eXBlb2YgbWV0aG9kID09IFwic3RyaW5nXCIgPyBtZXRob2QgOiBtZXRob2QubmFtZTtcbiAgICByZXR1cm4gYmFzZVVybC50b1N0cmluZygpLnJlcGxhY2UoL1xcLz8kLywgYC8ke3N9LyR7bX1gKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/create-method-url.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/envelope.js":
/*!************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol/envelope.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createEnvelopeReadableStream: () => (/* binding */ createEnvelopeReadableStream),\n/* harmony export */   encodeEnvelope: () => (/* binding */ encodeEnvelope),\n/* harmony export */   encodeEnvelopes: () => (/* binding */ encodeEnvelopes),\n/* harmony export */   envelopeCompress: () => (/* binding */ envelopeCompress),\n/* harmony export */   envelopeDecompress: () => (/* binding */ envelopeDecompress)\n/* harmony export */ });\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../connect-error.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../code.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _compression_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./compression.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/compression.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n/**\n * Create a WHATWG ReadableStream of enveloped messages from a ReadableStream\n * of bytes.\n *\n * Ideally, this would simply be a TransformStream, but ReadableStream.pipeThrough\n * does not have the necessary availability at this time.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction createEnvelopeReadableStream(stream) {\n    let reader;\n    let buffer = new Uint8Array(0);\n    function append(chunk) {\n        const n = new Uint8Array(buffer.length + chunk.length);\n        n.set(buffer);\n        n.set(chunk, buffer.length);\n        buffer = n;\n    }\n    return new ReadableStream({\n        start() {\n            reader = stream.getReader();\n        },\n        async pull(controller) {\n            let header = undefined;\n            for (;;) {\n                if (header === undefined && buffer.byteLength >= 5) {\n                    let length = 0;\n                    for (let i = 1; i < 5; i++) {\n                        length = (length << 8) + buffer[i];\n                    }\n                    header = { flags: buffer[0], length };\n                }\n                if (header !== undefined && buffer.byteLength >= header.length + 5) {\n                    break;\n                }\n                const result = await reader.read();\n                if (result.done) {\n                    break;\n                }\n                append(result.value);\n            }\n            if (header === undefined) {\n                if (buffer.byteLength == 0) {\n                    controller.close();\n                    return;\n                }\n                controller.error(new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(\"premature end of stream\", _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.DataLoss));\n                return;\n            }\n            const data = buffer.subarray(5, 5 + header.length);\n            buffer = buffer.subarray(5 + header.length);\n            controller.enqueue({\n                flags: header.flags,\n                data,\n            });\n        },\n    });\n}\n/**\n * Compress an EnvelopedMessage.\n *\n * Raises Internal if an enveloped message is already compressed.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nasync function envelopeCompress(envelope, compression, compressMinBytes) {\n    let { flags, data } = envelope;\n    if ((flags & _compression_js__WEBPACK_IMPORTED_MODULE_2__.compressedFlag) === _compression_js__WEBPACK_IMPORTED_MODULE_2__.compressedFlag) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(\"invalid envelope, already compressed\", _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.Internal);\n    }\n    if (compression && data.byteLength >= compressMinBytes) {\n        data = await compression.compress(data);\n        flags = flags | _compression_js__WEBPACK_IMPORTED_MODULE_2__.compressedFlag;\n    }\n    return { data, flags };\n}\n/**\n * Decompress an EnvelopedMessage.\n *\n * Raises InvalidArgument if an envelope is compressed, but compression is null.\n *\n * Relies on the provided Compression to raise ResourceExhausted if the\n * *decompressed* message size is larger than readMaxBytes. If the envelope is\n * not compressed, readMaxBytes is not honored.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nasync function envelopeDecompress(envelope, compression, readMaxBytes) {\n    let { flags, data } = envelope;\n    if ((flags & _compression_js__WEBPACK_IMPORTED_MODULE_2__.compressedFlag) === _compression_js__WEBPACK_IMPORTED_MODULE_2__.compressedFlag) {\n        if (!compression) {\n            throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(\"received compressed envelope, but do not know how to decompress\", _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.Internal);\n        }\n        data = await compression.decompress(data, readMaxBytes);\n        flags = flags ^ _compression_js__WEBPACK_IMPORTED_MODULE_2__.compressedFlag;\n    }\n    return { data, flags };\n}\n/**\n * Encode a single enveloped message.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction encodeEnvelope(flags, data) {\n    const bytes = new Uint8Array(data.length + 5);\n    bytes.set(data, 5);\n    const v = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    v.setUint8(0, flags); // first byte is flags\n    v.setUint32(1, data.length); // 4 bytes message length\n    return bytes;\n}\n/**\n * Encode a set of enveloped messages.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction encodeEnvelopes(...envelopes) {\n    const len = envelopes.reduce((previousValue, currentValue) => previousValue + currentValue.data.length + 5, 0);\n    const bytes = new Uint8Array(len);\n    const v = new DataView(bytes.buffer);\n    let offset = 0;\n    for (const e of envelopes) {\n        v.setUint8(offset, e.flags); // first byte is flags\n        v.setUint32(offset + 1, e.data.length); // 4 bytes message length\n        bytes.set(e.data, offset + 5);\n        offset += e.data.length + 5;\n    }\n    return bytes;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/envelope.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/invoke-implementation.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol/invoke-implementation.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   invokeUnaryImplementation: () => (/* binding */ invokeUnaryImplementation),\n/* harmony export */   transformInvokeImplementation: () => (/* binding */ transformInvokeImplementation)\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @bufbuild/protobuf */ \"(ssr)/./node_modules/@bufbuild/protobuf/dist/esm/service-type.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../connect-error.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../code.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _normalize_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./normalize.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/normalize.js\");\n/* harmony import */ var _interceptor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../interceptor.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/interceptor.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __await = (undefined && undefined.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (undefined && undefined.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nvar __asyncValues = (undefined && undefined.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar __asyncDelegator = (undefined && undefined.__asyncDelegator) || function (o) {\n    var i, p;\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n};\n\n\n\n\n\n/**\n * Invoke a user-provided implementation of a unary RPC. Returns a normalized\n * output message.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nasync function invokeUnaryImplementation(spec, context, input, interceptors) {\n    const anyFn = async (req) => {\n        return {\n            message: (0,_normalize_js__WEBPACK_IMPORTED_MODULE_0__.normalize)(spec.method.O, await spec.impl(req.message, Object.assign(Object.assign({}, context), { service: req.service, method: req.method, requestHeader: req.header, values: req.contextValues, signal: req.signal }))),\n            stream: false,\n            service: req.service,\n            method: req.method,\n            header: context.responseHeader,\n            trailer: context.responseTrailer,\n        };\n    };\n    const next = (0,_interceptor_js__WEBPACK_IMPORTED_MODULE_1__.applyInterceptors)(anyFn, interceptors);\n    const { message } = await next({\n        init: {\n            method: context.requestMethod,\n        },\n        message: input,\n        url: context.url,\n        signal: context.signal,\n        service: spec.service,\n        method: spec.method,\n        header: context.requestHeader,\n        contextValues: context.values,\n        stream: false,\n    });\n    return message;\n}\n/**\n * Return an AsyncIterableTransform that invokes a user-provided implementation,\n * giving it input from an asynchronous iterable, and returning its output as an\n * asynchronous iterable.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction transformInvokeImplementation(spec, context, interceptors) {\n    switch (spec.kind) {\n        case _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.MethodKind.Unary:\n            return function unary(input) {\n                return __asyncGenerator(this, arguments, function* unary_1() {\n                    const inputIt = input[Symbol.asyncIterator]();\n                    const input1 = yield __await(inputIt.next());\n                    if (input1.done === true) {\n                        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_3__.ConnectError(\"protocol error: missing input message for unary method\", _code_js__WEBPACK_IMPORTED_MODULE_4__.Code.Unimplemented);\n                    }\n                    const anyFn = async (req) => {\n                        return {\n                            message: (0,_normalize_js__WEBPACK_IMPORTED_MODULE_0__.normalize)(spec.method.O, await spec.impl(req.message, Object.assign(Object.assign({}, context), { service: req.service, method: req.method, requestHeader: req.header, values: req.contextValues, signal: req.signal }))),\n                            stream: false,\n                            service: req.service,\n                            method: req.method,\n                            header: context.responseHeader,\n                            trailer: context.responseTrailer,\n                        };\n                    };\n                    const next = (0,_interceptor_js__WEBPACK_IMPORTED_MODULE_1__.applyInterceptors)(anyFn, interceptors);\n                    const { message, header, trailer } = yield __await(next({\n                        init: {\n                            method: context.requestMethod,\n                        },\n                        message: input1.value,\n                        url: context.url,\n                        signal: context.signal,\n                        service: spec.service,\n                        method: spec.method,\n                        header: context.requestHeader,\n                        contextValues: context.values,\n                        stream: false,\n                    }));\n                    copyHeaders(header, context.responseHeader);\n                    copyHeaders(trailer, context.responseTrailer);\n                    yield yield __await(message);\n                    const input2 = yield __await(inputIt.next());\n                    if (input2.done !== true) {\n                        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_3__.ConnectError(\"protocol error: received extra input message for unary method\", _code_js__WEBPACK_IMPORTED_MODULE_4__.Code.Unimplemented);\n                    }\n                });\n            };\n        case _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.MethodKind.ServerStreaming: {\n            return function serverStreaming(input) {\n                return __asyncGenerator(this, arguments, function* serverStreaming_1() {\n                    const inputIt = input[Symbol.asyncIterator]();\n                    const input1 = yield __await(inputIt.next());\n                    if (input1.done === true) {\n                        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_3__.ConnectError(\"protocol error: missing input message for server-streaming method\", _code_js__WEBPACK_IMPORTED_MODULE_4__.Code.Unimplemented);\n                    }\n                    const anyFn = async (req) => {\n                        return {\n                            message: (0,_normalize_js__WEBPACK_IMPORTED_MODULE_0__.normalizeIterable)(spec.method.O, spec.impl(req.message, Object.assign(Object.assign({}, context), { service: req.service, method: req.method, requestHeader: req.header, values: req.contextValues, signal: req.signal }))),\n                            stream: true,\n                            service: req.service,\n                            method: req.method,\n                            header: context.responseHeader,\n                            trailer: context.responseTrailer,\n                        };\n                    };\n                    const next = (0,_interceptor_js__WEBPACK_IMPORTED_MODULE_1__.applyInterceptors)(anyFn, interceptors);\n                    const { message, header, trailer } = yield __await(next({\n                        init: {\n                            method: context.requestMethod,\n                        },\n                        message: input1.value,\n                        url: context.url,\n                        signal: context.signal,\n                        service: spec.service,\n                        method: spec.method,\n                        header: context.requestHeader,\n                        contextValues: context.values,\n                        stream: false,\n                    }));\n                    copyHeaders(header, context.responseHeader);\n                    copyHeaders(trailer, context.responseTrailer);\n                    yield __await(yield* __asyncDelegator(__asyncValues(message)));\n                    const input2 = yield __await(inputIt.next());\n                    if (input2.done !== true) {\n                        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_3__.ConnectError(\"protocol error: received extra input message for server-streaming method\", _code_js__WEBPACK_IMPORTED_MODULE_4__.Code.Unimplemented);\n                    }\n                });\n            };\n        }\n        case _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.MethodKind.ClientStreaming: {\n            return function clientStreaming(input) {\n                return __asyncGenerator(this, arguments, function* clientStreaming_1() {\n                    const anyFn = async (req) => {\n                        return {\n                            message: (0,_normalize_js__WEBPACK_IMPORTED_MODULE_0__.normalize)(spec.method.O, await spec.impl(req.message, Object.assign(Object.assign({}, context), { service: req.service, method: req.method, requestHeader: req.header, values: req.contextValues, signal: req.signal }))),\n                            stream: false,\n                            service: req.service,\n                            method: req.method,\n                            header: context.responseHeader,\n                            trailer: context.responseTrailer,\n                        };\n                    };\n                    const next = (0,_interceptor_js__WEBPACK_IMPORTED_MODULE_1__.applyInterceptors)(anyFn, interceptors);\n                    const { message, header, trailer } = yield __await(next({\n                        init: {\n                            method: context.requestMethod,\n                        },\n                        message: input,\n                        url: context.url,\n                        signal: context.signal,\n                        service: spec.service,\n                        method: spec.method,\n                        header: context.requestHeader,\n                        contextValues: context.values,\n                        stream: true,\n                    }));\n                    copyHeaders(header, context.responseHeader);\n                    copyHeaders(trailer, context.responseTrailer);\n                    yield yield __await(message);\n                });\n            };\n        }\n        case _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.MethodKind.BiDiStreaming:\n            return function biDiStreaming(input) {\n                return __asyncGenerator(this, arguments, function* biDiStreaming_1() {\n                    const anyFn = async (req) => {\n                        return {\n                            message: (0,_normalize_js__WEBPACK_IMPORTED_MODULE_0__.normalizeIterable)(spec.method.O, spec.impl(req.message, Object.assign(Object.assign({}, context), { service: req.service, method: req.method, requestHeader: req.header, values: req.contextValues, signal: req.signal }))),\n                            stream: true,\n                            service: req.service,\n                            method: req.method,\n                            header: context.responseHeader,\n                            trailer: context.responseTrailer,\n                        };\n                    };\n                    const next = (0,_interceptor_js__WEBPACK_IMPORTED_MODULE_1__.applyInterceptors)(anyFn, interceptors);\n                    const { message, header, trailer } = yield __await(next({\n                        init: {\n                            method: context.requestMethod,\n                        },\n                        message: input,\n                        url: context.url,\n                        signal: context.signal,\n                        service: spec.service,\n                        method: spec.method,\n                        header: context.requestHeader,\n                        contextValues: context.values,\n                        stream: true,\n                    }));\n                    copyHeaders(header, context.responseHeader);\n                    copyHeaders(trailer, context.responseTrailer);\n                    yield __await(yield* __asyncDelegator(__asyncValues(message)));\n                });\n            };\n    }\n}\nfunction copyHeaders(from, to) {\n    if (from === to) {\n        return;\n    }\n    to.forEach((_, key) => {\n        to.delete(key);\n    });\n    from.forEach((value, key) => {\n        to.set(key, value);\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/invoke-implementation.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/limit-io.js":
/*!************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol/limit-io.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertReadMaxBytes: () => (/* binding */ assertReadMaxBytes),\n/* harmony export */   assertWriteMaxBytes: () => (/* binding */ assertWriteMaxBytes),\n/* harmony export */   validateReadWriteMaxBytes: () => (/* binding */ validateReadWriteMaxBytes)\n/* harmony export */ });\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../connect-error.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../code.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * At most, allow ~4GiB to be received or sent per message.\n * zlib used by Node.js caps maxOutputLength at this value. It also happens to\n * be the maximum theoretical message size supported by protobuf-es.\n */\nconst maxReadMaxBytes = 0xffffffff;\nconst maxWriteMaxBytes = maxReadMaxBytes;\n/**\n * The default value for the compressMinBytes option. The CPU cost of compressing\n * very small messages usually isn't worth the small reduction in network I/O, so\n * the default value is 1 kibibyte.\n */\nconst defaultCompressMinBytes = 1024;\n/**\n * Asserts that the options writeMaxBytes, readMaxBytes, and compressMinBytes\n * are within sane limits, and returns default values where no value is\n * provided.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction validateReadWriteMaxBytes(readMaxBytes, writeMaxBytes, compressMinBytes) {\n    writeMaxBytes !== null && writeMaxBytes !== void 0 ? writeMaxBytes : (writeMaxBytes = maxWriteMaxBytes);\n    readMaxBytes !== null && readMaxBytes !== void 0 ? readMaxBytes : (readMaxBytes = maxReadMaxBytes);\n    compressMinBytes !== null && compressMinBytes !== void 0 ? compressMinBytes : (compressMinBytes = defaultCompressMinBytes);\n    if (writeMaxBytes < 1 || writeMaxBytes > maxWriteMaxBytes) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(`writeMaxBytes ${writeMaxBytes} must be >= 1 and <= ${maxWriteMaxBytes}`, _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.Internal);\n    }\n    if (readMaxBytes < 1 || readMaxBytes > maxReadMaxBytes) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(`readMaxBytes ${readMaxBytes} must be >= 1 and <= ${maxReadMaxBytes}`, _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.Internal);\n    }\n    return {\n        readMaxBytes,\n        writeMaxBytes,\n        compressMinBytes,\n    };\n}\n/**\n * Raise an error ResourceExhausted if more than writeMaxByte are written.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction assertWriteMaxBytes(writeMaxBytes, bytesWritten) {\n    if (bytesWritten > writeMaxBytes) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(`message size ${bytesWritten} is larger than configured writeMaxBytes ${writeMaxBytes}`, _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.ResourceExhausted);\n    }\n}\n/**\n * Raise an error ResourceExhausted if more than readMaxBytes are read.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction assertReadMaxBytes(readMaxBytes, bytesRead, totalSizeKnown = false) {\n    if (bytesRead > readMaxBytes) {\n        let message = `message size is larger than configured readMaxBytes ${readMaxBytes}`;\n        if (totalSizeKnown) {\n            message = `message size ${bytesRead} is larger than configured readMaxBytes ${readMaxBytes}`;\n        }\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(message, _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.ResourceExhausted);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC9saW1pdC1pby5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ21EO0FBQ2pCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLDJEQUFZLGtCQUFrQixlQUFlLHNCQUFzQixpQkFBaUIsR0FBRywwQ0FBSTtBQUM3RztBQUNBO0FBQ0Esa0JBQWtCLDJEQUFZLGlCQUFpQixjQUFjLHNCQUFzQixnQkFBZ0IsR0FBRywwQ0FBSTtBQUMxRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0Esa0JBQWtCLDJEQUFZLGlCQUFpQixjQUFjLDBDQUEwQyxjQUFjLEdBQUcsMENBQUk7QUFDNUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsNkVBQTZFLGFBQWE7QUFDMUY7QUFDQSxzQ0FBc0MsV0FBVyx5Q0FBeUMsYUFBYTtBQUN2RztBQUNBLGtCQUFrQiwyREFBWSxVQUFVLDBDQUFJO0FBQzVDO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZS1jby9ldGhvcy1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AY29ubmVjdHJwYy9jb25uZWN0L2Rpc3QvZXNtL3Byb3RvY29sL2xpbWl0LWlvLmpzPzBiOGYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmltcG9ydCB7IENvbm5lY3RFcnJvciB9IGZyb20gXCIuLi9jb25uZWN0LWVycm9yLmpzXCI7XG5pbXBvcnQgeyBDb2RlIH0gZnJvbSBcIi4uL2NvZGUuanNcIjtcbi8qKlxuICogQXQgbW9zdCwgYWxsb3cgfjRHaUIgdG8gYmUgcmVjZWl2ZWQgb3Igc2VudCBwZXIgbWVzc2FnZS5cbiAqIHpsaWIgdXNlZCBieSBOb2RlLmpzIGNhcHMgbWF4T3V0cHV0TGVuZ3RoIGF0IHRoaXMgdmFsdWUuIEl0IGFsc28gaGFwcGVucyB0b1xuICogYmUgdGhlIG1heGltdW0gdGhlb3JldGljYWwgbWVzc2FnZSBzaXplIHN1cHBvcnRlZCBieSBwcm90b2J1Zi1lcy5cbiAqL1xuY29uc3QgbWF4UmVhZE1heEJ5dGVzID0gMHhmZmZmZmZmZjtcbmNvbnN0IG1heFdyaXRlTWF4Qnl0ZXMgPSBtYXhSZWFkTWF4Qnl0ZXM7XG4vKipcbiAqIFRoZSBkZWZhdWx0IHZhbHVlIGZvciB0aGUgY29tcHJlc3NNaW5CeXRlcyBvcHRpb24uIFRoZSBDUFUgY29zdCBvZiBjb21wcmVzc2luZ1xuICogdmVyeSBzbWFsbCBtZXNzYWdlcyB1c3VhbGx5IGlzbid0IHdvcnRoIHRoZSBzbWFsbCByZWR1Y3Rpb24gaW4gbmV0d29yayBJL08sIHNvXG4gKiB0aGUgZGVmYXVsdCB2YWx1ZSBpcyAxIGtpYmlieXRlLlxuICovXG5jb25zdCBkZWZhdWx0Q29tcHJlc3NNaW5CeXRlcyA9IDEwMjQ7XG4vKipcbiAqIEFzc2VydHMgdGhhdCB0aGUgb3B0aW9ucyB3cml0ZU1heEJ5dGVzLCByZWFkTWF4Qnl0ZXMsIGFuZCBjb21wcmVzc01pbkJ5dGVzXG4gKiBhcmUgd2l0aGluIHNhbmUgbGltaXRzLCBhbmQgcmV0dXJucyBkZWZhdWx0IHZhbHVlcyB3aGVyZSBubyB2YWx1ZSBpc1xuICogcHJvdmlkZWQuXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZVJlYWRXcml0ZU1heEJ5dGVzKHJlYWRNYXhCeXRlcywgd3JpdGVNYXhCeXRlcywgY29tcHJlc3NNaW5CeXRlcykge1xuICAgIHdyaXRlTWF4Qnl0ZXMgIT09IG51bGwgJiYgd3JpdGVNYXhCeXRlcyAhPT0gdm9pZCAwID8gd3JpdGVNYXhCeXRlcyA6ICh3cml0ZU1heEJ5dGVzID0gbWF4V3JpdGVNYXhCeXRlcyk7XG4gICAgcmVhZE1heEJ5dGVzICE9PSBudWxsICYmIHJlYWRNYXhCeXRlcyAhPT0gdm9pZCAwID8gcmVhZE1heEJ5dGVzIDogKHJlYWRNYXhCeXRlcyA9IG1heFJlYWRNYXhCeXRlcyk7XG4gICAgY29tcHJlc3NNaW5CeXRlcyAhPT0gbnVsbCAmJiBjb21wcmVzc01pbkJ5dGVzICE9PSB2b2lkIDAgPyBjb21wcmVzc01pbkJ5dGVzIDogKGNvbXByZXNzTWluQnl0ZXMgPSBkZWZhdWx0Q29tcHJlc3NNaW5CeXRlcyk7XG4gICAgaWYgKHdyaXRlTWF4Qnl0ZXMgPCAxIHx8IHdyaXRlTWF4Qnl0ZXMgPiBtYXhXcml0ZU1heEJ5dGVzKSB7XG4gICAgICAgIHRocm93IG5ldyBDb25uZWN0RXJyb3IoYHdyaXRlTWF4Qnl0ZXMgJHt3cml0ZU1heEJ5dGVzfSBtdXN0IGJlID49IDEgYW5kIDw9ICR7bWF4V3JpdGVNYXhCeXRlc31gLCBDb2RlLkludGVybmFsKTtcbiAgICB9XG4gICAgaWYgKHJlYWRNYXhCeXRlcyA8IDEgfHwgcmVhZE1heEJ5dGVzID4gbWF4UmVhZE1heEJ5dGVzKSB7XG4gICAgICAgIHRocm93IG5ldyBDb25uZWN0RXJyb3IoYHJlYWRNYXhCeXRlcyAke3JlYWRNYXhCeXRlc30gbXVzdCBiZSA+PSAxIGFuZCA8PSAke21heFJlYWRNYXhCeXRlc31gLCBDb2RlLkludGVybmFsKTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcmVhZE1heEJ5dGVzLFxuICAgICAgICB3cml0ZU1heEJ5dGVzLFxuICAgICAgICBjb21wcmVzc01pbkJ5dGVzLFxuICAgIH07XG59XG4vKipcbiAqIFJhaXNlIGFuIGVycm9yIFJlc291cmNlRXhoYXVzdGVkIGlmIG1vcmUgdGhhbiB3cml0ZU1heEJ5dGUgYXJlIHdyaXR0ZW4uXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhc3NlcnRXcml0ZU1heEJ5dGVzKHdyaXRlTWF4Qnl0ZXMsIGJ5dGVzV3JpdHRlbikge1xuICAgIGlmIChieXRlc1dyaXR0ZW4gPiB3cml0ZU1heEJ5dGVzKSB7XG4gICAgICAgIHRocm93IG5ldyBDb25uZWN0RXJyb3IoYG1lc3NhZ2Ugc2l6ZSAke2J5dGVzV3JpdHRlbn0gaXMgbGFyZ2VyIHRoYW4gY29uZmlndXJlZCB3cml0ZU1heEJ5dGVzICR7d3JpdGVNYXhCeXRlc31gLCBDb2RlLlJlc291cmNlRXhoYXVzdGVkKTtcbiAgICB9XG59XG4vKipcbiAqIFJhaXNlIGFuIGVycm9yIFJlc291cmNlRXhoYXVzdGVkIGlmIG1vcmUgdGhhbiByZWFkTWF4Qnl0ZXMgYXJlIHJlYWQuXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhc3NlcnRSZWFkTWF4Qnl0ZXMocmVhZE1heEJ5dGVzLCBieXRlc1JlYWQsIHRvdGFsU2l6ZUtub3duID0gZmFsc2UpIHtcbiAgICBpZiAoYnl0ZXNSZWFkID4gcmVhZE1heEJ5dGVzKSB7XG4gICAgICAgIGxldCBtZXNzYWdlID0gYG1lc3NhZ2Ugc2l6ZSBpcyBsYXJnZXIgdGhhbiBjb25maWd1cmVkIHJlYWRNYXhCeXRlcyAke3JlYWRNYXhCeXRlc31gO1xuICAgICAgICBpZiAodG90YWxTaXplS25vd24pIHtcbiAgICAgICAgICAgIG1lc3NhZ2UgPSBgbWVzc2FnZSBzaXplICR7Ynl0ZXNSZWFkfSBpcyBsYXJnZXIgdGhhbiBjb25maWd1cmVkIHJlYWRNYXhCeXRlcyAke3JlYWRNYXhCeXRlc31gO1xuICAgICAgICB9XG4gICAgICAgIHRocm93IG5ldyBDb25uZWN0RXJyb3IobWVzc2FnZSwgQ29kZS5SZXNvdXJjZUV4aGF1c3RlZCk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/limit-io.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/normalize.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol/normalize.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normalize: () => (/* binding */ normalize),\n/* harmony export */   normalizeIterable: () => (/* binding */ normalizeIterable)\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n *  Takes a partial protobuf messages of the\n *  specified message type as input, and returns full instances.\n */\nfunction normalize(type, message) {\n    return message instanceof type\n        ? message\n        : new type(message);\n}\n/**\n * Takes an AsyncIterable of partial protobuf messages of the\n * specified message type as input, and yields full instances.\n */\nfunction normalizeIterable(messageType, input) {\n    function transform(result) {\n        if (result.done === true) {\n            return result;\n        }\n        return {\n            done: result.done,\n            value: normalize(messageType, result.value),\n        };\n    }\n    return {\n        [Symbol.asyncIterator]() {\n            const it = input[Symbol.asyncIterator]();\n            const res = {\n                next: () => it.next().then(transform),\n            };\n            if (it.throw !== undefined) {\n                res.throw = (e) => it.throw(e).then(transform); // eslint-disable-line @typescript-eslint/no-non-null-assertion\n            }\n            if (it.return !== undefined) {\n                res.return = (v) => it.return(v).then(transform); // eslint-disable-line @typescript-eslint/no-non-null-assertion\n            }\n            return res;\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC9ub3JtYWxpemUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUM2QztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnRUFBZ0U7QUFDaEU7QUFDQTtBQUNBLGtFQUFrRTtBQUNsRTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZS1jby9ldGhvcy1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AY29ubmVjdHJwYy9jb25uZWN0L2Rpc3QvZXNtL3Byb3RvY29sL25vcm1hbGl6ZS5qcz8yMWZmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgVGhlIENvbm5lY3QgQXV0aG9yc1xuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5pbXBvcnQgeyBNZXNzYWdlIH0gZnJvbSBcIkBidWZidWlsZC9wcm90b2J1ZlwiO1xuLyoqXG4gKiAgVGFrZXMgYSBwYXJ0aWFsIHByb3RvYnVmIG1lc3NhZ2VzIG9mIHRoZVxuICogIHNwZWNpZmllZCBtZXNzYWdlIHR5cGUgYXMgaW5wdXQsIGFuZCByZXR1cm5zIGZ1bGwgaW5zdGFuY2VzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gbm9ybWFsaXplKHR5cGUsIG1lc3NhZ2UpIHtcbiAgICByZXR1cm4gbWVzc2FnZSBpbnN0YW5jZW9mIHR5cGVcbiAgICAgICAgPyBtZXNzYWdlXG4gICAgICAgIDogbmV3IHR5cGUobWVzc2FnZSk7XG59XG4vKipcbiAqIFRha2VzIGFuIEFzeW5jSXRlcmFibGUgb2YgcGFydGlhbCBwcm90b2J1ZiBtZXNzYWdlcyBvZiB0aGVcbiAqIHNwZWNpZmllZCBtZXNzYWdlIHR5cGUgYXMgaW5wdXQsIGFuZCB5aWVsZHMgZnVsbCBpbnN0YW5jZXMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBub3JtYWxpemVJdGVyYWJsZShtZXNzYWdlVHlwZSwgaW5wdXQpIHtcbiAgICBmdW5jdGlvbiB0cmFuc2Zvcm0ocmVzdWx0KSB7XG4gICAgICAgIGlmIChyZXN1bHQuZG9uZSA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgZG9uZTogcmVzdWx0LmRvbmUsXG4gICAgICAgICAgICB2YWx1ZTogbm9ybWFsaXplKG1lc3NhZ2VUeXBlLCByZXN1bHQudmFsdWUpLFxuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCkge1xuICAgICAgICAgICAgY29uc3QgaXQgPSBpbnB1dFtTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKTtcbiAgICAgICAgICAgIGNvbnN0IHJlcyA9IHtcbiAgICAgICAgICAgICAgICBuZXh0OiAoKSA9PiBpdC5uZXh0KCkudGhlbih0cmFuc2Zvcm0pLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGlmIChpdC50aHJvdyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgcmVzLnRocm93ID0gKGUpID0+IGl0LnRocm93KGUpLnRoZW4odHJhbnNmb3JtKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tbm9uLW51bGwtYXNzZXJ0aW9uXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoaXQucmV0dXJuICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICByZXMucmV0dXJuID0gKHYpID0+IGl0LnJldHVybih2KS50aGVuKHRyYW5zZm9ybSk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLW5vbi1udWxsLWFzc2VydGlvblxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHJlcztcbiAgICAgICAgfSxcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/normalize.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/run-call.js":
/*!************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol/run-call.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   runStreamingCall: () => (/* binding */ runStreamingCall),\n/* harmony export */   runUnaryCall: () => (/* binding */ runUnaryCall)\n/* harmony export */ });\n/* harmony import */ var _interceptor_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../interceptor.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/interceptor.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../connect-error.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _signals_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./signals.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/signals.js\");\n/* harmony import */ var _normalize_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./normalize.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/normalize.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n/**\n * Runs a unary method with the given interceptors. Note that this function\n * is only used when implementing a Transport.\n */\nfunction runUnaryCall(opt) {\n    const next = (0,_interceptor_js__WEBPACK_IMPORTED_MODULE_0__.applyInterceptors)(opt.next, opt.interceptors);\n    const [signal, abort, done] = setupSignal(opt);\n    const req = Object.assign(Object.assign({}, opt.req), { message: (0,_normalize_js__WEBPACK_IMPORTED_MODULE_1__.normalize)(opt.req.method.I, opt.req.message), signal });\n    return next(req).then((res) => {\n        done();\n        return res;\n    }, abort);\n}\n/**\n * Runs a server-streaming method with the given interceptors. Note that this\n * function is only used when implementing a Transport.\n */\nfunction runStreamingCall(opt) {\n    const next = (0,_interceptor_js__WEBPACK_IMPORTED_MODULE_0__.applyInterceptors)(opt.next, opt.interceptors);\n    const [signal, abort, done] = setupSignal(opt);\n    const req = Object.assign(Object.assign({}, opt.req), { message: (0,_normalize_js__WEBPACK_IMPORTED_MODULE_1__.normalizeIterable)(opt.req.method.I, opt.req.message), signal });\n    let doneCalled = false;\n    // Call return on the request iterable to indicate\n    // that we will no longer consume it and it should\n    // cleanup any allocated resources.\n    signal.addEventListener(\"abort\", function () {\n        var _a, _b;\n        const it = opt.req.message[Symbol.asyncIterator]();\n        // If the signal is aborted due to an error, we want to throw\n        // the error to the request iterator.\n        if (!doneCalled) {\n            (_a = it.throw) === null || _a === void 0 ? void 0 : _a.call(it, this.reason).catch(() => {\n                // throw returns a promise, which we don't care about.\n                //\n                // Uncaught promises are thrown at sometime/somewhere by the event loop,\n                // this is to ensure error is caught and ignored.\n            });\n        }\n        (_b = it.return) === null || _b === void 0 ? void 0 : _b.call(it).catch(() => {\n            // return returns a promise, which we don't care about.\n            //\n            // Uncaught promises are thrown at sometime/somewhere by the event loop,\n            // this is to ensure error is caught and ignored.\n        });\n    });\n    return next(req).then((res) => {\n        return Object.assign(Object.assign({}, res), { message: {\n                [Symbol.asyncIterator]() {\n                    const it = res.message[Symbol.asyncIterator]();\n                    return {\n                        next() {\n                            return it.next().then((r) => {\n                                if (r.done == true) {\n                                    doneCalled = true;\n                                    done();\n                                }\n                                return r;\n                            }, abort);\n                        },\n                        // We deliberately omit throw/return.\n                    };\n                },\n            } });\n    }, abort);\n}\n/**\n * Create an AbortSignal for Transport implementations. The signal is available\n * in UnaryRequest and StreamingRequest, and is triggered when the call is\n * aborted (via a timeout or explicit cancellation), errored (e.g. when reading\n * an error from the server from the wire), or finished successfully.\n *\n * Transport implementations can pass the signal to HTTP clients to ensure that\n * there are no unused connections leak.\n *\n * Returns a tuple:\n * [0]: The signal, which is also aborted if the optional deadline is reached.\n * [1]: Function to call if the Transport encountered an error.\n * [2]: Function to call if the Transport finished without an error.\n */\nfunction setupSignal(opt) {\n    const { signal, cleanup } = (0,_signals_js__WEBPACK_IMPORTED_MODULE_2__.createDeadlineSignal)(opt.timeoutMs);\n    const controller = (0,_signals_js__WEBPACK_IMPORTED_MODULE_2__.createLinkedAbortController)(opt.signal, signal);\n    return [\n        controller.signal,\n        function abort(reason) {\n            // We peek at the deadline signal because fetch() will throw an error on\n            // abort that discards the signal reason.\n            const e = _connect_error_js__WEBPACK_IMPORTED_MODULE_3__.ConnectError.from(signal.aborted ? (0,_signals_js__WEBPACK_IMPORTED_MODULE_2__.getAbortSignalReason)(signal) : reason);\n            controller.abort(e);\n            cleanup();\n            return Promise.reject(e);\n        },\n        function done() {\n            cleanup();\n            controller.abort();\n        },\n    ];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/run-call.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/serialization.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol/serialization.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createBinarySerialization: () => (/* binding */ createBinarySerialization),\n/* harmony export */   createClientMethodSerializers: () => (/* binding */ createClientMethodSerializers),\n/* harmony export */   createJsonSerialization: () => (/* binding */ createJsonSerialization),\n/* harmony export */   createMethodSerializationLookup: () => (/* binding */ createMethodSerializationLookup),\n/* harmony export */   getJsonOptions: () => (/* binding */ getJsonOptions),\n/* harmony export */   limitSerialization: () => (/* binding */ limitSerialization)\n/* harmony export */ });\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../connect-error.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../code.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _limit_io_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./limit-io.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/limit-io.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n/**\n * Sets default JSON serialization options for connect-es.\n *\n * With standard protobuf JSON serialization, unknown JSON fields are\n * rejected by default. In connect-es, unknown JSON fields are ignored\n * by default.\n */\nfunction getJsonOptions(options) {\n    var _a;\n    const o = Object.assign({}, options);\n    (_a = o.ignoreUnknownFields) !== null && _a !== void 0 ? _a : (o.ignoreUnknownFields = true);\n    return o;\n}\n/**\n * Create an object that provides convenient access to request and response\n * message serialization for a given method.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction createMethodSerializationLookup(method, binaryOptions, jsonOptions, limitOptions) {\n    const inputBinary = limitSerialization(createBinarySerialization(method.I, binaryOptions), limitOptions);\n    const inputJson = limitSerialization(createJsonSerialization(method.I, jsonOptions), limitOptions);\n    const outputBinary = limitSerialization(createBinarySerialization(method.O, binaryOptions), limitOptions);\n    const outputJson = limitSerialization(createJsonSerialization(method.O, jsonOptions), limitOptions);\n    return {\n        getI(useBinaryFormat) {\n            return useBinaryFormat ? inputBinary : inputJson;\n        },\n        getO(useBinaryFormat) {\n            return useBinaryFormat ? outputBinary : outputJson;\n        },\n    };\n}\n/**\n * Returns functions to normalize and serialize the input message\n * of an RPC, and to parse the output message of an RPC.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction createClientMethodSerializers(method, useBinaryFormat, jsonOptions, binaryOptions) {\n    const input = useBinaryFormat\n        ? createBinarySerialization(method.I, binaryOptions)\n        : createJsonSerialization(method.I, jsonOptions);\n    const output = useBinaryFormat\n        ? createBinarySerialization(method.O, binaryOptions)\n        : createJsonSerialization(method.O, jsonOptions);\n    return { parse: output.parse, serialize: input.serialize };\n}\n/**\n * Apply I/O limits to a Serialization object, returning a new object.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction limitSerialization(serialization, limitOptions) {\n    return {\n        serialize(data) {\n            const bytes = serialization.serialize(data);\n            (0,_limit_io_js__WEBPACK_IMPORTED_MODULE_0__.assertWriteMaxBytes)(limitOptions.writeMaxBytes, bytes.byteLength);\n            return bytes;\n        },\n        parse(data) {\n            (0,_limit_io_js__WEBPACK_IMPORTED_MODULE_0__.assertReadMaxBytes)(limitOptions.readMaxBytes, data.byteLength, true);\n            return serialization.parse(data);\n        },\n    };\n}\n/**\n * Creates a Serialization object for serializing the given protobuf message\n * with the protobuf binary format.\n */\nfunction createBinarySerialization(messageType, options) {\n    return {\n        parse(data) {\n            try {\n                return messageType.fromBinary(data, options);\n            }\n            catch (e) {\n                const m = e instanceof Error ? e.message : String(e);\n                throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_1__.ConnectError(`parse binary: ${m}`, _code_js__WEBPACK_IMPORTED_MODULE_2__.Code.Internal);\n            }\n        },\n        serialize(data) {\n            try {\n                return data.toBinary(options);\n            }\n            catch (e) {\n                const m = e instanceof Error ? e.message : String(e);\n                throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_1__.ConnectError(`serialize binary: ${m}`, _code_js__WEBPACK_IMPORTED_MODULE_2__.Code.Internal);\n            }\n        },\n    };\n}\n/**\n * Creates a Serialization object for serializing the given protobuf message\n * with the protobuf canonical JSON encoding.\n *\n * By default, unknown fields are ignored.\n */\nfunction createJsonSerialization(messageType, options) {\n    var _a, _b;\n    const textEncoder = (_a = options === null || options === void 0 ? void 0 : options.textEncoder) !== null && _a !== void 0 ? _a : new TextEncoder();\n    const textDecoder = (_b = options === null || options === void 0 ? void 0 : options.textDecoder) !== null && _b !== void 0 ? _b : new TextDecoder();\n    const o = getJsonOptions(options);\n    return {\n        parse(data) {\n            try {\n                const json = textDecoder.decode(data);\n                return messageType.fromJsonString(json, o);\n            }\n            catch (e) {\n                throw _connect_error_js__WEBPACK_IMPORTED_MODULE_1__.ConnectError.from(e, _code_js__WEBPACK_IMPORTED_MODULE_2__.Code.InvalidArgument);\n            }\n        },\n        serialize(data) {\n            try {\n                const json = data.toJsonString(o);\n                return textEncoder.encode(json);\n            }\n            catch (e) {\n                throw _connect_error_js__WEBPACK_IMPORTED_MODULE_1__.ConnectError.from(e, _code_js__WEBPACK_IMPORTED_MODULE_2__.Code.Internal);\n            }\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC9zZXJpYWxpemF0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ21EO0FBQ2pCO0FBQ3NDO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsWUFBWSxpRUFBbUI7QUFDL0I7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxZQUFZLGdFQUFrQjtBQUM5QjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDJEQUFZLGtCQUFrQixFQUFFLEdBQUcsMENBQUk7QUFDakU7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDJEQUFZLHNCQUFzQixFQUFFLEdBQUcsMENBQUk7QUFDckU7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiwyREFBWSxTQUFTLDBDQUFJO0FBQy9DO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiwyREFBWSxTQUFTLDBDQUFJO0FBQy9DO0FBQ0EsU0FBUztBQUNUO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZS1jby9ldGhvcy1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AY29ubmVjdHJwYy9jb25uZWN0L2Rpc3QvZXNtL3Byb3RvY29sL3NlcmlhbGl6YXRpb24uanM/OTFkZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuaW1wb3J0IHsgQ29ubmVjdEVycm9yIH0gZnJvbSBcIi4uL2Nvbm5lY3QtZXJyb3IuanNcIjtcbmltcG9ydCB7IENvZGUgfSBmcm9tIFwiLi4vY29kZS5qc1wiO1xuaW1wb3J0IHsgYXNzZXJ0UmVhZE1heEJ5dGVzLCBhc3NlcnRXcml0ZU1heEJ5dGVzIH0gZnJvbSBcIi4vbGltaXQtaW8uanNcIjtcbi8qKlxuICogU2V0cyBkZWZhdWx0IEpTT04gc2VyaWFsaXphdGlvbiBvcHRpb25zIGZvciBjb25uZWN0LWVzLlxuICpcbiAqIFdpdGggc3RhbmRhcmQgcHJvdG9idWYgSlNPTiBzZXJpYWxpemF0aW9uLCB1bmtub3duIEpTT04gZmllbGRzIGFyZVxuICogcmVqZWN0ZWQgYnkgZGVmYXVsdC4gSW4gY29ubmVjdC1lcywgdW5rbm93biBKU09OIGZpZWxkcyBhcmUgaWdub3JlZFxuICogYnkgZGVmYXVsdC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldEpzb25PcHRpb25zKG9wdGlvbnMpIHtcbiAgICB2YXIgX2E7XG4gICAgY29uc3QgbyA9IE9iamVjdC5hc3NpZ24oe30sIG9wdGlvbnMpO1xuICAgIChfYSA9IG8uaWdub3JlVW5rbm93bkZpZWxkcykgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogKG8uaWdub3JlVW5rbm93bkZpZWxkcyA9IHRydWUpO1xuICAgIHJldHVybiBvO1xufVxuLyoqXG4gKiBDcmVhdGUgYW4gb2JqZWN0IHRoYXQgcHJvdmlkZXMgY29udmVuaWVudCBhY2Nlc3MgdG8gcmVxdWVzdCBhbmQgcmVzcG9uc2VcbiAqIG1lc3NhZ2Ugc2VyaWFsaXphdGlvbiBmb3IgYSBnaXZlbiBtZXRob2QuXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVNZXRob2RTZXJpYWxpemF0aW9uTG9va3VwKG1ldGhvZCwgYmluYXJ5T3B0aW9ucywganNvbk9wdGlvbnMsIGxpbWl0T3B0aW9ucykge1xuICAgIGNvbnN0IGlucHV0QmluYXJ5ID0gbGltaXRTZXJpYWxpemF0aW9uKGNyZWF0ZUJpbmFyeVNlcmlhbGl6YXRpb24obWV0aG9kLkksIGJpbmFyeU9wdGlvbnMpLCBsaW1pdE9wdGlvbnMpO1xuICAgIGNvbnN0IGlucHV0SnNvbiA9IGxpbWl0U2VyaWFsaXphdGlvbihjcmVhdGVKc29uU2VyaWFsaXphdGlvbihtZXRob2QuSSwganNvbk9wdGlvbnMpLCBsaW1pdE9wdGlvbnMpO1xuICAgIGNvbnN0IG91dHB1dEJpbmFyeSA9IGxpbWl0U2VyaWFsaXphdGlvbihjcmVhdGVCaW5hcnlTZXJpYWxpemF0aW9uKG1ldGhvZC5PLCBiaW5hcnlPcHRpb25zKSwgbGltaXRPcHRpb25zKTtcbiAgICBjb25zdCBvdXRwdXRKc29uID0gbGltaXRTZXJpYWxpemF0aW9uKGNyZWF0ZUpzb25TZXJpYWxpemF0aW9uKG1ldGhvZC5PLCBqc29uT3B0aW9ucyksIGxpbWl0T3B0aW9ucyk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgZ2V0SSh1c2VCaW5hcnlGb3JtYXQpIHtcbiAgICAgICAgICAgIHJldHVybiB1c2VCaW5hcnlGb3JtYXQgPyBpbnB1dEJpbmFyeSA6IGlucHV0SnNvbjtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0Tyh1c2VCaW5hcnlGb3JtYXQpIHtcbiAgICAgICAgICAgIHJldHVybiB1c2VCaW5hcnlGb3JtYXQgPyBvdXRwdXRCaW5hcnkgOiBvdXRwdXRKc29uO1xuICAgICAgICB9LFxuICAgIH07XG59XG4vKipcbiAqIFJldHVybnMgZnVuY3Rpb25zIHRvIG5vcm1hbGl6ZSBhbmQgc2VyaWFsaXplIHRoZSBpbnB1dCBtZXNzYWdlXG4gKiBvZiBhbiBSUEMsIGFuZCB0byBwYXJzZSB0aGUgb3V0cHV0IG1lc3NhZ2Ugb2YgYW4gUlBDLlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ2xpZW50TWV0aG9kU2VyaWFsaXplcnMobWV0aG9kLCB1c2VCaW5hcnlGb3JtYXQsIGpzb25PcHRpb25zLCBiaW5hcnlPcHRpb25zKSB7XG4gICAgY29uc3QgaW5wdXQgPSB1c2VCaW5hcnlGb3JtYXRcbiAgICAgICAgPyBjcmVhdGVCaW5hcnlTZXJpYWxpemF0aW9uKG1ldGhvZC5JLCBiaW5hcnlPcHRpb25zKVxuICAgICAgICA6IGNyZWF0ZUpzb25TZXJpYWxpemF0aW9uKG1ldGhvZC5JLCBqc29uT3B0aW9ucyk7XG4gICAgY29uc3Qgb3V0cHV0ID0gdXNlQmluYXJ5Rm9ybWF0XG4gICAgICAgID8gY3JlYXRlQmluYXJ5U2VyaWFsaXphdGlvbihtZXRob2QuTywgYmluYXJ5T3B0aW9ucylcbiAgICAgICAgOiBjcmVhdGVKc29uU2VyaWFsaXphdGlvbihtZXRob2QuTywganNvbk9wdGlvbnMpO1xuICAgIHJldHVybiB7IHBhcnNlOiBvdXRwdXQucGFyc2UsIHNlcmlhbGl6ZTogaW5wdXQuc2VyaWFsaXplIH07XG59XG4vKipcbiAqIEFwcGx5IEkvTyBsaW1pdHMgdG8gYSBTZXJpYWxpemF0aW9uIG9iamVjdCwgcmV0dXJuaW5nIGEgbmV3IG9iamVjdC5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGxpbWl0U2VyaWFsaXphdGlvbihzZXJpYWxpemF0aW9uLCBsaW1pdE9wdGlvbnMpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBzZXJpYWxpemUoZGF0YSkge1xuICAgICAgICAgICAgY29uc3QgYnl0ZXMgPSBzZXJpYWxpemF0aW9uLnNlcmlhbGl6ZShkYXRhKTtcbiAgICAgICAgICAgIGFzc2VydFdyaXRlTWF4Qnl0ZXMobGltaXRPcHRpb25zLndyaXRlTWF4Qnl0ZXMsIGJ5dGVzLmJ5dGVMZW5ndGgpO1xuICAgICAgICAgICAgcmV0dXJuIGJ5dGVzO1xuICAgICAgICB9LFxuICAgICAgICBwYXJzZShkYXRhKSB7XG4gICAgICAgICAgICBhc3NlcnRSZWFkTWF4Qnl0ZXMobGltaXRPcHRpb25zLnJlYWRNYXhCeXRlcywgZGF0YS5ieXRlTGVuZ3RoLCB0cnVlKTtcbiAgICAgICAgICAgIHJldHVybiBzZXJpYWxpemF0aW9uLnBhcnNlKGRhdGEpO1xuICAgICAgICB9LFxuICAgIH07XG59XG4vKipcbiAqIENyZWF0ZXMgYSBTZXJpYWxpemF0aW9uIG9iamVjdCBmb3Igc2VyaWFsaXppbmcgdGhlIGdpdmVuIHByb3RvYnVmIG1lc3NhZ2VcbiAqIHdpdGggdGhlIHByb3RvYnVmIGJpbmFyeSBmb3JtYXQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVCaW5hcnlTZXJpYWxpemF0aW9uKG1lc3NhZ2VUeXBlLCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcGFyc2UoZGF0YSkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbWVzc2FnZVR5cGUuZnJvbUJpbmFyeShkYXRhLCBvcHRpb25zKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgbSA9IGUgaW5zdGFuY2VvZiBFcnJvciA/IGUubWVzc2FnZSA6IFN0cmluZyhlKTtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgQ29ubmVjdEVycm9yKGBwYXJzZSBiaW5hcnk6ICR7bX1gLCBDb2RlLkludGVybmFsKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgc2VyaWFsaXplKGRhdGEpIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGRhdGEudG9CaW5hcnkob3B0aW9ucyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IG0gPSBlIGluc3RhbmNlb2YgRXJyb3IgPyBlLm1lc3NhZ2UgOiBTdHJpbmcoZSk7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IENvbm5lY3RFcnJvcihgc2VyaWFsaXplIGJpbmFyeTogJHttfWAsIENvZGUuSW50ZXJuYWwpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgIH07XG59XG4vKipcbiAqIENyZWF0ZXMgYSBTZXJpYWxpemF0aW9uIG9iamVjdCBmb3Igc2VyaWFsaXppbmcgdGhlIGdpdmVuIHByb3RvYnVmIG1lc3NhZ2VcbiAqIHdpdGggdGhlIHByb3RvYnVmIGNhbm9uaWNhbCBKU09OIGVuY29kaW5nLlxuICpcbiAqIEJ5IGRlZmF1bHQsIHVua25vd24gZmllbGRzIGFyZSBpZ25vcmVkLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlSnNvblNlcmlhbGl6YXRpb24obWVzc2FnZVR5cGUsIG9wdGlvbnMpIHtcbiAgICB2YXIgX2EsIF9iO1xuICAgIGNvbnN0IHRleHRFbmNvZGVyID0gKF9hID0gb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLnRleHRFbmNvZGVyKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBuZXcgVGV4dEVuY29kZXIoKTtcbiAgICBjb25zdCB0ZXh0RGVjb2RlciA9IChfYiA9IG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy50ZXh0RGVjb2RlcikgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDogbmV3IFRleHREZWNvZGVyKCk7XG4gICAgY29uc3QgbyA9IGdldEpzb25PcHRpb25zKG9wdGlvbnMpO1xuICAgIHJldHVybiB7XG4gICAgICAgIHBhcnNlKGRhdGEpIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgY29uc3QganNvbiA9IHRleHREZWNvZGVyLmRlY29kZShkYXRhKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gbWVzc2FnZVR5cGUuZnJvbUpzb25TdHJpbmcoanNvbiwgbyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgIHRocm93IENvbm5lY3RFcnJvci5mcm9tKGUsIENvZGUuSW52YWxpZEFyZ3VtZW50KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgc2VyaWFsaXplKGRhdGEpIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgY29uc3QganNvbiA9IGRhdGEudG9Kc29uU3RyaW5nKG8pO1xuICAgICAgICAgICAgICAgIHJldHVybiB0ZXh0RW5jb2Rlci5lbmNvZGUoanNvbik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgIHRocm93IENvbm5lY3RFcnJvci5mcm9tKGUsIENvZGUuSW50ZXJuYWwpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/serialization.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/signals.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol/signals.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDeadlineSignal: () => (/* binding */ createDeadlineSignal),\n/* harmony export */   createLinkedAbortController: () => (/* binding */ createLinkedAbortController),\n/* harmony export */   getAbortSignalReason: () => (/* binding */ getAbortSignalReason)\n/* harmony export */ });\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../connect-error.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../code.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * Create an AbortController that is automatically aborted if one of the given\n * signals is aborted.\n *\n * For convenience, the linked AbortSignals can be undefined.\n *\n * If the controller or any of the signals is aborted, all event listeners are\n * removed.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction createLinkedAbortController(...signals) {\n    const controller = new AbortController();\n    const sa = signals.filter((s) => s !== undefined).concat(controller.signal);\n    for (const signal of sa) {\n        if (signal.aborted) {\n            onAbort.apply(signal);\n            break;\n        }\n        signal.addEventListener(\"abort\", onAbort);\n    }\n    function onAbort() {\n        if (!controller.signal.aborted) {\n            controller.abort(getAbortSignalReason(this));\n        }\n        for (const signal of sa) {\n            signal.removeEventListener(\"abort\", onAbort);\n        }\n    }\n    return controller;\n}\n/**\n * Create a deadline signal. The returned object contains an AbortSignal, but\n * also a cleanup function to stop the timer, which must be called once the\n * calling code is no longer interested in the signal.\n *\n * Ideally, we would simply use AbortSignal.timeout(), but it is not widely\n * available yet.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction createDeadlineSignal(timeoutMs) {\n    const controller = new AbortController();\n    const listener = () => {\n        controller.abort(new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(\"the operation timed out\", _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.DeadlineExceeded));\n    };\n    let timeoutId;\n    if (timeoutMs !== undefined) {\n        if (timeoutMs <= 0)\n            listener();\n        else\n            timeoutId = setTimeout(listener, timeoutMs);\n    }\n    return {\n        signal: controller.signal,\n        cleanup: () => clearTimeout(timeoutId),\n    };\n}\n/**\n * Returns the reason why an AbortSignal was aborted. Returns undefined if the\n * signal has not been aborted.\n *\n * The property AbortSignal.reason is not widely available. This function\n * returns an AbortError if the signal is aborted, but reason is undefined.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction getAbortSignalReason(signal) {\n    if (!signal.aborted) {\n        return undefined;\n    }\n    if (signal.reason !== undefined) {\n        return signal.reason;\n    }\n    // AbortSignal.reason is available in Node.js v16, v18, and later,\n    // and in all browsers since early 2022.\n    const e = new Error(\"This operation was aborted\");\n    e.name = \"AbortError\";\n    return e;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC9zaWduYWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDbUQ7QUFDakI7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLDZCQUE2QiwyREFBWSw0QkFBNEIsMENBQUk7QUFDekU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BlLWNvL2V0aG9zLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0Bjb25uZWN0cnBjL2Nvbm5lY3QvZGlzdC9lc20vcHJvdG9jb2wvc2lnbmFscy5qcz81NTU3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgVGhlIENvbm5lY3QgQXV0aG9yc1xuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5pbXBvcnQgeyBDb25uZWN0RXJyb3IgfSBmcm9tIFwiLi4vY29ubmVjdC1lcnJvci5qc1wiO1xuaW1wb3J0IHsgQ29kZSB9IGZyb20gXCIuLi9jb2RlLmpzXCI7XG4vKipcbiAqIENyZWF0ZSBhbiBBYm9ydENvbnRyb2xsZXIgdGhhdCBpcyBhdXRvbWF0aWNhbGx5IGFib3J0ZWQgaWYgb25lIG9mIHRoZSBnaXZlblxuICogc2lnbmFscyBpcyBhYm9ydGVkLlxuICpcbiAqIEZvciBjb252ZW5pZW5jZSwgdGhlIGxpbmtlZCBBYm9ydFNpZ25hbHMgY2FuIGJlIHVuZGVmaW5lZC5cbiAqXG4gKiBJZiB0aGUgY29udHJvbGxlciBvciBhbnkgb2YgdGhlIHNpZ25hbHMgaXMgYWJvcnRlZCwgYWxsIGV2ZW50IGxpc3RlbmVycyBhcmVcbiAqIHJlbW92ZWQuXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVMaW5rZWRBYm9ydENvbnRyb2xsZXIoLi4uc2lnbmFscykge1xuICAgIGNvbnN0IGNvbnRyb2xsZXIgPSBuZXcgQWJvcnRDb250cm9sbGVyKCk7XG4gICAgY29uc3Qgc2EgPSBzaWduYWxzLmZpbHRlcigocykgPT4gcyAhPT0gdW5kZWZpbmVkKS5jb25jYXQoY29udHJvbGxlci5zaWduYWwpO1xuICAgIGZvciAoY29uc3Qgc2lnbmFsIG9mIHNhKSB7XG4gICAgICAgIGlmIChzaWduYWwuYWJvcnRlZCkge1xuICAgICAgICAgICAgb25BYm9ydC5hcHBseShzaWduYWwpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgc2lnbmFsLmFkZEV2ZW50TGlzdGVuZXIoXCJhYm9ydFwiLCBvbkFib3J0KTtcbiAgICB9XG4gICAgZnVuY3Rpb24gb25BYm9ydCgpIHtcbiAgICAgICAgaWYgKCFjb250cm9sbGVyLnNpZ25hbC5hYm9ydGVkKSB7XG4gICAgICAgICAgICBjb250cm9sbGVyLmFib3J0KGdldEFib3J0U2lnbmFsUmVhc29uKHRoaXMpKTtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKGNvbnN0IHNpZ25hbCBvZiBzYSkge1xuICAgICAgICAgICAgc2lnbmFsLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJhYm9ydFwiLCBvbkFib3J0KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gY29udHJvbGxlcjtcbn1cbi8qKlxuICogQ3JlYXRlIGEgZGVhZGxpbmUgc2lnbmFsLiBUaGUgcmV0dXJuZWQgb2JqZWN0IGNvbnRhaW5zIGFuIEFib3J0U2lnbmFsLCBidXRcbiAqIGFsc28gYSBjbGVhbnVwIGZ1bmN0aW9uIHRvIHN0b3AgdGhlIHRpbWVyLCB3aGljaCBtdXN0IGJlIGNhbGxlZCBvbmNlIHRoZVxuICogY2FsbGluZyBjb2RlIGlzIG5vIGxvbmdlciBpbnRlcmVzdGVkIGluIHRoZSBzaWduYWwuXG4gKlxuICogSWRlYWxseSwgd2Ugd291bGQgc2ltcGx5IHVzZSBBYm9ydFNpZ25hbC50aW1lb3V0KCksIGJ1dCBpdCBpcyBub3Qgd2lkZWx5XG4gKiBhdmFpbGFibGUgeWV0LlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRGVhZGxpbmVTaWduYWwodGltZW91dE1zKSB7XG4gICAgY29uc3QgY29udHJvbGxlciA9IG5ldyBBYm9ydENvbnRyb2xsZXIoKTtcbiAgICBjb25zdCBsaXN0ZW5lciA9ICgpID0+IHtcbiAgICAgICAgY29udHJvbGxlci5hYm9ydChuZXcgQ29ubmVjdEVycm9yKFwidGhlIG9wZXJhdGlvbiB0aW1lZCBvdXRcIiwgQ29kZS5EZWFkbGluZUV4Y2VlZGVkKSk7XG4gICAgfTtcbiAgICBsZXQgdGltZW91dElkO1xuICAgIGlmICh0aW1lb3V0TXMgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBpZiAodGltZW91dE1zIDw9IDApXG4gICAgICAgICAgICBsaXN0ZW5lcigpO1xuICAgICAgICBlbHNlXG4gICAgICAgICAgICB0aW1lb3V0SWQgPSBzZXRUaW1lb3V0KGxpc3RlbmVyLCB0aW1lb3V0TXMpO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBzaWduYWw6IGNvbnRyb2xsZXIuc2lnbmFsLFxuICAgICAgICBjbGVhbnVwOiAoKSA9PiBjbGVhclRpbWVvdXQodGltZW91dElkKSxcbiAgICB9O1xufVxuLyoqXG4gKiBSZXR1cm5zIHRoZSByZWFzb24gd2h5IGFuIEFib3J0U2lnbmFsIHdhcyBhYm9ydGVkLiBSZXR1cm5zIHVuZGVmaW5lZCBpZiB0aGVcbiAqIHNpZ25hbCBoYXMgbm90IGJlZW4gYWJvcnRlZC5cbiAqXG4gKiBUaGUgcHJvcGVydHkgQWJvcnRTaWduYWwucmVhc29uIGlzIG5vdCB3aWRlbHkgYXZhaWxhYmxlLiBUaGlzIGZ1bmN0aW9uXG4gKiByZXR1cm5zIGFuIEFib3J0RXJyb3IgaWYgdGhlIHNpZ25hbCBpcyBhYm9ydGVkLCBidXQgcmVhc29uIGlzIHVuZGVmaW5lZC5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldEFib3J0U2lnbmFsUmVhc29uKHNpZ25hbCkge1xuICAgIGlmICghc2lnbmFsLmFib3J0ZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHNpZ25hbC5yZWFzb24gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gc2lnbmFsLnJlYXNvbjtcbiAgICB9XG4gICAgLy8gQWJvcnRTaWduYWwucmVhc29uIGlzIGF2YWlsYWJsZSBpbiBOb2RlLmpzIHYxNiwgdjE4LCBhbmQgbGF0ZXIsXG4gICAgLy8gYW5kIGluIGFsbCBicm93c2VycyBzaW5jZSBlYXJseSAyMDIyLlxuICAgIGNvbnN0IGUgPSBuZXcgRXJyb3IoXCJUaGlzIG9wZXJhdGlvbiB3YXMgYWJvcnRlZFwiKTtcbiAgICBlLm5hbWUgPSBcIkFib3J0RXJyb3JcIjtcbiAgICByZXR1cm4gZTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/signals.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/universal-handler-client.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol/universal-handler-client.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createUniversalHandlerClient: () => (/* binding */ createUniversalHandlerClient)\n/* harmony export */ });\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../code.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../connect-error.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _async_iterable_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./async-iterable.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/async-iterable.js\");\n/* harmony import */ var _signals_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./signals.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/signals.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n/**\n * An in-memory UniversalClientFn that can be used to route requests to a ConnectRouter\n * bypassing network calls. Useful for testing and calling in-process services.\n */\nfunction createUniversalHandlerClient(uHandlers) {\n    const handlerMap = new Map();\n    for (const handler of uHandlers) {\n        handlerMap.set(handler.requestPath, handler);\n    }\n    return async (uClientReq) => {\n        var _a, _b, _c;\n        const pathname = new URL(uClientReq.url).pathname;\n        const handler = handlerMap.get(pathname);\n        if (!handler) {\n            throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(`RouterHttpClient: no handler registered for ${pathname}`, _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.Unimplemented);\n        }\n        const reqSignal = (_a = uClientReq.signal) !== null && _a !== void 0 ? _a : new AbortController().signal;\n        const uServerRes = await raceSignal(reqSignal, handler({\n            body: (_b = uClientReq.body) !== null && _b !== void 0 ? _b : (0,_async_iterable_js__WEBPACK_IMPORTED_MODULE_2__.createAsyncIterable)([]),\n            httpVersion: \"2.0\",\n            method: uClientReq.method,\n            url: uClientReq.url,\n            header: uClientReq.header,\n            signal: reqSignal,\n        }));\n        const body = (_c = uServerRes.body) !== null && _c !== void 0 ? _c : (0,_async_iterable_js__WEBPACK_IMPORTED_MODULE_2__.createAsyncIterable)([]);\n        return {\n            body: (0,_async_iterable_js__WEBPACK_IMPORTED_MODULE_2__.pipe)(body, (iterable) => {\n                return {\n                    [Symbol.asyncIterator]() {\n                        const it = iterable[Symbol.asyncIterator]();\n                        const w = {\n                            next() {\n                                return raceSignal(reqSignal, it.next());\n                            },\n                        };\n                        if (it.throw !== undefined) {\n                            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- can't handle mutated object sensibly\n                            w.throw = (e) => it.throw(e);\n                        }\n                        if (it.return !== undefined) {\n                            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion,@typescript-eslint/no-explicit-any -- can't handle mutated object sensibly\n                            w.return = (value) => it.return(value);\n                        }\n                        return w;\n                    },\n                };\n            }),\n            header: new Headers(uServerRes.header),\n            status: uServerRes.status,\n            trailer: new Headers(uServerRes.trailer),\n        };\n    };\n}\n/**\n * Wrap a promise, and reject early if the given signal triggers before the\n * promise is settled.\n */\nfunction raceSignal(signal, promise) {\n    let cleanup;\n    const signalPromise = new Promise((_, reject) => {\n        const onAbort = () => reject((0,_signals_js__WEBPACK_IMPORTED_MODULE_3__.getAbortSignalReason)(signal));\n        if (signal.aborted) {\n            return onAbort();\n        }\n        signal.addEventListener(\"abort\", onAbort);\n        cleanup = () => signal.removeEventListener(\"abort\", onAbort);\n    });\n    return Promise.race([signalPromise, promise]).finally(cleanup);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC91bml2ZXJzYWwtaGFuZGxlci1jbGllbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNrQztBQUNpQjtBQUNhO0FBQ1o7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiwyREFBWSxnREFBZ0QsU0FBUyxHQUFHLDBDQUFJO0FBQ2xHO0FBQ0E7QUFDQTtBQUNBLDBFQUEwRSx1RUFBbUI7QUFDN0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCw2RUFBNkUsdUVBQW1CO0FBQ2hHO0FBQ0Esa0JBQWtCLHdEQUFJO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQyxpRUFBb0I7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGUtY28vZXRob3MtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC91bml2ZXJzYWwtaGFuZGxlci1jbGllbnQuanM/YWM1NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuaW1wb3J0IHsgQ29kZSB9IGZyb20gXCIuLi9jb2RlLmpzXCI7XG5pbXBvcnQgeyBDb25uZWN0RXJyb3IgfSBmcm9tIFwiLi4vY29ubmVjdC1lcnJvci5qc1wiO1xuaW1wb3J0IHsgY3JlYXRlQXN5bmNJdGVyYWJsZSwgcGlwZSB9IGZyb20gXCIuL2FzeW5jLWl0ZXJhYmxlLmpzXCI7XG5pbXBvcnQgeyBnZXRBYm9ydFNpZ25hbFJlYXNvbiB9IGZyb20gXCIuL3NpZ25hbHMuanNcIjtcbi8qKlxuICogQW4gaW4tbWVtb3J5IFVuaXZlcnNhbENsaWVudEZuIHRoYXQgY2FuIGJlIHVzZWQgdG8gcm91dGUgcmVxdWVzdHMgdG8gYSBDb25uZWN0Um91dGVyXG4gKiBieXBhc3NpbmcgbmV0d29yayBjYWxscy4gVXNlZnVsIGZvciB0ZXN0aW5nIGFuZCBjYWxsaW5nIGluLXByb2Nlc3Mgc2VydmljZXMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVVbml2ZXJzYWxIYW5kbGVyQ2xpZW50KHVIYW5kbGVycykge1xuICAgIGNvbnN0IGhhbmRsZXJNYXAgPSBuZXcgTWFwKCk7XG4gICAgZm9yIChjb25zdCBoYW5kbGVyIG9mIHVIYW5kbGVycykge1xuICAgICAgICBoYW5kbGVyTWFwLnNldChoYW5kbGVyLnJlcXVlc3RQYXRoLCBoYW5kbGVyKTtcbiAgICB9XG4gICAgcmV0dXJuIGFzeW5jICh1Q2xpZW50UmVxKSA9PiB7XG4gICAgICAgIHZhciBfYSwgX2IsIF9jO1xuICAgICAgICBjb25zdCBwYXRobmFtZSA9IG5ldyBVUkwodUNsaWVudFJlcS51cmwpLnBhdGhuYW1lO1xuICAgICAgICBjb25zdCBoYW5kbGVyID0gaGFuZGxlck1hcC5nZXQocGF0aG5hbWUpO1xuICAgICAgICBpZiAoIWhhbmRsZXIpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBDb25uZWN0RXJyb3IoYFJvdXRlckh0dHBDbGllbnQ6IG5vIGhhbmRsZXIgcmVnaXN0ZXJlZCBmb3IgJHtwYXRobmFtZX1gLCBDb2RlLlVuaW1wbGVtZW50ZWQpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHJlcVNpZ25hbCA9IChfYSA9IHVDbGllbnRSZXEuc2lnbmFsKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBuZXcgQWJvcnRDb250cm9sbGVyKCkuc2lnbmFsO1xuICAgICAgICBjb25zdCB1U2VydmVyUmVzID0gYXdhaXQgcmFjZVNpZ25hbChyZXFTaWduYWwsIGhhbmRsZXIoe1xuICAgICAgICAgICAgYm9keTogKF9iID0gdUNsaWVudFJlcS5ib2R5KSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiBjcmVhdGVBc3luY0l0ZXJhYmxlKFtdKSxcbiAgICAgICAgICAgIGh0dHBWZXJzaW9uOiBcIjIuMFwiLFxuICAgICAgICAgICAgbWV0aG9kOiB1Q2xpZW50UmVxLm1ldGhvZCxcbiAgICAgICAgICAgIHVybDogdUNsaWVudFJlcS51cmwsXG4gICAgICAgICAgICBoZWFkZXI6IHVDbGllbnRSZXEuaGVhZGVyLFxuICAgICAgICAgICAgc2lnbmFsOiByZXFTaWduYWwsXG4gICAgICAgIH0pKTtcbiAgICAgICAgY29uc3QgYm9keSA9IChfYyA9IHVTZXJ2ZXJSZXMuYm9keSkgIT09IG51bGwgJiYgX2MgIT09IHZvaWQgMCA/IF9jIDogY3JlYXRlQXN5bmNJdGVyYWJsZShbXSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBib2R5OiBwaXBlKGJvZHksIChpdGVyYWJsZSkgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIFtTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBpdCA9IGl0ZXJhYmxlW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdyA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXh0KCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmFjZVNpZ25hbChyZXFTaWduYWwsIGl0Lm5leHQoKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXQudGhyb3cgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tbm9uLW51bGwtYXNzZXJ0aW9uIC0tIGNhbid0IGhhbmRsZSBtdXRhdGVkIG9iamVjdCBzZW5zaWJseVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHcudGhyb3cgPSAoZSkgPT4gaXQudGhyb3coZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXQucmV0dXJuICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLW5vbi1udWxsLWFzc2VydGlvbixAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55IC0tIGNhbid0IGhhbmRsZSBtdXRhdGVkIG9iamVjdCBzZW5zaWJseVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHcucmV0dXJuID0gKHZhbHVlKSA9PiBpdC5yZXR1cm4odmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHc7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgaGVhZGVyOiBuZXcgSGVhZGVycyh1U2VydmVyUmVzLmhlYWRlciksXG4gICAgICAgICAgICBzdGF0dXM6IHVTZXJ2ZXJSZXMuc3RhdHVzLFxuICAgICAgICAgICAgdHJhaWxlcjogbmV3IEhlYWRlcnModVNlcnZlclJlcy50cmFpbGVyKSxcbiAgICAgICAgfTtcbiAgICB9O1xufVxuLyoqXG4gKiBXcmFwIGEgcHJvbWlzZSwgYW5kIHJlamVjdCBlYXJseSBpZiB0aGUgZ2l2ZW4gc2lnbmFsIHRyaWdnZXJzIGJlZm9yZSB0aGVcbiAqIHByb21pc2UgaXMgc2V0dGxlZC5cbiAqL1xuZnVuY3Rpb24gcmFjZVNpZ25hbChzaWduYWwsIHByb21pc2UpIHtcbiAgICBsZXQgY2xlYW51cDtcbiAgICBjb25zdCBzaWduYWxQcm9taXNlID0gbmV3IFByb21pc2UoKF8sIHJlamVjdCkgPT4ge1xuICAgICAgICBjb25zdCBvbkFib3J0ID0gKCkgPT4gcmVqZWN0KGdldEFib3J0U2lnbmFsUmVhc29uKHNpZ25hbCkpO1xuICAgICAgICBpZiAoc2lnbmFsLmFib3J0ZWQpIHtcbiAgICAgICAgICAgIHJldHVybiBvbkFib3J0KCk7XG4gICAgICAgIH1cbiAgICAgICAgc2lnbmFsLmFkZEV2ZW50TGlzdGVuZXIoXCJhYm9ydFwiLCBvbkFib3J0KTtcbiAgICAgICAgY2xlYW51cCA9ICgpID0+IHNpZ25hbC5yZW1vdmVFdmVudExpc3RlbmVyKFwiYWJvcnRcIiwgb25BYm9ydCk7XG4gICAgfSk7XG4gICAgcmV0dXJuIFByb21pc2UucmFjZShbc2lnbmFsUHJvbWlzZSwgcHJvbWlzZV0pLmZpbmFsbHkoY2xlYW51cCk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/universal-handler-client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/universal-handler.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol/universal-handler.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createUniversalMethodHandler: () => (/* binding */ createUniversalMethodHandler),\n/* harmony export */   createUniversalServiceHandlers: () => (/* binding */ createUniversalServiceHandlers),\n/* harmony export */   negotiateProtocol: () => (/* binding */ negotiateProtocol),\n/* harmony export */   validateUniversalHandlerOptions: () => (/* binding */ validateUniversalHandlerOptions)\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @bufbuild/protobuf */ \"(ssr)/./node_modules/@bufbuild/protobuf/dist/esm/service-type.js\");\n/* harmony import */ var _universal_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./universal.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/universal.js\");\n/* harmony import */ var _content_type_matcher_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./content-type-matcher.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/content-type-matcher.js\");\n/* harmony import */ var _limit_io_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./limit-io.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/limit-io.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../connect-error.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../code.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n/**\n * Asserts that the options are within sane limits, and returns default values\n * where no value is provided.\n *\n * Note that this function does not set default values for `acceptCompression`.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction validateUniversalHandlerOptions(opt) {\n    var _a, _b, _c;\n    opt !== null && opt !== void 0 ? opt : (opt = {});\n    const acceptCompression = opt.acceptCompression\n        ? [...opt.acceptCompression]\n        : [];\n    const requireConnectProtocolHeader = (_a = opt.requireConnectProtocolHeader) !== null && _a !== void 0 ? _a : false;\n    const maxTimeoutMs = (_b = opt.maxTimeoutMs) !== null && _b !== void 0 ? _b : Number.MAX_SAFE_INTEGER;\n    return Object.assign(Object.assign({ acceptCompression }, (0,_limit_io_js__WEBPACK_IMPORTED_MODULE_0__.validateReadWriteMaxBytes)(opt.readMaxBytes, opt.writeMaxBytes, opt.compressMinBytes)), { jsonOptions: opt.jsonOptions, binaryOptions: opt.binaryOptions, maxTimeoutMs, shutdownSignal: opt.shutdownSignal, requireConnectProtocolHeader, interceptors: (_c = opt.interceptors) !== null && _c !== void 0 ? _c : [] });\n}\n/**\n * For the given service implementation, return a universal handler for each\n * RPC. The handler serves the given protocols.\n *\n * At least one protocol is required.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction createUniversalServiceHandlers(spec, protocols) {\n    return Object.entries(spec.methods).map(([, implSpec]) => createUniversalMethodHandler(implSpec, protocols));\n}\n/**\n * Return a universal handler for the given RPC implementation.\n * The handler serves the given protocols.\n *\n * At least one protocol is required.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction createUniversalMethodHandler(spec, protocols) {\n    return negotiateProtocol(protocols.map((f) => f(spec)));\n}\n/**\n * Create a universal handler that negotiates the protocol.\n *\n * This functions takes one or more handlers - all for the same RPC, but for\n * different protocols - and returns a single handler that looks at the\n * Content-Type header and the HTTP verb of the incoming request to select\n * the appropriate protocol-specific handler.\n *\n * Raises an error if no protocol handlers were provided, or if they do not\n * handle exactly the same RPC.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction negotiateProtocol(protocolHandlers) {\n    if (protocolHandlers.length == 0) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_1__.ConnectError(\"at least one protocol is required\", _code_js__WEBPACK_IMPORTED_MODULE_2__.Code.Internal);\n    }\n    const service = protocolHandlers[0].service;\n    const method = protocolHandlers[0].method;\n    const requestPath = protocolHandlers[0].requestPath;\n    if (protocolHandlers.some((h) => h.service !== service || h.method !== method)) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_1__.ConnectError(\"cannot negotiate protocol for different RPCs\", _code_js__WEBPACK_IMPORTED_MODULE_2__.Code.Internal);\n    }\n    if (protocolHandlers.some((h) => h.requestPath !== requestPath)) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_1__.ConnectError(\"cannot negotiate protocol for different requestPaths\", _code_js__WEBPACK_IMPORTED_MODULE_2__.Code.Internal);\n    }\n    async function protocolNegotiatingHandler(request) {\n        var _a;\n        if (method.kind == _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_3__.MethodKind.BiDiStreaming &&\n            request.httpVersion.startsWith(\"1.\")) {\n            return Object.assign(Object.assign({}, _universal_js__WEBPACK_IMPORTED_MODULE_4__.uResponseVersionNotSupported), { \n                // Clients coded to expect full-duplex connections may hang if they've\n                // mistakenly negotiated HTTP/1.1. To unblock them, we must close the\n                // underlying TCP connection.\n                header: new Headers({ Connection: \"close\" }) });\n        }\n        const contentType = (_a = request.header.get(\"Content-Type\")) !== null && _a !== void 0 ? _a : \"\";\n        const matchingMethod = protocolHandlers.filter((h) => h.allowedMethods.includes(request.method));\n        if (matchingMethod.length == 0) {\n            return _universal_js__WEBPACK_IMPORTED_MODULE_4__.uResponseMethodNotAllowed;\n        }\n        // If Content-Type is unset but only one handler matches, use it.\n        if (matchingMethod.length == 1 && contentType === \"\") {\n            const onlyMatch = matchingMethod[0];\n            return onlyMatch(request);\n        }\n        const matchingContentTypes = matchingMethod.filter((h) => h.supportedContentType(contentType));\n        if (matchingContentTypes.length == 0) {\n            return _universal_js__WEBPACK_IMPORTED_MODULE_4__.uResponseUnsupportedMediaType;\n        }\n        const firstMatch = matchingContentTypes[0];\n        return firstMatch(request);\n    }\n    return Object.assign(protocolNegotiatingHandler, {\n        service,\n        method,\n        requestPath,\n        supportedContentType: (0,_content_type_matcher_js__WEBPACK_IMPORTED_MODULE_5__.contentTypeMatcher)(...protocolHandlers.map((h) => h.supportedContentType)),\n        protocolNames: protocolHandlers\n            .flatMap((h) => h.protocolNames)\n            .filter((value, index, array) => array.indexOf(value) === index),\n        allowedMethods: protocolHandlers\n            .flatMap((h) => h.allowedMethods)\n            .filter((value, index, array) => array.indexOf(value) === index),\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/universal-handler.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/universal.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol/universal.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertByteStreamRequest: () => (/* binding */ assertByteStreamRequest),\n/* harmony export */   uResponseMethodNotAllowed: () => (/* binding */ uResponseMethodNotAllowed),\n/* harmony export */   uResponseNotFound: () => (/* binding */ uResponseNotFound),\n/* harmony export */   uResponseOk: () => (/* binding */ uResponseOk),\n/* harmony export */   uResponseUnsupportedMediaType: () => (/* binding */ uResponseUnsupportedMediaType),\n/* harmony export */   uResponseVersionNotSupported: () => (/* binding */ uResponseVersionNotSupported)\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Assert that the given UniversalServerRequest has a byte stream body, not\n * a JSON value.\n *\n * We accept a JSON object or a byte stream in server requests.\n * In practice, only Connect unary handlers will receive a parse\n * JSON object. Other call-sites can use this assertion to narrow\n * the union type. A failure in such a call-sites indicates that\n * the contract between a server framework and the connect-node \\\n * handler is broken.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction assertByteStreamRequest(req) {\n    if (typeof req.body == \"object\" &&\n        req.body !== null &&\n        Symbol.asyncIterator in req.body) {\n        return;\n    }\n    throw new Error(\"byte stream required, but received JSON\");\n}\n/**\n * HTTP 200 OK\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst uResponseOk = {\n    status: 200,\n};\n/**\n * HTTP 404 Not Found\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst uResponseNotFound = {\n    status: 404,\n};\n/**\n * HTTP 415 Unsupported Media Type\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst uResponseUnsupportedMediaType = {\n    status: 415,\n};\n/**\n * HTTP 405 Method Not Allowed\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst uResponseMethodNotAllowed = {\n    status: 405,\n};\n/**\n * HTTP 505 Version Not Supported\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst uResponseVersionNotSupported = {\n    status: 505,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC91bml2ZXJzYWwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BlLWNvL2V0aG9zLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0Bjb25uZWN0cnBjL2Nvbm5lY3QvZGlzdC9lc20vcHJvdG9jb2wvdW5pdmVyc2FsLmpzPzkwYWUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbi8qKlxuICogQXNzZXJ0IHRoYXQgdGhlIGdpdmVuIFVuaXZlcnNhbFNlcnZlclJlcXVlc3QgaGFzIGEgYnl0ZSBzdHJlYW0gYm9keSwgbm90XG4gKiBhIEpTT04gdmFsdWUuXG4gKlxuICogV2UgYWNjZXB0IGEgSlNPTiBvYmplY3Qgb3IgYSBieXRlIHN0cmVhbSBpbiBzZXJ2ZXIgcmVxdWVzdHMuXG4gKiBJbiBwcmFjdGljZSwgb25seSBDb25uZWN0IHVuYXJ5IGhhbmRsZXJzIHdpbGwgcmVjZWl2ZSBhIHBhcnNlXG4gKiBKU09OIG9iamVjdC4gT3RoZXIgY2FsbC1zaXRlcyBjYW4gdXNlIHRoaXMgYXNzZXJ0aW9uIHRvIG5hcnJvd1xuICogdGhlIHVuaW9uIHR5cGUuIEEgZmFpbHVyZSBpbiBzdWNoIGEgY2FsbC1zaXRlcyBpbmRpY2F0ZXMgdGhhdFxuICogdGhlIGNvbnRyYWN0IGJldHdlZW4gYSBzZXJ2ZXIgZnJhbWV3b3JrIGFuZCB0aGUgY29ubmVjdC1ub2RlIFxcXG4gKiBoYW5kbGVyIGlzIGJyb2tlbi5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydEJ5dGVTdHJlYW1SZXF1ZXN0KHJlcSkge1xuICAgIGlmICh0eXBlb2YgcmVxLmJvZHkgPT0gXCJvYmplY3RcIiAmJlxuICAgICAgICByZXEuYm9keSAhPT0gbnVsbCAmJlxuICAgICAgICBTeW1ib2wuYXN5bmNJdGVyYXRvciBpbiByZXEuYm9keSkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIHRocm93IG5ldyBFcnJvcihcImJ5dGUgc3RyZWFtIHJlcXVpcmVkLCBidXQgcmVjZWl2ZWQgSlNPTlwiKTtcbn1cbi8qKlxuICogSFRUUCAyMDAgT0tcbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGNvbnN0IHVSZXNwb25zZU9rID0ge1xuICAgIHN0YXR1czogMjAwLFxufTtcbi8qKlxuICogSFRUUCA0MDQgTm90IEZvdW5kXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBjb25zdCB1UmVzcG9uc2VOb3RGb3VuZCA9IHtcbiAgICBzdGF0dXM6IDQwNCxcbn07XG4vKipcbiAqIEhUVFAgNDE1IFVuc3VwcG9ydGVkIE1lZGlhIFR5cGVcbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGNvbnN0IHVSZXNwb25zZVVuc3VwcG9ydGVkTWVkaWFUeXBlID0ge1xuICAgIHN0YXR1czogNDE1LFxufTtcbi8qKlxuICogSFRUUCA0MDUgTWV0aG9kIE5vdCBBbGxvd2VkXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBjb25zdCB1UmVzcG9uc2VNZXRob2ROb3RBbGxvd2VkID0ge1xuICAgIHN0YXR1czogNDA1LFxufTtcbi8qKlxuICogSFRUUCA1MDUgVmVyc2lvbiBOb3QgU3VwcG9ydGVkXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBjb25zdCB1UmVzcG9uc2VWZXJzaW9uTm90U3VwcG9ydGVkID0ge1xuICAgIHN0YXR1czogNTA1LFxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/universal.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/router-transport.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/router-transport.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createRouterTransport: () => (/* binding */ createRouterTransport)\n/* harmony export */ });\n/* harmony import */ var _protocol_connect_transport_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./protocol-connect/transport.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/transport.js\");\n/* harmony import */ var _protocol_universal_handler_client_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./protocol/universal-handler-client.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/universal-handler-client.js\");\n/* harmony import */ var _router_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./router.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/router.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n/**\n * Creates a Transport that routes requests to the configured router. Useful for testing\n * and calling services running in the same process.\n *\n * This can be used to test both client logic by using this to stub/mock the backend,\n * and to test server logic by using this to run without needing to spin up a server.\n */\nfunction createRouterTransport(routes, options) {\n    var _a, _b;\n    const router = (0,_router_js__WEBPACK_IMPORTED_MODULE_0__.createConnectRouter)(Object.assign(Object.assign({}, ((_a = options === null || options === void 0 ? void 0 : options.router) !== null && _a !== void 0 ? _a : {})), { connect: true }));\n    routes(router);\n    return (0,_protocol_connect_transport_js__WEBPACK_IMPORTED_MODULE_1__.createTransport)(Object.assign({ httpClient: (0,_protocol_universal_handler_client_js__WEBPACK_IMPORTED_MODULE_2__.createUniversalHandlerClient)(router.handlers), baseUrl: \"https://in-memory\", useBinaryFormat: true, interceptors: [], acceptCompression: [], sendCompression: null, compressMinBytes: Number.MAX_SAFE_INTEGER, readMaxBytes: Number.MAX_SAFE_INTEGER, writeMaxBytes: Number.MAX_SAFE_INTEGER }, ((_b = options === null || options === void 0 ? void 0 : options.transport) !== null && _b !== void 0 ? _b : {})));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9yb3V0ZXItdHJhbnNwb3J0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNrRTtBQUNvQjtBQUNwQztBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxtQkFBbUIsK0RBQW1CLCtCQUErQiw4R0FBOEcsTUFBTSxlQUFlO0FBQ3hNO0FBQ0EsV0FBVywrRUFBZSxpQkFBaUIsWUFBWSxtR0FBNEIsa1FBQWtRLGlIQUFpSDtBQUN0YyIsInNvdXJjZXMiOlsid2VicGFjazovL0BlLWNvL2V0aG9zLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0Bjb25uZWN0cnBjL2Nvbm5lY3QvZGlzdC9lc20vcm91dGVyLXRyYW5zcG9ydC5qcz9kNmM1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgVGhlIENvbm5lY3QgQXV0aG9yc1xuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5pbXBvcnQgeyBjcmVhdGVUcmFuc3BvcnQgfSBmcm9tIFwiLi9wcm90b2NvbC1jb25uZWN0L3RyYW5zcG9ydC5qc1wiO1xuaW1wb3J0IHsgY3JlYXRlVW5pdmVyc2FsSGFuZGxlckNsaWVudCB9IGZyb20gXCIuL3Byb3RvY29sL3VuaXZlcnNhbC1oYW5kbGVyLWNsaWVudC5qc1wiO1xuaW1wb3J0IHsgY3JlYXRlQ29ubmVjdFJvdXRlciB9IGZyb20gXCIuL3JvdXRlci5qc1wiO1xuLyoqXG4gKiBDcmVhdGVzIGEgVHJhbnNwb3J0IHRoYXQgcm91dGVzIHJlcXVlc3RzIHRvIHRoZSBjb25maWd1cmVkIHJvdXRlci4gVXNlZnVsIGZvciB0ZXN0aW5nXG4gKiBhbmQgY2FsbGluZyBzZXJ2aWNlcyBydW5uaW5nIGluIHRoZSBzYW1lIHByb2Nlc3MuXG4gKlxuICogVGhpcyBjYW4gYmUgdXNlZCB0byB0ZXN0IGJvdGggY2xpZW50IGxvZ2ljIGJ5IHVzaW5nIHRoaXMgdG8gc3R1Yi9tb2NrIHRoZSBiYWNrZW5kLFxuICogYW5kIHRvIHRlc3Qgc2VydmVyIGxvZ2ljIGJ5IHVzaW5nIHRoaXMgdG8gcnVuIHdpdGhvdXQgbmVlZGluZyB0byBzcGluIHVwIGEgc2VydmVyLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlUm91dGVyVHJhbnNwb3J0KHJvdXRlcywgb3B0aW9ucykge1xuICAgIHZhciBfYSwgX2I7XG4gICAgY29uc3Qgcm91dGVyID0gY3JlYXRlQ29ubmVjdFJvdXRlcihPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sICgoX2EgPSBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMucm91dGVyKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiB7fSkpLCB7IGNvbm5lY3Q6IHRydWUgfSkpO1xuICAgIHJvdXRlcyhyb3V0ZXIpO1xuICAgIHJldHVybiBjcmVhdGVUcmFuc3BvcnQoT2JqZWN0LmFzc2lnbih7IGh0dHBDbGllbnQ6IGNyZWF0ZVVuaXZlcnNhbEhhbmRsZXJDbGllbnQocm91dGVyLmhhbmRsZXJzKSwgYmFzZVVybDogXCJodHRwczovL2luLW1lbW9yeVwiLCB1c2VCaW5hcnlGb3JtYXQ6IHRydWUsIGludGVyY2VwdG9yczogW10sIGFjY2VwdENvbXByZXNzaW9uOiBbXSwgc2VuZENvbXByZXNzaW9uOiBudWxsLCBjb21wcmVzc01pbkJ5dGVzOiBOdW1iZXIuTUFYX1NBRkVfSU5URUdFUiwgcmVhZE1heEJ5dGVzOiBOdW1iZXIuTUFYX1NBRkVfSU5URUdFUiwgd3JpdGVNYXhCeXRlczogTnVtYmVyLk1BWF9TQUZFX0lOVEVHRVIgfSwgKChfYiA9IG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy50cmFuc3BvcnQpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IHt9KSkpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/router-transport.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@connectrpc/connect/dist/esm/router.js":
/*!*************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/router.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createConnectRouter: () => (/* binding */ createConnectRouter)\n/* harmony export */ });\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./connect-error.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./code.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _implementation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./implementation.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/implementation.js\");\n/* harmony import */ var _protocol_grpc_web_handler_factory_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./protocol-grpc-web/handler-factory.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/handler-factory.js\");\n/* harmony import */ var _protocol_grpc_handler_factory_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./protocol-grpc/handler-factory.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/handler-factory.js\");\n/* harmony import */ var _protocol_connect_handler_factory_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./protocol-connect/handler-factory.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/handler-factory.js\");\n/* harmony import */ var _protocol_universal_handler_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./protocol/universal-handler.js */ \"(ssr)/./node_modules/@connectrpc/connect/dist/esm/protocol/universal-handler.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n\n/**\n * Create a new ConnectRouter.\n */\nfunction createConnectRouter(routerOptions) {\n    const base = whichProtocols(routerOptions);\n    const handlers = [];\n    return {\n        handlers,\n        service(service, implementation, options) {\n            const { protocols } = whichProtocols(options, base);\n            handlers.push(...(0,_protocol_universal_handler_js__WEBPACK_IMPORTED_MODULE_0__.createUniversalServiceHandlers)((0,_implementation_js__WEBPACK_IMPORTED_MODULE_1__.createServiceImplSpec)(service, implementation), protocols));\n            return this;\n        },\n        rpc(serviceOrMethod, methodOrImpl, implementationOrOptions, options) {\n            let service;\n            let method;\n            let impl;\n            let opt;\n            if (\"typeName\" in serviceOrMethod) {\n                service = serviceOrMethod;\n                method = methodOrImpl;\n                impl = implementationOrOptions;\n                opt = options;\n            }\n            else {\n                service = Object.assign(Object.assign({}, serviceOrMethod.service), { methods: {} });\n                method = serviceOrMethod;\n                impl = methodOrImpl;\n                opt = implementationOrOptions;\n            }\n            const { protocols } = whichProtocols(opt, base);\n            handlers.push((0,_protocol_universal_handler_js__WEBPACK_IMPORTED_MODULE_0__.createUniversalMethodHandler)((0,_implementation_js__WEBPACK_IMPORTED_MODULE_1__.createMethodImplSpec)(service, method, impl), protocols));\n            return this;\n        },\n    };\n}\nfunction whichProtocols(options, base) {\n    if (base && !options) {\n        return base;\n    }\n    const opt = base\n        ? Object.assign(Object.assign({}, (0,_protocol_universal_handler_js__WEBPACK_IMPORTED_MODULE_0__.validateUniversalHandlerOptions)(base.options)), options) : Object.assign(Object.assign({}, options), (0,_protocol_universal_handler_js__WEBPACK_IMPORTED_MODULE_0__.validateUniversalHandlerOptions)(options !== null && options !== void 0 ? options : {}));\n    const protocols = [];\n    if ((options === null || options === void 0 ? void 0 : options.grpc) !== false) {\n        protocols.push((0,_protocol_grpc_handler_factory_js__WEBPACK_IMPORTED_MODULE_2__.createHandlerFactory)(opt));\n    }\n    if ((options === null || options === void 0 ? void 0 : options.grpcWeb) !== false) {\n        protocols.push((0,_protocol_grpc_web_handler_factory_js__WEBPACK_IMPORTED_MODULE_3__.createHandlerFactory)(opt));\n    }\n    if ((options === null || options === void 0 ? void 0 : options.connect) !== false) {\n        protocols.push((0,_protocol_connect_handler_factory_js__WEBPACK_IMPORTED_MODULE_4__.createHandlerFactory)(opt));\n    }\n    if (protocols.length === 0) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_5__.ConnectError(\"cannot create handler, all protocols are disabled\", _code_js__WEBPACK_IMPORTED_MODULE_6__.Code.InvalidArgument);\n    }\n    return {\n        options: opt,\n        protocols,\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9yb3V0ZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNrRDtBQUNqQjtBQUNrRDtBQUNvQjtBQUNQO0FBQ007QUFDMkM7QUFDako7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLFlBQVk7QUFDaEMsNkJBQTZCLDhGQUE4QixDQUFDLHlFQUFxQjtBQUNqRjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3REFBd0QsOEJBQThCLGFBQWE7QUFDbkc7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsWUFBWTtBQUNoQywwQkFBMEIsNEZBQTRCLENBQUMsd0VBQW9CO0FBQzNFO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLEVBQUUsK0ZBQStCLDBEQUEwRCxZQUFZLCtGQUErQixzREFBc0Q7QUFDcE87QUFDQTtBQUNBLHVCQUF1Qix1RkFBa0I7QUFDekM7QUFDQTtBQUNBLHVCQUF1QiwyRkFBcUI7QUFDNUM7QUFDQTtBQUNBLHVCQUF1QiwwRkFBcUI7QUFDNUM7QUFDQTtBQUNBLGtCQUFrQiwyREFBWSxzREFBc0QsMENBQUk7QUFDeEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGUtY28vZXRob3MtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9yb3V0ZXIuanM/MzY1NiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuaW1wb3J0IHsgQ29ubmVjdEVycm9yIH0gZnJvbSBcIi4vY29ubmVjdC1lcnJvci5qc1wiO1xuaW1wb3J0IHsgQ29kZSB9IGZyb20gXCIuL2NvZGUuanNcIjtcbmltcG9ydCB7IGNyZWF0ZU1ldGhvZEltcGxTcGVjLCBjcmVhdGVTZXJ2aWNlSW1wbFNwZWMsIH0gZnJvbSBcIi4vaW1wbGVtZW50YXRpb24uanNcIjtcbmltcG9ydCB7IGNyZWF0ZUhhbmRsZXJGYWN0b3J5IGFzIGhhbmRsZXJGYWN0b3J5R3JwY1dlYiB9IGZyb20gXCIuL3Byb3RvY29sLWdycGMtd2ViL2hhbmRsZXItZmFjdG9yeS5qc1wiO1xuaW1wb3J0IHsgY3JlYXRlSGFuZGxlckZhY3RvcnkgYXMgaGFuZGxlckZhY3RvcnlHcnBjIH0gZnJvbSBcIi4vcHJvdG9jb2wtZ3JwYy9oYW5kbGVyLWZhY3RvcnkuanNcIjtcbmltcG9ydCB7IGNyZWF0ZUhhbmRsZXJGYWN0b3J5IGFzIGhhbmRsZXJGYWN0b3J5Q29ubmVjdCB9IGZyb20gXCIuL3Byb3RvY29sLWNvbm5lY3QvaGFuZGxlci1mYWN0b3J5LmpzXCI7XG5pbXBvcnQgeyBjcmVhdGVVbml2ZXJzYWxNZXRob2RIYW5kbGVyLCBjcmVhdGVVbml2ZXJzYWxTZXJ2aWNlSGFuZGxlcnMsIHZhbGlkYXRlVW5pdmVyc2FsSGFuZGxlck9wdGlvbnMsIH0gZnJvbSBcIi4vcHJvdG9jb2wvdW5pdmVyc2FsLWhhbmRsZXIuanNcIjtcbi8qKlxuICogQ3JlYXRlIGEgbmV3IENvbm5lY3RSb3V0ZXIuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb25uZWN0Um91dGVyKHJvdXRlck9wdGlvbnMpIHtcbiAgICBjb25zdCBiYXNlID0gd2hpY2hQcm90b2NvbHMocm91dGVyT3B0aW9ucyk7XG4gICAgY29uc3QgaGFuZGxlcnMgPSBbXTtcbiAgICByZXR1cm4ge1xuICAgICAgICBoYW5kbGVycyxcbiAgICAgICAgc2VydmljZShzZXJ2aWNlLCBpbXBsZW1lbnRhdGlvbiwgb3B0aW9ucykge1xuICAgICAgICAgICAgY29uc3QgeyBwcm90b2NvbHMgfSA9IHdoaWNoUHJvdG9jb2xzKG9wdGlvbnMsIGJhc2UpO1xuICAgICAgICAgICAgaGFuZGxlcnMucHVzaCguLi5jcmVhdGVVbml2ZXJzYWxTZXJ2aWNlSGFuZGxlcnMoY3JlYXRlU2VydmljZUltcGxTcGVjKHNlcnZpY2UsIGltcGxlbWVudGF0aW9uKSwgcHJvdG9jb2xzKSk7XG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfSxcbiAgICAgICAgcnBjKHNlcnZpY2VPck1ldGhvZCwgbWV0aG9kT3JJbXBsLCBpbXBsZW1lbnRhdGlvbk9yT3B0aW9ucywgb3B0aW9ucykge1xuICAgICAgICAgICAgbGV0IHNlcnZpY2U7XG4gICAgICAgICAgICBsZXQgbWV0aG9kO1xuICAgICAgICAgICAgbGV0IGltcGw7XG4gICAgICAgICAgICBsZXQgb3B0O1xuICAgICAgICAgICAgaWYgKFwidHlwZU5hbWVcIiBpbiBzZXJ2aWNlT3JNZXRob2QpIHtcbiAgICAgICAgICAgICAgICBzZXJ2aWNlID0gc2VydmljZU9yTWV0aG9kO1xuICAgICAgICAgICAgICAgIG1ldGhvZCA9IG1ldGhvZE9ySW1wbDtcbiAgICAgICAgICAgICAgICBpbXBsID0gaW1wbGVtZW50YXRpb25Pck9wdGlvbnM7XG4gICAgICAgICAgICAgICAgb3B0ID0gb3B0aW9ucztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHNlcnZpY2UgPSBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHNlcnZpY2VPck1ldGhvZC5zZXJ2aWNlKSwgeyBtZXRob2RzOiB7fSB9KTtcbiAgICAgICAgICAgICAgICBtZXRob2QgPSBzZXJ2aWNlT3JNZXRob2Q7XG4gICAgICAgICAgICAgICAgaW1wbCA9IG1ldGhvZE9ySW1wbDtcbiAgICAgICAgICAgICAgICBvcHQgPSBpbXBsZW1lbnRhdGlvbk9yT3B0aW9ucztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHsgcHJvdG9jb2xzIH0gPSB3aGljaFByb3RvY29scyhvcHQsIGJhc2UpO1xuICAgICAgICAgICAgaGFuZGxlcnMucHVzaChjcmVhdGVVbml2ZXJzYWxNZXRob2RIYW5kbGVyKGNyZWF0ZU1ldGhvZEltcGxTcGVjKHNlcnZpY2UsIG1ldGhvZCwgaW1wbCksIHByb3RvY29scykpO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbmZ1bmN0aW9uIHdoaWNoUHJvdG9jb2xzKG9wdGlvbnMsIGJhc2UpIHtcbiAgICBpZiAoYmFzZSAmJiAhb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gYmFzZTtcbiAgICB9XG4gICAgY29uc3Qgb3B0ID0gYmFzZVxuICAgICAgICA/IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgdmFsaWRhdGVVbml2ZXJzYWxIYW5kbGVyT3B0aW9ucyhiYXNlLm9wdGlvbnMpKSwgb3B0aW9ucykgOiBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIG9wdGlvbnMpLCB2YWxpZGF0ZVVuaXZlcnNhbEhhbmRsZXJPcHRpb25zKG9wdGlvbnMgIT09IG51bGwgJiYgb3B0aW9ucyAhPT0gdm9pZCAwID8gb3B0aW9ucyA6IHt9KSk7XG4gICAgY29uc3QgcHJvdG9jb2xzID0gW107XG4gICAgaWYgKChvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuZ3JwYykgIT09IGZhbHNlKSB7XG4gICAgICAgIHByb3RvY29scy5wdXNoKGhhbmRsZXJGYWN0b3J5R3JwYyhvcHQpKTtcbiAgICB9XG4gICAgaWYgKChvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuZ3JwY1dlYikgIT09IGZhbHNlKSB7XG4gICAgICAgIHByb3RvY29scy5wdXNoKGhhbmRsZXJGYWN0b3J5R3JwY1dlYihvcHQpKTtcbiAgICB9XG4gICAgaWYgKChvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuY29ubmVjdCkgIT09IGZhbHNlKSB7XG4gICAgICAgIHByb3RvY29scy5wdXNoKGhhbmRsZXJGYWN0b3J5Q29ubmVjdChvcHQpKTtcbiAgICB9XG4gICAgaWYgKHByb3RvY29scy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgdGhyb3cgbmV3IENvbm5lY3RFcnJvcihcImNhbm5vdCBjcmVhdGUgaGFuZGxlciwgYWxsIHByb3RvY29scyBhcmUgZGlzYWJsZWRcIiwgQ29kZS5JbnZhbGlkQXJndW1lbnQpO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBvcHRpb25zOiBvcHQsXG4gICAgICAgIHByb3RvY29scyxcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@connectrpc/connect/dist/esm/router.js\n");

/***/ })

};
;